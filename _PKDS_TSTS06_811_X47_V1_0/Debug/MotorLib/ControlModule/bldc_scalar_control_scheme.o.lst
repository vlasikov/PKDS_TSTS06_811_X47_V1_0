   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "bldc_scalar_control_scheme.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.Motor0_BLDC_SCALAR_MotorParamInit,"ax",%progbits
  17              	 .align 1
  18              	 .global Motor0_BLDC_SCALAR_MotorParamInit
  19              	 .arch armv7e-m
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	Motor0_BLDC_SCALAR_MotorParamInit:
  26              	.LFB435:
  27              	 .file 1 "../MotorLib/ControlModule/bldc_scalar_control_scheme.c"
   1:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /**
   2:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * @file bldc_scalar_control_scheme.c
   3:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * @brief Control algorithm routines like control scheme, voltage compensation, stall detection
   4:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * @date 2016-08-31
   5:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
   6:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * BLDC_SCALAR_CONTROL v1.0.2 - BLDC motor control using block commutation
   7:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
   8:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * All rights reserved.
   9:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  10:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  11:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * following conditions are met:
  12:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  13:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  14:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *   disclaimer.
  15:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  16:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  17:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  18:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  19:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  20:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *   products derived from this software without specific prior written permission.
  21:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  22:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  23:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  24:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  25:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  26:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  27:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  28:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  29:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  30:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  31:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * with Infineon Technologies AG (dave@infineon.com).
  32:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
  33:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  34:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * Change History
  35:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * --------------
  36:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  37:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * 2016-08-31:
  38:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *     - Initial version
  39:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  *
  40:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  */
  41:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  42:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /**************************************************************************************************
  43:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * HEADER FILES
  44:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
  45:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #include "bldc_scalar_control_scheme.h"
  46:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  47:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /**************************************************************************************************
  48:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * MACROS
  49:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
  50:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  51:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /**************************************************************************************************
  52:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * LOCAL DATA
  53:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
  54:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  55:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /**************************************************************************************************
  56:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * LOCAL ROUTINES
  57:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
  58:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  59:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  60:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /**************************************************************************************************
  61:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  * API IMPLEMENTATION
  62:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****  **************************************************************************************************
  63:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  64:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  65:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** /* Reset and Initialize of the motor control parameters */
  66:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** void Motor0_BLDC_SCALAR_MotorParamInit(void)
  67:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** {
  28              	 .loc 1 67 1
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  68:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 0U)
  69:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   int32_t start_value;    /* ramp initial value of control scheme */
  70:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   int32_t end_value;      /* set value of the control scheme */
  71:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
  72:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 1U) && (MOTOR0_BLDC_SCALAR_ENABLE
  73:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   volatile uint32_t adc_conversion_delay;  /* wait for the conversion delay */
  74:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
  75:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Reset runtime control parameters */
  76:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.amplitude               = 0U;
  43              	 .loc 1 76 46
  44 0006 2B4B     	 ldr r3,.L6
  45 0008 0022     	 movs r2,#0
  46 000a C3F89420 	 str r2,[r3,#148]
  77:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.motor_speed             = 0;
  47              	 .loc 1 77 46
  48 000e 294B     	 ldr r3,.L6
  49 0010 0022     	 movs r2,#0
  50 0012 DA66     	 str r2,[r3,#108]
  78:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.motor_current           = 0;
  51              	 .loc 1 78 46
  52 0014 274B     	 ldr r3,.L6
  53 0016 0022     	 movs r2,#0
  54 0018 1A67     	 str r2,[r3,#112]
  79:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.motor_average_current   = 0;
  55              	 .loc 1 79 46
  56 001a 264B     	 ldr r3,.L6
  57 001c 0022     	 movs r2,#0
  58 001e 5A67     	 str r2,[r3,#116]
  80:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.dclink_voltage          = 0U;
  59              	 .loc 1 80 46
  60 0020 244B     	 ldr r3,.L6
  61 0022 0022     	 movs r2,#0
  62 0024 C3F88020 	 str r2,[r3,#128]
  81:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
  82:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_OVER_CURRENT == 1U)
  83:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.overcurrent_counter         = 0U;
  63              	 .loc 1 83 50
  64 0028 224B     	 ldr r3,.L6
  65 002a 0022     	 movs r2,#0
  66 002c C3F8AC20 	 str r2,[r3,#172]
  84:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
  85:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_BOOTSTRAP == 1U)
  86:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.bootstrap_counter           = 0U;
  87:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
  88:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_STALL_DETECTION == 1U)
  89:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.stall_detection_counter     = 0U;
  90:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.stall_check = 1U;
  91:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
  92:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_UNDER_OVER_VOLTAGE == 1U)
  93:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.over_under_voltage_counter  = 0U;
  94:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
  95:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_IDC_LINK_MEASUREMENT == 1U)
  96:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_DEMAGNET_BLANKING ==1U)
  97:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_CurrentMeasurement.demagnetization_blanking_counter = 0U;
  67              	 .loc 1 97 74
  68 0030 214B     	 ldr r3,.L6+4
  69 0032 0022     	 movs r2,#0
  70 0034 DA61     	 str r2,[r3,#28]
  98:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_ENABLE_DEMAGNET_BLANKING == 1U) */
  99:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if(MOTOR0_BLDC_SCALAR_ENABLE_IDC_LINK_CURRENT_FILTER == 1U)
 100:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_PT1_DirectCurrent.pt1_buf = 0;          /* Reset PT1 buffer */
  71              	 .loc 1 100 48
  72 0036 214B     	 ldr r3,.L6+8
  73 0038 0022     	 movs r2,#0
  74 003a 1A61     	 str r2,[r3,#16]
 101:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif/* if(MOTOR0_BLDC_SCALAR_ENABLE_IDC_LINK_CURRENT_FILTER == 1U) */
 102:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_VADC_ENABLE_IDC_LINK_MEASUREMENT == 1U) */
 103:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 104:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Reset PT1 buffer */
 105:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_VOLT_COMPENSATION == 1U)
 106:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_VOLT_COMPENSATION_FILTER == 1U)
 107:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_PT1_VoltageComp.pt1_buf = BLDC_SCALAR_PT1_VOLT_COMP_BUF_VAL;
 108:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_ENABLE_VOLT_COMPENSATION_FILTER == 1U) */
 109:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_ENABLE_VOLT_COMPENSATION == 1U) */
 110:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 111:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 112:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 1U)
 113:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_POTENTIOMETER_PT1_FILTER_ENABLE == 1U)
 114:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_PT1_Potentiometer.pt1_buf = 0;          /* Reset PT1 buffer */
 115:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_POTENTIOMETER_PT1_FILTER_ENABLE == 1U) */
 116:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 1U) */
 117:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 118:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_VADC_ENABLE_IDC_AVERAGE_MEASUREMENT == 1U) ||(MOTOR0_BLDC_SCALAR_ENABLE_AV
 119:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_IDC_AVERAGE_CURRENT_FILTER == 1U)
 120:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_PT1_AverageCurrent.pt1_buf = 0;          /* Reset PT1 buffer */
 121:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if(MOTOR0_BLDC_SCALAR_ENABLE_IDC_AVERAGE_CURRENT_FILTER == 1U) */
 122:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 123:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 124:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 0U)
 125:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_SPEED_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEME 
 126:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   start_value = Motor0_BLDC_SCALAR_SpeedControl.user_start_speed_set;
  75              	 .loc 1 126 15
  76 003c 204B     	 ldr r3,.L6+12
  77 003e 1B68     	 ldr r3,[r3]
  78 0040 7B60     	 str r3,[r7,#4]
 127:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   end_value = Motor0_BLDC_SCALAR_SpeedControl.user_speed_set;
  79              	 .loc 1 127 13
  80 0042 1F4B     	 ldr r3,.L6+12
  81 0044 5B68     	 ldr r3,[r3,#4]
  82 0046 3B60     	 str r3,[r7]
 128:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL))
 129:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   start_value = Motor0_BLDC_SCALAR_CurrentControl.user_start_current_set;
 130:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   end_value = Motor0_BLDC_SCALAR_CurrentControl.user_current_set;
 131:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_VOLTAGE_CTRL))
 132:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   start_value = Motor0_BLDC_SCALAR_VoltageControl.user_start_voltage_set;
 133:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   end_value = Motor0_BLDC_SCALAR_VoltageControl.user_voltage_set;
 134:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 135:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 136:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 137:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 1U) && (MOTOR0_BLDC_SCALAR_ENABLE
 138:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 139:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 1U)
 140:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Read potentiometer value and decide the direction */
 141:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   XMC_VADC_GROUP_QueueTriggerConversion((void *) MOTOR0_BLDC_SCALAR_VADC_ANALOG_INPUT_GRP);
 142:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   for (adc_conversion_delay = 0U; adc_conversion_delay < (uint32_t)BLDC_SCALAR_VADC_CONVERSION_DELA
 143:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 144:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 145:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 146:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_AnalogIpMeasurement();
 147:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 148:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   if (Motor0_BLDC_SCALAR.analogip_val < 0)
 149:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 150:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_NEGATIVE_DIR;
 151:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 152:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   else
 153:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 154:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_POSITIVE_DIR;
 155:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 156:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #else
 157:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Initialize the rotation direction */
 158:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_RAMP == 1U)
 159:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   if (start_value == (int32_t)0)
  83              	 .loc 1 159 6
  84 0048 7B68     	 ldr r3,[r7,#4]
  85 004a 002B     	 cmp r3,#0
  86 004c 0BD1     	 bne .L2
 160:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 161:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     if (end_value >= (int32_t)0)
  87              	 .loc 1 161 8
  88 004e 3B68     	 ldr r3,[r7]
  89 0050 002B     	 cmp r3,#0
  90 0052 03DB     	 blt .L3
 162:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     {
 163:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****       Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_POSITIVE_DIR;
  91              	 .loc 1 163 46
  92 0054 174B     	 ldr r3,.L6
  93 0056 0122     	 movs r2,#1
  94 0058 9A67     	 str r2,[r3,#120]
  95 005a 0FE0     	 b .L4
  96              	.L3:
 164:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     }
 165:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     else
 166:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     {
 167:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****       Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_NEGATIVE_DIR;
  97              	 .loc 1 167 46
  98 005c 154B     	 ldr r3,.L6
  99 005e 4FF0FF32 	 mov r2,#-1
 100 0062 9A67     	 str r2,[r3,#120]
 101 0064 0AE0     	 b .L4
 102              	.L2:
 168:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     }
 169:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 170:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   else
 171:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 172:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     if (start_value > (int32_t)0)
 103              	 .loc 1 172 8
 104 0066 7B68     	 ldr r3,[r7,#4]
 105 0068 002B     	 cmp r3,#0
 106 006a 03DD     	 ble .L5
 173:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     {
 174:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****       Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_POSITIVE_DIR;
 107              	 .loc 1 174 46
 108 006c 114B     	 ldr r3,.L6
 109 006e 0122     	 movs r2,#1
 110 0070 9A67     	 str r2,[r3,#120]
 111 0072 03E0     	 b .L4
 112              	.L5:
 175:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     }
 176:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     else
 177:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     {
 178:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****       Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_NEGATIVE_DIR;
 113              	 .loc 1 178 46
 114 0074 0F4B     	 ldr r3,.L6
 115 0076 4FF0FF32 	 mov r2,#-1
 116 007a 9A67     	 str r2,[r3,#120]
 117              	.L4:
 179:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     }
 180:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 181:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #else
 182:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   if (end_value >= (int32_t)0)
 183:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 184:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_POSITIVE_DIR;
 185:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 186:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   else
 187:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   {
 188:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****     Motor0_BLDC_SCALAR.motor_set_direction = BLDC_SCALAR_NEGATIVE_DIR;
 189:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   }
 190:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 191:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 192:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.actual_motor_direction = (Motor0_BLDC_SCALAR.motor_set_direction);
 118              	 .loc 1 192 66
 119 007c 0D4B     	 ldr r3,.L6
 120 007e 9B6F     	 ldr r3,[r3,#120]
 121              	 .loc 1 192 45
 122 0080 0C4A     	 ldr r2,.L6
 123 0082 D367     	 str r3,[r2,#124]
 193:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 194:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Initialize the start value of the ramp */
 195:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_RAMP == 1U)
 196:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 197:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Start the ramp from start value if analog input is disabled */
 198:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 0U)
 199:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_SPEED_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEME 
 200:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_Ramp.set_value = Motor0_BLDC_SCALAR_SpeedControl.user_start_speed_set;
 124              	 .loc 1 200 70
 125 0084 0E4B     	 ldr r3,.L6+12
 126 0086 1B68     	 ldr r3,[r3]
 127              	 .loc 1 200 37
 128 0088 0E4A     	 ldr r2,.L6+16
 129 008a 1360     	 str r3,[r2]
 201:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL))
 202:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_Ramp.set_value = Motor0_BLDC_SCALAR_CurrentControl.user_start_current_set;
 203:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_VOLTAGE_CTRL))
 204:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_Ramp.set_value = Motor0_BLDC_SCALAR_VoltageControl.user_start_voltage_set;
 205:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 206:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #else /* potentiometer enabled */
 207:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_SPEED_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEME 
 208:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_Ramp.set_value = (int32_t)0;
 209:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL))
 210:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_Ramp.set_value = (int32_t)0;
 211:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_VOLTAGE_CTRL))
 212:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_Ramp.set_value = (int32_t)0;
 213:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /*if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 0U)*/
 214:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 215:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 216:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif /* if (MOTOR0_BLDC_SCALAR_ENABLE_RAMP == 1U) */
 217:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 218:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   /* Reset the PI integral buffer */
 219:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_SPEED_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEME 
 220:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_SpeedControl_PI.ik = 0;
 130              	 .loc 1 220 41
 131 008c 0E4B     	 ldr r3,.L6+20
 132 008e 0022     	 movs r2,#0
 133 0090 5A60     	 str r2,[r3,#4]
 221:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_SpeedControl_PI.uk = 0;
 134              	 .loc 1 221 41
 135 0092 0D4B     	 ldr r3,.L6+20
 136 0094 0022     	 movs r2,#0
 137 0096 1A60     	 str r2,[r3]
 222:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_SpeedControl_PI.sat_state = 1U;
 138              	 .loc 1 222 48
 139 0098 0B4B     	 ldr r3,.L6+20
 140 009a 0122     	 movs r2,#1
 141 009c 5A75     	 strb r2,[r3,#21]
 223:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR.speedcontrol_rate_counter = 0U;
 142              	 .loc 1 223 48
 143 009e 054B     	 ldr r3,.L6
 144 00a0 0022     	 movs r2,#0
 145 00a2 83F8C320 	 strb r2,[r3,#195]
 224:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 225:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 226:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEM
 227:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_CurrentControl_PI.ik = 0;
 228:../MotorLib/ControlModule/bldc_scalar_control_scheme.c ****   Motor0_BLDC_SCALAR_CurrentControl_PI.sat_state = 1U;
 229:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** #endif
 230:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** 
 231:../MotorLib/ControlModule/bldc_scalar_control_scheme.c **** }
 146              	 .loc 1 231 1
 147 00a6 00BF     	 nop
 148 00a8 0C37     	 adds r7,r7,#12
 149              	.LCFI3:
 150              	 .cfi_def_cfa_offset 4
 151 00aa BD46     	 mov sp,r7
 152              	.LCFI4:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 00ac 5DF8047B 	 ldr r7,[sp],#4
 156              	.LCFI5:
 157              	 .cfi_restore 7
 158              	 .cfi_def_cfa_offset 0
 159 00b0 7047     	 bx lr
 160              	.L7:
 161 00b2 00BF     	 .align 2
 162              	.L6:
 163 00b4 00000000 	 .word Motor0_BLDC_SCALAR
 164 00b8 00000000 	 .word Motor0_BLDC_SCALAR_CurrentMeasurement
 165 00bc 00000000 	 .word Motor0_BLDC_SCALAR_PT1_DirectCurrent
 166 00c0 00000000 	 .word Motor0_BLDC_SCALAR_SpeedControl
 167 00c4 00000000 	 .word Motor0_BLDC_SCALAR_Ramp
 168 00c8 00000000 	 .word Motor0_BLDC_SCALAR_SpeedControl_PI
 169              	 .cfi_endproc
 170              	.LFE435:
 172              	 .text
 173              	.Letext0:
 174              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 175              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 176              	 .file 4 "../MotorLib/ControlModule/../MidSys/../ControlModule/bldc_scalar_pt1_filter.h"
 177              	 .file 5 "../MotorLib/ControlModule/../MidSys/bldc_scalar_current_motor.h"
 178              	 .file 6 "../MotorLib/ControlModule/../ControlModule/bldc_scalar_pi.h"
 179              	 .file 7 "../MotorLib/ControlModule/../ControlModule/bldc_scalar_ramp_generator.h"
 180              	 .file 8 "../MotorLib/ControlModule/bldc_scalar_control_scheme.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bldc_scalar_control_scheme.c
    {standard input}:17     .text.Motor0_BLDC_SCALAR_MotorParamInit:00000000 $t
    {standard input}:25     .text.Motor0_BLDC_SCALAR_MotorParamInit:00000000 Motor0_BLDC_SCALAR_MotorParamInit
    {standard input}:163    .text.Motor0_BLDC_SCALAR_MotorParamInit:000000b4 $d

UNDEFINED SYMBOLS
Motor0_BLDC_SCALAR
Motor0_BLDC_SCALAR_CurrentMeasurement
Motor0_BLDC_SCALAR_PT1_DirectCurrent
Motor0_BLDC_SCALAR_SpeedControl
Motor0_BLDC_SCALAR_Ramp
Motor0_BLDC_SCALAR_SpeedControl_PI
