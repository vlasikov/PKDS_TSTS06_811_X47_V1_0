   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "bldc_scalar_control_hall.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_POSIF_HSC_GetExpectedPattern,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_POSIF_HSC_GetExpectedPattern:
  25              	.LFB282:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_posif.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @file xmc_posif.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @date 2019-12-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-02-18:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Initial version
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-02-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Driver description added <BR>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-06-19:
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Removed version macros and declaration of GetDriverVersion API <BR>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-07-02:
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Updated XMC_POSIF_QD_GetDirection API
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2016-03-09:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Optimization of write only registers
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2017-06-24
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Added posif map connectivity file<br>
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2019-12-02:
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @endcond
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #ifndef XMC_POSIF_H
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_H
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * HEADER FILES
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_common.h"
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(POSIF0)
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_scu.h"
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_posif_map.h"
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @addtogroup XMClib XMC Peripheral Library
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @{
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @addtogroup POSIF
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @brief Position Interface Unit (POSIF) driver for the XMC microcontroller family <br>
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The POSIF unit is a flexible and powerful component for motor control systems that use
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * rotary encoders or hall sensors as feedback loop. It provides interface for motor position and v
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF unit works with CCU4 and CCU8 to enable position and velocity measurement and to control P
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Driver is divided in three POSIF functional blocks - Hall Sensor Control (POSIF_HSC), Quadrature
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * MultiChannel Mode (POSIF_MCM). <br>
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF driver features:
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Configuration structure XMC_POSIF_CONFIG_t and initialization function XMC_POSIF_Init() to c
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows to change the operating mode using XMC_POSIF_SetMode()
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows the selection of one of the four inputs (A, B, C or D) using XMC_POSIF_SelectInputSour
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * hall0, hall1 and hall2 signals. For quadrature decoder mode, inputs are phase A, phase B and ind
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Hall Sensor Control (APIs prefixed with XMC_POSIF_HSC_) <br>
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_HSC_CONFIG_t and initialization function XMC_POSIF_HSC_Ini
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Update current and expected hall pattern in shadow register using XMC_POSIF_HSC_SetHallPatte
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	- Allows immediate shadow transfer using XMC_POSIF_HSC_UpdateHallPattern()
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Quadrature Decoder (APIs prefixed with XMC_POSIF_QD_) <br>
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_QD_CONFIG_t and initialization function XMC_POSIF_QD_Init(
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Get direction of rotation using XMC_POSIF_QD_GetDirection()
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  MultiChannel Mode (APIs prefixed with XMC_POSIF_MCM_) <br>
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Configuration structure XMC_POSIF_MCM_CONFIG_t and initialization function XMC_POSIF_MCM_Init
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Update multichannel pattern in shadow register using XMC_POSIF_MCM_SetMultiChannelPattern()
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Allows immediate shadow transfer using XMC_POSIF_MCM_UpdateMultiChannelPattern()
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# User need to call respective init functions to configure POSIF operating mode. e.g to configu
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * call both XMC_POSIF_HSC_Init() and XMC_POSIF_MCM_Init().
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows to enable and disable interrupt sources and assign to service request node using XMC_P
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @note POSIF is not available on XMC11 and XMC12 devices
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @{
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * MACROS
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC47) || (UC_SERIES == XMC48) |
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0) || ((PTR)== POSIF1) ) /*< Check for val
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #else
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0))  /*< Check for valid module pointer */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * ENUMS
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines the return status, to verify the POSIF related API calls. Use type @ref XMC_POSIF_STATU
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_STATUS
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_OK = 0U,     /**< API fulfills request */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_ERROR        /**< API cannot fulfill request */
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_STATUS_t;
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable modes.Use type @ref XMC_POSIF_MODE_t for this enum.
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The members defines the function selector(FSEL) bitfields of \a PCONF register.
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_MODE
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_HALL_SENSOR = 0U, /**< Hall sensor mode */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_QD,               /**< Quadrature Decoder mode */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM,              /**< Standalone Multichannel mode */
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM_QD           /**< Quadrature Decoder + Standalone Multichannel mode */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MODE_t;
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable input ports.Use type @ref XMC_POSIF_INPUT_PORT_t for this enum.
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the respective input selector(INSELX) bitfields of \a PCONF register.
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It selects, which input is used for the phase or Hall input function (depending on the module is
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Quadrature Decoder or Hall Sensor Mode). Same enum can be used to configure pattern update signa
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \a PCONF register's \a MSETS bit field.
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_PORT
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_A = 0U, /**< INPUT-A */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_B,      /**< INPUT-B */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_C,      /**< INPUT-C */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_D,      /**< INPUT-D */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_E,      /**< INPUT-E */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_F,      /**< INPUT-F */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_G,      /**< INPUT-G */
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_H       /**< INPUT-H */
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_PORT_t;
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines active level of an input signal.Use type @ref XMC_POSIF_INPUT_ACTIVE_LEVEL_t for this e
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_ACTIVE_LEVEL
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_HIGH  = 0U, /**< Input - Active High */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_LOW         /**< Input - Active Low */
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_ACTIVE_LEVEL_t;
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF input debounce filter configuration.POSIF inputs are connected to low pass filter 
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * this enum is used to configure low pass filters cut off frequency.
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_FILTER_t for this enum.
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the low pass filter configuration(LPC) bitfield of \a PCONF register.
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_FILTER
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_DISABLED     = 0U, /**< No filtering */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_1_CLOCK_CYCLE,     /**< Filter of 1 Clock Cycle */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_2_CLOCK_CYCLE,     /**< Filter of 2 Clock Cycles */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_4_CLOCK_CYCLE,     /**< Filter of 4 Clock Cycles */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_8_CLOCK_CYCLE,     /**< Filter of 8 Clock Cycles */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_16_CLOCK_CYCLE,    /**< Filter of 16 Clock Cycles */
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_32_CLOCK_CYCLE,    /**< Filter of 32 Clock Cycles */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_64_CLOCK_CYCLE     /**< Filter of 64 Clock Cycles */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_FILTER_t;
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF events.Use type @ref XMC_POSIF_IRQ_EVENT_t for this enum.
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines available event sources.It is used to configure which event to be used for
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * interrupt generation using \a PFLGE register. [ PFLG,SPFLG,RPFLG]
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_IRQ_EVENT
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CHE                  = 0U, /**< Hall Mode : Correct Hall Event */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_WHE                  = 1U, /**< Hall Mode : Wrong Hall Event */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_HALL_INPUT           = 2U, /**< Hall Mode : Hall Input update */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_MCP_SHADOW_TRANSFER  = 4U, /**< Hall Mode + MCM Mode : MC Pattern shadow tran
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_INDX                 = 8U, /**< Quadrature Mode : Index event detection */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_ERR                  = 9U, /**< Quadrature Mode : Quadrature Phase Error */
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CNT                  = 10U, /**< Quadrature Mode : Quadrature Clock event */
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_DIR                  = 11U, /**< Quadrature Mode : Quadrature Direction chang
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_PCLK                 = 12U  /**< Quadrature Mode : Quadrature period clock ge
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_IRQ_EVENT_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF service request lines.Use type @ref XMC_POSIF_SR_ID_t for this enum.
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to connect POSIF event to required service request line.
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * in \a PFLGE register for interrupt generation.
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_SR_ID
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_0 = 0U, /**< SR-0 */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_1      /**< SR-1 */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_SR_ID_t;
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines position decoder mode selection.Use type @ref XMC_POSIF_QD_MODE_t for this enum.
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines configuration for the operation of the quadrature decoder mode.
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to configure \a QDC register.
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_MODE
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_QUADRATURE       = 0U, /**< Standard Quadrature Mode */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_DIRECTION_COUNT       /**< Direction Count Mode */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_MODE_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines motor rotation direction.Use type @ref XMC_POSIF_QD_DIR_t for this enum.
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the direction in quadrature mode.
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_DIR
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_COUNTERCLOCKWISE  = 0U, /**< Counter Clockwise */
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_CLOCKWISE              /**< Clockwise */
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_DIR_t;
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines frequency of index signal generation.Use type @ref XMC_POSIF_QD_INDEX_GENERATION_t for t
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Member represents available configuration for index marker generation using \a ICM  bit field in
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_INDEX_GENERATION
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_NEVER  = 0U, /**< Never generate the index marker signal */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ONCE,       /**< Generate only once after the first revolution */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ALWAYS      /**< Index marker generated upon every revolution */
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_INDEX_GENERATION_t;
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines trigger edge in hall sensor mode.Use type @ref XMC_POSIF_HSC_TRIGGER_EDGE_t for this en
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  It can be used to configure \a PCONF register's \a SPES and \a MSES bit fields.
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_HSC_TRIGGER_EDGE
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_RISING  = 0U, /**< Rising edge */
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_FALLING      /**< Falling edge */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_TRIGGER_EDGE_t;
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * DATA STRUCTURES
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard start*/
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma push
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma anon_unions
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma warning 586
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF peripheral register structure.Use type @ref XMC_POSIF_t for this data structure.
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef POSIF_GLOBAL_TypeDef XMC_POSIF_t;
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF quadrature decoder initialization data structure.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_QD_CONFIG_t for this data structure.
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  It used to configure Quadrature mode using \a QDC register.
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_QD_CONFIG
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_t mode;      /**< Operational Mode of the quadrature encoder and decoder */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_a: 1;       /**< Phase-A active level configuration */
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_b: 1;       /**< Phase-B active level configuration */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_leader: 1;  /**< Which of the two phase signals[Phase A or Phase B] leads the 
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 1;
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t index: 2;        /**< Index signal generation control. Use @ref XMC_POSIF_QD_INDEX_G
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 26;
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t qdc;
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_CONFIG_t;
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF hall sensor control initialization data structure.
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_HSC_CONFIG_t for this data structure.
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to initialize hall sensor mode configuration using \a PCONF register.
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_HSC_CONFIG
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 4;
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t disable_idle_signal: 1;   /**< Should idle signal be disabled upon wrong hall event?
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 11;
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger: 1;      /**< Of HSDA and HSDB, which one is to be used to trigger 
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger_edge: 1; /**< Which edge of the sampling trigger signal is to be co
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 6;
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_port: 2;    /**< Of the 4 external error ports, which one is to be co
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_enable: 1;  /**< Should external errors lead to Wrong Hall event? */
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_level: 1;   /**< What should be the active level of external error si
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t: 4;
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t hall_config;
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_CONFIG_t;
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF multi-channel mode initialization data structure.
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_MCM_CONFIG_t for this data structure.
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to initialize multi channel mode configuration using \a PCONF register.
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_MCM_CONFIG
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 5;
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_sw_update: 1; /**< should multi channel pattern updated by SW ? */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 12;
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_update_trigger: 3; /**< Of the 8 update triggers, which one is to be conside
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_trigger_edge: 1;  /**< Which edge of the pattern update trigger is to be con
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pwm_sync: 2;         /**< Of the 4 pwm sync inputs, which one is to be considered? *
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 8;
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t mcm_config;
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MCM_CONFIG_t;
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF module initialization data structure.
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_CONFIG_t for this data structure.
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  It is used to initialize POSIF module using \a PCONF register.
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_CONFIG
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t mode: 2;    /**< POSIF Operational mode. Use @ref XMC_POSIF_MODE_t to configure */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 6;
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input0: 2; /**< Choice of input for Input-1 */
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input1: 2; /**< Choice of input for Input-2 */
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input2: 2; /**< Choice of input for Input-3 */
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 14;
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t filter: 3; /**< Input filter configuration */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t: 1;
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t pconf;
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_CONFIG_t;
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard end*/
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma pop
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma warning restore
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * API Prototypes
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #ifdef __cplusplus
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** extern "C" {
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * De-asserts the POSIF module from reset and enables the clock.\n
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bit field depends upon \a peripheral.
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then it will ungate the peripheral clock.
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is the first API which application must invoke to configure POSIF.
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is internally called by XMC_POSIF_Init().
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Disable(),XMC_POSIF_Init() \n\n\n
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral);
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Asserts the POSIF module into reset and disables the clock.\n
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then in addition it will gate the peripheral clock.
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bitfield depends upon \a peripheral.
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Enable()\n\n\n
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral);
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to POSIF configuration data(operation mode,input selection and filter conf
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initialize POSIF module with \a config.\n
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures POSIF global registers.This is the first API which application must invoke to configu
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It sets up parameters common to all the POSIF modes - hall sensor,quadrature decoder and multi-c
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with mode of operation,input selection and filter configuration.
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init(),XMC_POSIF_MCM_Init() \n\n\n
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t *const config);
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to hall sensor control initialization data of type @ref XMC_POSIF_HSC_CONF
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t  Returns @ref XMC_POSIF_STATUS_OK if configured in Hall Sensor Mode
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *                             else return @ref XMC_POSIF_STATUS_ERROR.
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes hall sensor control mode.\n
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with which POSIF input trigger to be used for
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * sampling hall pattern.Configures \a PCONF register for idle signal generation for wrong hall eve
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Hall sensor mode before invocation of t
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns quadrature mode initialization status of type @ref XMC_POSIF_
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes quadrature decoder control mode.\n
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with quadrature mode using @ref XMC_POSIF_QD_MODE_t data structure.
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes \a QDC register with quadrature mode configuration using @ref XMC_POSIF_QD_CONFIG_t 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Quadrature decoder mode before invocati
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t *co
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns multi channel pattern initialization status of type @ref XMC_
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes multi channel mode in Hall mode, standalone multi-channel mode and quadrature with m
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with multi channel mode using @ref XMC_POSIF_MCM_CONFIG_t data stru
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to call XMC_POSIF_Init first before invocation of this API.
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_HALL_SENSOR, it is necessary to have called XMC_POSIF_HSC_Init before invocat
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_MCM_QD, it is necessary to have called XMC_POSIF_QD_Init before invocation of
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init(),XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init() \n\n\n
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param mode POSIF operating mode of type @ref XMC_POSIF_MODE_t
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures POSIF module for \a mode.\n
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's a\ FSEL bitfield with \a mode.
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Refer @ref XMC_POSIF_MODE_t for available options.
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF module should be in stopped state while changing the operating mode.
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop() \n\n\n
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_SetMode(XMC_POSIF_t *const peripheral, const XMC_POSIF_MODE_t mode)
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)(POSIF_PCONF_FSEL_Msk)) |
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)mode << POSIF_PCONF_FSEL_Pos) & (uint32_t)POSIF_PCONF_FSEL_Msk))
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input0 Choice of input for input 0 [0-3]
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input1 Choice of input for input 1 [0-3]
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input2 Choice of input for input 2 [0-3]
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures which input to be connected to POSIF module. \n
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's INSEL0,INSEL1,INSEL2 bit fields with source for the input connect
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \a input1, \a input2 respectively.
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures which input is used for the Phase X or Hall input X function depending upon the modul
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * set for Quadrature Decoder or Hall Sensor Mode.
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_SelectInputSource(XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input0
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                                  const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t 
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Starts POSIF \a peripheral functional state machine.\n
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Starts POSIF state machine for \a peripheral.Configures \a PRUNS register's \a SRB bit field wit
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Global properties of POSIF along with mode specific properties should have been initialized befo
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * FSM.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 562:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 563:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop(),XMC_POSIF_IsRunning() \n\n\n
 564:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 565:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Start(XMC_POSIF_t *const peripheral)
 566:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 567:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNS = (uint32_t)POSIF_PRUNS_SRB_Msk;
 568:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 569:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 570:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 571:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 572:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 573:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 574:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 575:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Stops POSIF \a peripheral functional state machine.\n
 576:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Stop POSIF functional state machine and clears current internal status of the \a peripheral.
 577:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRUNC register's \a CRB bit field with 1.
 578:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 580:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_IsRunning() \n\n\n
 581:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 582:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Stop(XMC_POSIF_t *const peripheral)
 583:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 584:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNC = (uint32_t)(POSIF_PRUNC_CRB_Msk | POSIF_PRUNC_CSM_Msk);
 585:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 586:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 587:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 588:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 589:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval bool Returns false: IDLE, true:RUNNING
 590:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 591:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 592:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns the status of POSIF module - Running or IDLE.\n
 593:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the status from \a PRUN register's \a SRB bit.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 595:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 596:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_Stop() \n\n\n
 597:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE bool XMC_POSIF_IsRunning(XMC_POSIF_t *const peripheral)
 599:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 600:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((bool)peripheral->PRUN);
 601:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 602:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 603:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 604:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 605:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns last sampled hall sensor pattern. Range : [0-7]
 606:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 607:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 608:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns last sampled hall sensor pattern of \a peripheral.\n
 609:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the last sampled hall sensor pattern from \a PDBG register's \a HSP bit field of \a pe
 610:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the last sampled hall sensor pattern by invoking 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 612:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 613:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.
 614:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 615:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 616:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetCurrentPattern(),XMC_POSIF_HSC_GetExpectedPattern() \n\n\n
 617:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 618:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_HSC_GetLastSampledPattern(XMC_POSIF_t *const peripheral)
 619:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 620:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->PDBG) & POSIF_PDBG_HSP_Msk) >> POSIF_PDBG_HSP_Pos);
 621:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 622:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 624:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 625:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns current hall sensor pattern. Range : [0-7]
 626:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 627:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 628:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns current sampled hall sensor pattern of \a peripheral.\n
 629:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the current hall sensor pattern from \a HALP register's \a HCP bit field of \a periphe
 630:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the current hall sensor pattern by invoking this 
 631:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 632:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 633:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.
 634:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 635:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 636:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetLastSampledPattern(),XMC_POSIF_HSC_GetExpectedPattern() \n\n\n
 637:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 638:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_HSC_GetCurrentPattern(XMC_POSIF_t *const peripheral)
 639:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 640:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->HALP & POSIF_HALP_HCP_Msk) >> POSIF_HALP_HCP_Pos));
 641:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 642:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 643:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 644:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 645:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns expected hall sensor pattern. Range : [0-7]
 646:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 647:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 648:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns expected hall sensor pattern of \a peripheral.\n
 649:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the expected hall sensor pattern from \a HALP register's \a HEP bit field of \a periph
 650:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the expected hall sensor pattern by invoking this
 651:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 652:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.
 654:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 655:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 656:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetLastSampledPattern(),XMC_POSIF_HSC_GetCurrentPattern() \n\n\n
 657:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 658:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_HSC_GetExpectedPattern(XMC_POSIF_t *const peripheral)
 659:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
  27              	 .loc 1 659 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 660:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->HALP & POSIF_HALP_HEP_Msk) >> POSIF_HALP_HEP_Pos));
  43              	 .loc 1 660 32
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B6B     	 ldr r3,[r3,#48]
  46              	 .loc 1 660 61
  47 000c DB08     	 lsrs r3,r3,#3
  48              	 .loc 1 660 11
  49 000e DBB2     	 uxtb r3,r3
  50 0010 03F00703 	 and r3,r3,#7
  51 0014 DBB2     	 uxtb r3,r3
 661:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
  52              	 .loc 1 661 1
  53 0016 1846     	 mov r0,r3
  54 0018 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 001a BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 001c 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0020 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE282:
  69              	 .section .text.XMC_POSIF_HSC_SetHallPatterns,"ax",%progbits
  70              	 .align 1
  71              	 .syntax unified
  72              	 .thumb
  73              	 .thumb_func
  74              	 .fpu fpv4-sp-d16
  76              	XMC_POSIF_HSC_SetHallPatterns:
  77              	.LFB285:
 662:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 663:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 664:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 665:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern The hall sensor pattern to be programmed into current pattern [0-7]
 666:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 667:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures current Hall sensor \a pattern of \a peripheral.\n
 670:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures the Current hall sensor pattern on \a HALPS shadow register's \a HCPS bit field of \a
 671:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can set at any point in time program the current hall sensor pattern by invoking th
 672:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 673:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 674:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation. It may be noted that the pattern i
 675:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * written to the shadow register. Transfer from the shadow register is based on a hardware transfe
 676:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_HSC_UpdateHallPattern().
 677:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 678:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 679:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetCurrentPattern(),XMC_POSIF_HSC_SetExpectedPattern() \n\n\n
 680:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 681:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_SetCurrentPattern(XMC_POSIF_t *const peripheral, const uint8_t p
 682:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 683:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->HALPS = ((peripheral->HALPS & ~(uint32_t)(POSIF_HALPS_HCPS_Msk)) |
 684:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)pattern << POSIF_HALPS_HCPS_Pos) & (uint32_t)POSIF_HALPS_HCPS_Ms
 685:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 686:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 687:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 688:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 689:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern The hall sensor pattern to be programmed into expected pattern [0-7]
 690:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 691:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 692:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 693:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures the expected hall sensor \a pattern of \a peripheral.\n
 694:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can set at any point in time program the hall sensor expected patterns by invoking 
 695:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures the expected hall sensor pattern on \a HALPS shadow register's \a HEPS bit field of \
 696:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 697:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 698:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.It may be noted that the pattern is
 699:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * written to the shadow register. Transfer from the shadow register is based on a hardware transfe
 700:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_HSC_UpdateHallPattern().
 701:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 702:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetExpectedPattern() \n\n\n
 704:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 705:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_SetExpectedPattern(XMC_POSIF_t *const peripheral, const uint8_t 
 706:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 707:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->HALPS = ((peripheral->HALPS & ~(uint32_t)(POSIF_HALPS_HEPS_Msk)) |
 708:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)pattern << POSIF_HALPS_HEPS_Pos) & (uint32_t)POSIF_HALPS_HEPS_Ms
 709:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 710:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 711:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 712:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 713:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern_mask The hall sensor pattern mask [0-63] Format of mask: (expected_pattern << 3) 
 714:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 715:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 716:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 717:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures current and expected hall pattern of \a peripheral. \n
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a HALPS register with the Current and Expected hall sensor patterns in one operation
 719:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time program the current and expected hall sensor pattern by in
 720:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 721:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 722:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.  It may be noted that the pattern 
 723:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * written to the shadow register. Transfer from the shadow register is based on a hardware transfe
 724:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_HSC_UpdateHallPattern().
 725:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 726:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 727:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_SetExpectedPattern(),XMC_POSIF_HSC_SetCurrentPattern() \n\n\n
 728:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 729:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_SetHallPatterns(XMC_POSIF_t *const peripheral, const uint8_t pat
 730:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
  78              	 .loc 1 730 1
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 83B0     	 sub sp,sp,#12
  88              	.LCFI7:
  89              	 .cfi_def_cfa_offset 16
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI8:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  94 0008 0B46     	 mov r3,r1
  95 000a FB70     	 strb r3,[r7,#3]
 731:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->HALPS = (uint32_t)(pattern_mask & (POSIF_HALPS_HCPS_Msk | POSIF_HALPS_HEPS_Msk));
  96              	 .loc 1 731 23
  97 000c FB78     	 ldrb r3,[r7,#3]
  98 000e 03F03F02 	 and r2,r3,#63
  99              	 .loc 1 731 21
 100 0012 7B68     	 ldr r3,[r7,#4]
 101 0014 5A63     	 str r2,[r3,#52]
 732:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 102              	 .loc 1 732 1
 103 0016 00BF     	 nop
 104 0018 0C37     	 adds r7,r7,#12
 105              	.LCFI9:
 106              	 .cfi_def_cfa_offset 4
 107 001a BD46     	 mov sp,r7
 108              	.LCFI10:
 109              	 .cfi_def_cfa_register 13
 110              	 
 111 001c 5DF8047B 	 ldr r7,[sp],#4
 112              	.LCFI11:
 113              	 .cfi_restore 7
 114              	 .cfi_def_cfa_offset 0
 115 0020 7047     	 bx lr
 116              	 .cfi_endproc
 117              	.LFE285:
 119              	 .section .text.XMC_POSIF_HSC_UpdateHallPattern,"ax",%progbits
 120              	 .align 1
 121              	 .syntax unified
 122              	 .thumb
 123              	 .thumb_func
 124              	 .fpu fpv4-sp-d16
 126              	XMC_POSIF_HSC_UpdateHallPattern:
 127              	.LFB286:
 733:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 734:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 735:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 736:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 737:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 738:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 739:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Manually performs shadow transfer of hall sensor patterns.\n
 740:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a MCMS register's \a STHR bit field with 1.
 741:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Setting this bit to 1 leads to an immediate update of the fields \a HALP.HCP(Current pattern) an
 742:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 744:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The transfer of hall sensor pattern shadow registers content to the sensor pattern register happ
 745:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * conditions. A hardware trigger starts the shadow transfer. Alternatively, the shadow transfer ca
 746:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * by application software by means of invocation of this API.
 747:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 748:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 749:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_SetHallPatterns() \n\n\n
 750:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 751:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_UpdateHallPattern(XMC_POSIF_t *const peripheral)
 752:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 128              	 .loc 1 752 1
 129              	 .cfi_startproc
 130              	 
 131              	 
 132              	 
 133 0000 80B4     	 push {r7}
 134              	.LCFI12:
 135              	 .cfi_def_cfa_offset 4
 136              	 .cfi_offset 7,-4
 137 0002 83B0     	 sub sp,sp,#12
 138              	.LCFI13:
 139              	 .cfi_def_cfa_offset 16
 140 0004 00AF     	 add r7,sp,#0
 141              	.LCFI14:
 142              	 .cfi_def_cfa_register 7
 143 0006 7860     	 str r0,[r7,#4]
 753:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->MCMS = (uint32_t)POSIF_MCMS_STHR_Msk;
 144              	 .loc 1 753 20
 145 0008 7B68     	 ldr r3,[r7,#4]
 146 000a 0222     	 movs r2,#2
 147 000c 9A64     	 str r2,[r3,#72]
 754:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 148              	 .loc 1 754 1
 149 000e 00BF     	 nop
 150 0010 0C37     	 adds r7,r7,#12
 151              	.LCFI15:
 152              	 .cfi_def_cfa_offset 4
 153 0012 BD46     	 mov sp,r7
 154              	.LCFI16:
 155              	 .cfi_def_cfa_register 13
 156              	 
 157 0014 5DF8047B 	 ldr r7,[sp],#4
 158              	.LCFI17:
 159              	 .cfi_restore 7
 160              	 .cfi_def_cfa_offset 0
 161 0018 7047     	 bx lr
 162              	 .cfi_endproc
 163              	.LFE286:
 165              	 .section .text.XMC_POSIF_MCM_SetMultiChannelPattern,"ax",%progbits
 166              	 .align 1
 167              	 .syntax unified
 168              	 .thumb
 169              	 .thumb_func
 170              	 .fpu fpv4-sp-d16
 172              	XMC_POSIF_MCM_SetMultiChannelPattern:
 173              	.LFB287:
 755:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 756:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 757:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 758:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern The 16b multi-channel pattern [0-65535]
 759:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 760:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 761:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 762:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a MCSM register with Multi-Channel Pattern.\n
 763:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This 16b multi-channel pattern which controls the 16 outputs of all slices of a CCU8 module.
 764:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Transfer from the shadow register is based on a hardware transfer trigger
 765:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_MCM_UpdateMultiChannelPattern().
 766:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Every time that a Multi-Channel pattern transfer is triggered, this value is passed into the fie
 767:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 768:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 769:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It may be noted that the pattern is merely written to the shadow register.
 770:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 771:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 772:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_GetMultiChannelPattern() \n\n\n
 773:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 774:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_MCM_SetMultiChannelPattern(XMC_POSIF_t *const peripheral, const uint
 775:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 174              	 .loc 1 775 1
 175              	 .cfi_startproc
 176              	 
 177              	 
 178              	 
 179 0000 80B4     	 push {r7}
 180              	.LCFI18:
 181              	 .cfi_def_cfa_offset 4
 182              	 .cfi_offset 7,-4
 183 0002 83B0     	 sub sp,sp,#12
 184              	.LCFI19:
 185              	 .cfi_def_cfa_offset 16
 186 0004 00AF     	 add r7,sp,#0
 187              	.LCFI20:
 188              	 .cfi_def_cfa_register 7
 189 0006 7860     	 str r0,[r7,#4]
 190 0008 0B46     	 mov r3,r1
 191 000a 7B80     	 strh r3,[r7,#2]
 776:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->MCSM = pattern;
 192              	 .loc 1 776 20
 193 000c 7A88     	 ldrh r2,[r7,#2]
 194 000e 7B68     	 ldr r3,[r7,#4]
 195 0010 5A64     	 str r2,[r3,#68]
 777:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 196              	 .loc 1 777 1
 197 0012 00BF     	 nop
 198 0014 0C37     	 adds r7,r7,#12
 199              	.LCFI21:
 200              	 .cfi_def_cfa_offset 4
 201 0016 BD46     	 mov sp,r7
 202              	.LCFI22:
 203              	 .cfi_def_cfa_register 13
 204              	 
 205 0018 5DF8047B 	 ldr r7,[sp],#4
 206              	.LCFI23:
 207              	 .cfi_restore 7
 208              	 .cfi_def_cfa_offset 0
 209 001c 7047     	 bx lr
 210              	 .cfi_endproc
 211              	.LFE287:
 213              	 .section .text.XMC_POSIF_MCM_GetMultiChannelPattern,"ax",%progbits
 214              	 .align 1
 215              	 .syntax unified
 216              	 .thumb
 217              	 .thumb_func
 218              	 .fpu fpv4-sp-d16
 220              	XMC_POSIF_MCM_GetMultiChannelPattern:
 221              	.LFB288:
 778:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 779:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 780:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 781:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint16_t Returns configured multi channel pattern
 782:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 783:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 784:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns configured multi channel pattern of \a peripheral. \n
 785:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the Multi-Channel Pattern from \a MCM register's MCMP bit field of \a peripheral
 786:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the multi-channel pattern by invoking this API.
 787:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 788:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 789:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_SetMultiChannelPattern() \n\n\n
 790:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 791:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint16_t XMC_POSIF_MCM_GetMultiChannelPattern(XMC_POSIF_t *const peripheral)
 792:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 222              	 .loc 1 792 1
 223              	 .cfi_startproc
 224              	 
 225              	 
 226              	 
 227 0000 80B4     	 push {r7}
 228              	.LCFI24:
 229              	 .cfi_def_cfa_offset 4
 230              	 .cfi_offset 7,-4
 231 0002 83B0     	 sub sp,sp,#12
 232              	.LCFI25:
 233              	 .cfi_def_cfa_offset 16
 234 0004 00AF     	 add r7,sp,#0
 235              	.LCFI26:
 236              	 .cfi_def_cfa_register 7
 237 0006 7860     	 str r0,[r7,#4]
 793:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint16_t)(peripheral->MCM & (uint32_t)POSIF_MCM_MCMP_Msk));
 238              	 .loc 1 793 32
 239 0008 7B68     	 ldr r3,[r7,#4]
 240 000a 1B6C     	 ldr r3,[r3,#64]
 241              	 .loc 1 793 11
 242 000c 9BB2     	 uxth r3,r3
 794:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 243              	 .loc 1 794 1
 244 000e 1846     	 mov r0,r3
 245 0010 0C37     	 adds r7,r7,#12
 246              	.LCFI27:
 247              	 .cfi_def_cfa_offset 4
 248 0012 BD46     	 mov sp,r7
 249              	.LCFI28:
 250              	 .cfi_def_cfa_register 13
 251              	 
 252 0014 5DF8047B 	 ldr r7,[sp],#4
 253              	.LCFI29:
 254              	 .cfi_restore 7
 255              	 .cfi_def_cfa_offset 0
 256 0018 7047     	 bx lr
 257              	 .cfi_endproc
 258              	.LFE288:
 260              	 .section .text.XMC_POSIF_MCM_GetShadowMultiChannelPattern,"ax",%progbits
 261              	 .align 1
 262              	 .syntax unified
 263              	 .thumb
 264              	 .thumb_func
 265              	 .fpu fpv4-sp-d16
 267              	XMC_POSIF_MCM_GetShadowMultiChannelPattern:
 268              	.LFB289:
 795:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 796:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 797:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 798:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint16_t Returns configured multi channel pattern present in shadow transfer register
 799:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 801:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns configured multi channel pattern in shadow register of \a peripheral. \n
 802:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the Multi-Channel Pattern from \a MCSM shadow register's \a MCMPS bit field.
 803:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the multi-channel pattern by invoking this API.
 804:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 805:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It can be used when MCM is enabled.
 806:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 807:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 808:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_SetMultiChannelPattern() \n\n\n
 809:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 810:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint16_t XMC_POSIF_MCM_GetShadowMultiChannelPattern(XMC_POSIF_t *const peripheral)
 811:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 269              	 .loc 1 811 1
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274 0000 80B4     	 push {r7}
 275              	.LCFI30:
 276              	 .cfi_def_cfa_offset 4
 277              	 .cfi_offset 7,-4
 278 0002 83B0     	 sub sp,sp,#12
 279              	.LCFI31:
 280              	 .cfi_def_cfa_offset 16
 281 0004 00AF     	 add r7,sp,#0
 282              	.LCFI32:
 283              	 .cfi_def_cfa_register 7
 284 0006 7860     	 str r0,[r7,#4]
 812:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint16_t)(peripheral->MCSM & (uint32_t)POSIF_MCSM_MCMPS_Msk));
 285              	 .loc 1 812 32
 286 0008 7B68     	 ldr r3,[r7,#4]
 287 000a 5B6C     	 ldr r3,[r3,#68]
 288              	 .loc 1 812 11
 289 000c 9BB2     	 uxth r3,r3
 813:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 290              	 .loc 1 813 1
 291 000e 1846     	 mov r0,r3
 292 0010 0C37     	 adds r7,r7,#12
 293              	.LCFI33:
 294              	 .cfi_def_cfa_offset 4
 295 0012 BD46     	 mov sp,r7
 296              	.LCFI34:
 297              	 .cfi_def_cfa_register 13
 298              	 
 299 0014 5DF8047B 	 ldr r7,[sp],#4
 300              	.LCFI35:
 301              	 .cfi_restore 7
 302              	 .cfi_def_cfa_offset 0
 303 0018 7047     	 bx lr
 304              	 .cfi_endproc
 305              	.LFE289:
 307              	 .section .text.XMC_POSIF_MCM_UpdateMultiChannelPattern,"ax",%progbits
 308              	 .align 1
 309              	 .syntax unified
 310              	 .thumb
 311              	 .thumb_func
 312              	 .fpu fpv4-sp-d16
 314              	XMC_POSIF_MCM_UpdateMultiChannelPattern:
 315              	.LFB290:
 814:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 815:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 816:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 817:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 818:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 819:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 820:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Performs shadow transfer of the Multi-Channel Pattern register by configuring \a MCMS register's
 821:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 822:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 823:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Transfer multi-channel pattern shadow registers content to the actual pattern register of \a per
 824:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The transfer of multi-channel pattern shadow registers content to the actual pattern register ha
 825:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * conditions. A hardware trigger starts the shadow transfer. Alternatively, the shadow transfer ca
 826:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * by application software by means of invocation of this API.
 827:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 828:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 829:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_SetMultiChannelPattern() \n\n\n
 830:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 831:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_MCM_UpdateMultiChannelPattern(XMC_POSIF_t *const peripheral)
 832:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 316              	 .loc 1 832 1
 317              	 .cfi_startproc
 318              	 
 319              	 
 320              	 
 321 0000 80B4     	 push {r7}
 322              	.LCFI36:
 323              	 .cfi_def_cfa_offset 4
 324              	 .cfi_offset 7,-4
 325 0002 83B0     	 sub sp,sp,#12
 326              	.LCFI37:
 327              	 .cfi_def_cfa_offset 16
 328 0004 00AF     	 add r7,sp,#0
 329              	.LCFI38:
 330              	 .cfi_def_cfa_register 7
 331 0006 7860     	 str r0,[r7,#4]
 833:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->MCMS |= (uint32_t)POSIF_MCMS_STMR_Msk;
 332              	 .loc 1 833 20
 333 0008 7B68     	 ldr r3,[r7,#4]
 334 000a 9B6C     	 ldr r3,[r3,#72]
 335 000c 43F00402 	 orr r2,r3,#4
 336 0010 7B68     	 ldr r3,[r7,#4]
 337 0012 9A64     	 str r2,[r3,#72]
 834:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 338              	 .loc 1 834 1
 339 0014 00BF     	 nop
 340 0016 0C37     	 adds r7,r7,#12
 341              	.LCFI39:
 342              	 .cfi_def_cfa_offset 4
 343 0018 BD46     	 mov sp,r7
 344              	.LCFI40:
 345              	 .cfi_def_cfa_register 13
 346              	 
 347 001a 5DF8047B 	 ldr r7,[sp],#4
 348              	.LCFI41:
 349              	 .cfi_restore 7
 350              	 .cfi_def_cfa_offset 0
 351 001e 7047     	 bx lr
 352              	 .cfi_endproc
 353              	.LFE290:
 355              	 .section .text.XMC_POSIF_DisableEvent,"ax",%progbits
 356              	 .align 1
 357              	 .syntax unified
 358              	 .thumb
 359              	 .thumb_func
 360              	 .fpu fpv4-sp-d16
 362              	XMC_POSIF_DisableEvent:
 363              	.LFB297:
 835:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 836:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 837:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 838:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 839:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 840:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 841:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Enables update of the Multi-Channel Pattern by software in standalone multi-channel mode.\n
 842:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Enabling update of multi-channel pattern happens under two conditions. A hardware trigger enable
 843:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Alternatively, this can be enabled by software by means of invocation of this API.
 844:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 845:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 846:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The update is not done immediately due to the fact that the trigger that synchronizes the update
 847:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * still needed.
 848:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 849:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 850:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_UpdateMultiChannelPattern() \n\n\n
 851:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 852:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_MCM_EnableMultiChannelPatternUpdate(XMC_POSIF_t *const peripheral)
 853:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 854:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->MCMS |= (uint32_t)POSIF_MCMS_MNPS_Msk;
 855:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 856:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 857:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 858:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 859:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_QD_DIR_t Return direction of revolution of the motor of type @ref XMC_POSIF_QD
 860:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 861:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 862:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns the direction of revolution of the motor.\n
 863:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves direction from \a QDC register's \a DVAL bit field in quadrature mode.
 864:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the direction of rotation by invoking this API.
 865:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 866:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 867:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the quadrature decoder mode of operation.
 868:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 869:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 870:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE XMC_POSIF_QD_DIR_t XMC_POSIF_QD_GetDirection(XMC_POSIF_t *const peripheral)
 871:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 872:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((XMC_POSIF_QD_DIR_t)((peripheral->QDC & POSIF_QDC_DVAL_Msk) >> POSIF_QDC_DVAL_Pos));
 873:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 874:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 875:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 876:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 877:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns current state of quadrature decoder[Phase B,Phase A]
 878:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 879:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 880:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns the current state of phase signals in quadrature decoder mode of \a peripheral. \n
 881:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves current state of the quadrature decoder from \a PDBG register's \a QCSV bit fields.
 882:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the current state of Phase A and Phase B signals
 883:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * by invoking this API.
 884:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 885:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 886:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the quadrature decoder mode of operation.
 887:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 888:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 889:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  XMC_POSIF_QD_GetPreviousState() \n\n\n
 890:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 891:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_QD_GetCurrentState(XMC_POSIF_t *const peripheral)
 892:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 893:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->PDBG & POSIF_PDBG_QCSV_Msk) >> POSIF_PDBG_QCSV_Pos));
 894:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 895:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 896:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 897:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 898:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns previous state of quadrature decoder[Phase B,Phase A]
 899:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 900:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 901:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns the previous state of phase signals in quadrature decoder mode of \a peripheral. \n
 902:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves previous state of the quadrature decoder from \a PDBG register's \a QPSV bit fields.
 903:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the previous state of Phase A and Phase B signals
 904:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * by invoking this API.
 905:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 906:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 907:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the quadrature decoder mode of operation.
 908:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 909:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 910:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_QD_GetCurrentState() \n\n\n
 911:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 912:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_QD_GetPreviousState(XMC_POSIF_t *const peripheral)
 913:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 914:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->PDBG & POSIF_PDBG_QPSV_Msk) >> POSIF_PDBG_QPSV_Pos));
 915:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 916:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 917:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 918:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 919:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns the index value.[1 - New rotation started, 0 - In-between]
 920:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 921:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 922:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns the current index value in quadrature decoder mode of \a peripheral. \n
 923:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves current index signal value of the quadrature decoder from \a PDBG register's \a IVAL b
 924:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the current index signal value of the quadrature 
 925:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * invoking this API.
 926:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 927:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 928:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the quadrature decoder mode of operation.
 929:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 930:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 931:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_QD_GetCurrentIndexValue(XMC_POSIF_t *const peripheral)
 932:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 933:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->PDBG & POSIF_PDBG_IVAL_Msk) >> POSIF_PDBG_IVAL_Pos));
 934:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 935:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 936:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 937:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 938:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param event Event to be enabled
 939:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 940:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 941:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 942:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Enables \a event generation of \a peripheral. \n
 943:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Enables an IRQ generation capable \a event by configuring 1 to \a PFLGE register's \a event bit 
 944:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 945:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 946:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_DisableEvent() \n\n\n
 947:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 948:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_EnableEvent(XMC_POSIF_t *const peripheral, const XMC_POSIF_IRQ_EVENT
 949:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 950:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PFLGE |= (uint32_t)1 << (uint8_t)event;
 951:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 952:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 953:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 954:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @brief Disables an IRQ generation capable event
 955:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 956:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param event Event to be disabled
 957:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 958:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 959:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 960:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Disables \a event generation of \a peripheral.\n
 961:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Disables an IRQ generation capable \a event by configuring 0 to \a PFLGE register's \a event bit
 962:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 963:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  \par<b>Related APIs:</b><BR>
 964:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  XMC_POSIF_EnableEvent() \n\n\n
 965:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 966:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_DisableEvent(XMC_POSIF_t *const peripheral, const XMC_POSIF_IRQ_EVEN
 967:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 364              	 .loc 1 967 1
 365              	 .cfi_startproc
 366              	 
 367              	 
 368              	 
 369 0000 80B4     	 push {r7}
 370              	.LCFI42:
 371              	 .cfi_def_cfa_offset 4
 372              	 .cfi_offset 7,-4
 373 0002 83B0     	 sub sp,sp,#12
 374              	.LCFI43:
 375              	 .cfi_def_cfa_offset 16
 376 0004 00AF     	 add r7,sp,#0
 377              	.LCFI44:
 378              	 .cfi_def_cfa_register 7
 379 0006 7860     	 str r0,[r7,#4]
 380 0008 0B46     	 mov r3,r1
 381 000a FB70     	 strb r3,[r7,#3]
 968:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PFLGE &= ~((uint32_t)1 << (uint8_t)event);
 382              	 .loc 1 968 21
 383 000c 7B68     	 ldr r3,[r7,#4]
 384 000e 5A6F     	 ldr r2,[r3,#116]
 385              	 .loc 1 968 41
 386 0010 FB78     	 ldrb r3,[r7,#3]
 387              	 .loc 1 968 38
 388 0012 0121     	 movs r1,#1
 389 0014 01FA03F3 	 lsl r3,r1,r3
 390              	 .loc 1 968 24
 391 0018 DB43     	 mvns r3,r3
 392              	 .loc 1 968 21
 393 001a 1A40     	 ands r2,r2,r3
 394 001c 7B68     	 ldr r3,[r7,#4]
 395 001e 5A67     	 str r2,[r3,#116]
 969:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 396              	 .loc 1 969 1
 397 0020 00BF     	 nop
 398 0022 0C37     	 adds r7,r7,#12
 399              	.LCFI45:
 400              	 .cfi_def_cfa_offset 4
 401 0024 BD46     	 mov sp,r7
 402              	.LCFI46:
 403              	 .cfi_def_cfa_register 13
 404              	 
 405 0026 5DF8047B 	 ldr r7,[sp],#4
 406              	.LCFI47:
 407              	 .cfi_restore 7
 408              	 .cfi_def_cfa_offset 0
 409 002a 7047     	 bx lr
 410              	 .cfi_endproc
 411              	.LFE297:
 413              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern,"ax",%progbits
 414              	 .align 1
 415              	 .syntax unified
 416              	 .thumb
 417              	 .thumb_func
 418              	 .fpu fpv4-sp-d16
 420              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:
 421              	.LFB412:
 422              	 .file 2 "../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h"
   1:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
   2:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @file bldc_scalar_speed_pos_hall.h
   3:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief Speed and position interface using 3 hall sensor feedback. This uses floating prescaler f
   4:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @date 2016-08-31
   5:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
   6:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
   7:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * BLDC_SCALAR_CONTROL v1.0.2 - BLDC motor control using block commutation
   8:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
   9:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * All rights reserved.
  10:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  11:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  12:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * following conditions are met:
  13:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  14:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  15:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   disclaimer.
  16:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  17:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  18:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  19:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  20:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  21:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   products derived from this software without specific prior written permission.
  22:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  23:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  24:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  25:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  26:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  27:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  28:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  29:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  31:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  32:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * with Infineon Technologies AG (dave@infineon.com).
  33:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
  34:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  35:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Change History
  36:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * --------------
  37:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  38:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  39:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * 2016-08-31:
  40:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *     - Initial version
  41:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  42:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @endcond
  43:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  44:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  45:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  46:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @addtogroup BLDC_SCALAR BLDC Motor Control
  47:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @{
  48:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  49:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  50:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  51:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @addtogroup MidSys
  52:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @{
  53:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  54:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #ifndef BLDC_SCALAR_SPEED_POS_HALL_H_
  55:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_SPEED_POS_HALL_H_
  56:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  57:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  58:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * HEADER FILES
  59:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
  60:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #include "../MCUInit/ccu4.h"
  61:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #include "../MCUInit/gpio.h"
  62:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #include "../MCUInit/posif.h"
  63:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  64:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  65:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  66:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * MACROS
  67:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
  68:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /** This defines speed accumulation limit value*/
  69:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_SPEED_POS_HALL_SPEEDACCUMLIMITCHECK             (5U)
  70:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /** Maximum period value of CCU4 slice */
  71:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_SPEED_POS_HALL_CAP_COMP_VAL                     (0xFFFFU)
  72:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /** Capture register number */
  73:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_HALL_CAPTURE_REGITSER                           (3U)
  74:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  75:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  76:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * ENUMS
  77:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
  78:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  79:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief return value of API
  80:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  81:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** typedef enum BLDC_SCALAR_SPEED_POS_HALL_STATUS
  82:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
  83:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS = 0U,   /*!< API execution is successful */
  84:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   BLDC_SCALAR_SPEED_POS_HALL_STATUS_FAILURE        /*!< API execution is failed */
  85:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  86:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** } BLDC_SCALAR_SPEED_POS_HALL_STATUS_t;
  87:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  88:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  89:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * DATA STRUCTURES
  90:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
  91:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  92:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief structure to get the position and speed
  93:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  94:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** typedef struct BLDC_SCALAR_SPEED_POS_HALL
  95:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
  96:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t captureval[6];      /*!< captured time value between two correct hall events */
  97:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t capval;             /*!< Captured time Value */
  98:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t speedcheck;         /*!< whether motor speed can be calculated */
  99:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t speedaccum;         /*!< accumulated speed of the motor for 6 samples */
 100:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t speed_constant;     /*!< constant value used for speed calculation */
 101:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t index;               /*!< index of an array of hall pattern */
 102:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t speedindex;          /*!< index of an array of the speed capture variables */
 103:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** } BLDC_SCALAR_SPEED_POS_HALL_t;
 104:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 105:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 106:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
 107:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * EXTERN
 108:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
 109:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** extern BLDC_SCALAR_SPEED_POS_HALL_t Motor0_BLDC_SCALAR_SPEED_POS_HALL;
 110:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** extern uint32_t BLDC_SCALAR_SPEED_POS_HALL_Cap_Array[16];
 111:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 112:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #ifdef __cplusplus
 113:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****    extern "C" {
 114:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #endif
 115:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
 116:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * API Prototypes
 117:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
 118:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 119:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 120:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 121:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 122:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Return the current state of the POSIF input pins to which hall sensors are connected.
 123:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 124:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** uint32_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallPosition(void);
 125:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 126:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 127:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 128:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 129:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 130:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Initializes the peripheral required for position and speed identification.
 131:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * This initializes the POSIF and CCU4 module.
 132:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 133:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** void Motor0_BLDC_SCALAR_SPEED_POS_HALL_Init(void);
 134:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 135:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 136:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 137:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 138:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 139:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  Starts CCU4 and POSIF modules required for position and speed detection.
 140:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  It also reinitializes the speed calculation related variables.
 141:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 142:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** void Motor0_BLDC_SCALAR_SPEED_POS_HALL_Start(void);
 143:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 144:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 145:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 146:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 147:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 148:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  Stops CCU4 and POSIF modules required for position and speed detection.
 149:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 150:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** void Motor0_BLDC_SCALAR_SPEED_POS_HALL_Stop(void);
 151:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 152:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 153:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 154:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return none <br>
 155:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 156:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 157:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Resets variables related to speed calculation.
 158:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 159:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_ClearSpeedFilter(void)
 160:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 161:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex = 0U;
 162:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedcheck = 0U;
 163:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[0] = 0U;
 164:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[1] = 0U;
 165:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[2] = 0U;
 166:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[3] = 0U;
 167:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[4] = 0U;
 168:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[5] = 0U;
 169:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval = Motor0_BLDC_SCALAR_SPEED_POS_HALL.speed_constant;
 170:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum = 0U;
 171:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 172:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 173:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 174:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param capval captured value calculated from captured timer and prescaler
 175:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return BLDC_SCALAR_SPEED_POS_HALL_STATUS_t status of API execution \n
 176:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * BLDC_SCALAR_SPEED_POS_HALL_STATUS_FAILURE: if valid capture value is not available \n
 177:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS: if valid capture value is available \n
 178:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  <br>
 179:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 180:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 181:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  Calculates the captured time from timer value and current prescaler value in capture register
 182:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 183:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Execution Time:</b><br>
 184:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * <b>1.7 uSec </b>using O3 optimization level
 185:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 186:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE BLDC_SCALAR_SPEED_POS_HALL_STATUS_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureVa
 187:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 188:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   BLDC_SCALAR_SPEED_POS_HALL_STATUS_t status = BLDC_SCALAR_SPEED_POS_HALL_STATUS_FAILURE;  /* retur
 189:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t temp_capval; /* capture register value */
 190:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t curr_psc;    /* prescaler value */
 191:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 192:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   temp_capval = (uint32_t)XMC_CCU4_SLICE_GetCaptureRegisterValue(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SL
 193:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 194:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /*If Full flag is set, read the captured value and save in the dynamic handle */
 195:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   if (((temp_capval & (uint32_t)CCU4_CC4_CV_FFL_Msk) >> CCU4_CC4_CV_FFL_Pos) == 1U)
 196:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 197:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     curr_psc = ((temp_capval & (uint32_t)CCU4_CC4_CV_FPCV_Msk) >> (uint32_t)CCU4_CC4_CV_FPCV_Pos);
 198:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     temp_capval = temp_capval & BLDC_SCALAR_SPEED_POS_HALL_CAP_COMP_VAL;
 199:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval =
 200:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****         (uint32_t)(BLDC_SCALAR_SPEED_POS_HALL_Cap_Array[(curr_psc - MOTOR0_BLDC_SCALAR_CCU4_PRESCAL
 201:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****         (((uint32_t)1 << (curr_psc - MOTOR0_BLDC_SCALAR_CCU4_PRESCALER)) * (uint32_t)temp_capval));
 202:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     *capval = (uint32_t)Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval;
 203:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     status = BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS;
 204:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 205:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   else
 206:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 207:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     *capval = 0U;
 208:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 209:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 210:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return (status);
 211:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 212:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 213:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 214:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param capval time between two hall events (60 degrees)
 215:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param speed Calculated electrical speed in RPM
 216:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None
 217:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  <br>
 218:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 219:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 220:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Calculates the speed based upon the captured time value between two correct hall events.
 221:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * It uses the floating prescaler for better resolution and low speed value.
 222:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 223:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Execution Time:</b><br>
 224:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * <b>9.5 uSec </b>using O3 optimization level
 225:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 226:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /*This function will calculate the speed based upon the captured time values.*/
 227:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** RAM_ATTRIBUTE __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_SpeedCalculation(uint32_t capv
 228:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 229:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /* Moving average to calculate the speed */
 230:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum -= Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[Moto
 231:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex] = capv
 232:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum += Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[Moto
 233:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 234:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex++;
 235:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 236:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /* Speed calculation starts after 6 hall events */
 237:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   if (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex > BLDC_SCALAR_SPEED_POS_HALL_SPEEDACCUMLIMITCHEC
 238:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 239:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex = 0U;
 240:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedcheck = 1U;
 241:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 242:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 243:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   if (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedcheck == 1U)
 244:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 245:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     if (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum > 0U)
 246:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     {
 247:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****       *speed = (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speed_constant) / (Motor0_BLDC_SCALAR_SPEED_POS_H
 248:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     }
 249:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 250:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   else
 251:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 252:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     *speed = 0U;
 253:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 254:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 255:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 256:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param pattern The 16b multi-channel pattern [0-65535]
 257:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None
 258:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 259:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 260:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Configures \a MCSM register with Multi-Channel Pattern.\n
 261:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 262:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(uint16_t pattern)
 263:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 423              	 .loc 2 263 1
 424              	 .cfi_startproc
 425              	 
 426              	 
 427 0000 80B5     	 push {r7,lr}
 428              	.LCFI48:
 429              	 .cfi_def_cfa_offset 8
 430              	 .cfi_offset 7,-8
 431              	 .cfi_offset 14,-4
 432 0002 82B0     	 sub sp,sp,#8
 433              	.LCFI49:
 434              	 .cfi_def_cfa_offset 16
 435 0004 00AF     	 add r7,sp,#0
 436              	.LCFI50:
 437              	 .cfi_def_cfa_register 7
 438 0006 0346     	 mov r3,r0
 439 0008 FB80     	 strh r3,[r7,#6]
 264:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 265:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_MCM_SetMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE, pattern);
 440              	 .loc 2 265 3
 441 000a FB88     	 ldrh r3,[r7,#6]
 442 000c 1946     	 mov r1,r3
 443 000e 0348     	 ldr r0,.L13
 444 0010 FFF7FEFF 	 bl XMC_POSIF_MCM_SetMultiChannelPattern
 266:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 267:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 445              	 .loc 2 267 1
 446 0014 00BF     	 nop
 447 0016 0837     	 adds r7,r7,#8
 448              	.LCFI51:
 449              	 .cfi_def_cfa_offset 8
 450 0018 BD46     	 mov sp,r7
 451              	.LCFI52:
 452              	 .cfi_def_cfa_register 13
 453              	 
 454 001a 80BD     	 pop {r7,pc}
 455              	.L14:
 456              	 .align 2
 457              	.L13:
 458 001c 00800240 	 .word 1073905664
 459              	 .cfi_endproc
 460              	.LFE412:
 462              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern,"ax",%progbits
 463              	 .align 1
 464              	 .syntax unified
 465              	 .thumb
 466              	 .thumb_func
 467              	 .fpu fpv4-sp-d16
 469              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern:
 470              	.LFB413:
 268:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 269:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 270:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 271:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 272:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Performs shadow transfer of the Multi-Channel Pattern register by configuring.\n
 273:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 274:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern(void)
 275:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 471              	 .loc 2 275 1
 472              	 .cfi_startproc
 473              	 
 474              	 
 475 0000 80B5     	 push {r7,lr}
 476              	.LCFI53:
 477              	 .cfi_def_cfa_offset 8
 478              	 .cfi_offset 7,-8
 479              	 .cfi_offset 14,-4
 480 0002 00AF     	 add r7,sp,#0
 481              	.LCFI54:
 482              	 .cfi_def_cfa_register 7
 276:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_MCM_UpdateMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 483              	 .loc 2 276 3
 484 0004 0248     	 ldr r0,.L16
 485 0006 FFF7FEFF 	 bl XMC_POSIF_MCM_UpdateMultiChannelPattern
 277:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 486              	 .loc 2 277 1
 487 000a 00BF     	 nop
 488 000c 80BD     	 pop {r7,pc}
 489              	.L17:
 490 000e 00BF     	 .align 2
 491              	.L16:
 492 0010 00800240 	 .word 1073905664
 493              	 .cfi_endproc
 494              	.LFE413:
 496              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern,"ax",%progbits
 497              	 .align 1
 498              	 .syntax unified
 499              	 .thumb
 500              	 .thumb_func
 501              	 .fpu fpv4-sp-d16
 503              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:
 504              	.LFB414:
 278:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 279:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint16_t Returns configured multi channel pattern <br>
 280:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 281:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 282:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns configured multi channel pattern of \a peripheral. \n
 283:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 284:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint16_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern(void)
 285:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 505              	 .loc 2 285 1
 506              	 .cfi_startproc
 507              	 
 508              	 
 509 0000 80B5     	 push {r7,lr}
 510              	.LCFI55:
 511              	 .cfi_def_cfa_offset 8
 512              	 .cfi_offset 7,-8
 513              	 .cfi_offset 14,-4
 514 0002 82B0     	 sub sp,sp,#8
 515              	.LCFI56:
 516              	 .cfi_def_cfa_offset 16
 517 0004 00AF     	 add r7,sp,#0
 518              	.LCFI57:
 519              	 .cfi_def_cfa_register 7
 286:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint16_t pattern;
 287:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   pattern = XMC_POSIF_MCM_GetMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 520              	 .loc 2 287 13
 521 0006 0548     	 ldr r0,.L20
 522 0008 FFF7FEFF 	 bl XMC_POSIF_MCM_GetMultiChannelPattern
 523 000c 0346     	 mov r3,r0
 524 000e FB80     	 strh r3,[r7,#6]
 288:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(pattern);
 525              	 .loc 2 288 9
 526 0010 FB88     	 ldrh r3,[r7,#6]
 289:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 527              	 .loc 2 289 1
 528 0012 1846     	 mov r0,r3
 529 0014 0837     	 adds r7,r7,#8
 530              	.LCFI58:
 531              	 .cfi_def_cfa_offset 8
 532 0016 BD46     	 mov sp,r7
 533              	.LCFI59:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 0018 80BD     	 pop {r7,pc}
 537              	.L21:
 538 001a 00BF     	 .align 2
 539              	.L20:
 540 001c 00800240 	 .word 1073905664
 541              	 .cfi_endproc
 542              	.LFE414:
 544              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern,"ax",%progbits
 545              	 .align 1
 546              	 .syntax unified
 547              	 .thumb
 548              	 .thumb_func
 549              	 .fpu fpv4-sp-d16
 551              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:
 552              	.LFB415:
 290:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 291:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint16_t Returns configured multi channel pattern present in shadow transfer register <b
 292:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 293:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 294:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns configured multi channel pattern in shadow register of \a peripheral. \n
 295:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 296:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint16_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern(void)
 297:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 553              	 .loc 2 297 1
 554              	 .cfi_startproc
 555              	 
 556              	 
 557 0000 80B5     	 push {r7,lr}
 558              	.LCFI60:
 559              	 .cfi_def_cfa_offset 8
 560              	 .cfi_offset 7,-8
 561              	 .cfi_offset 14,-4
 562 0002 82B0     	 sub sp,sp,#8
 563              	.LCFI61:
 564              	 .cfi_def_cfa_offset 16
 565 0004 00AF     	 add r7,sp,#0
 566              	.LCFI62:
 567              	 .cfi_def_cfa_register 7
 298:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint16_t pattern;
 299:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   pattern = XMC_POSIF_MCM_GetShadowMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 568              	 .loc 2 299 13
 569 0006 0548     	 ldr r0,.L24
 570 0008 FFF7FEFF 	 bl XMC_POSIF_MCM_GetShadowMultiChannelPattern
 571 000c 0346     	 mov r3,r0
 572 000e FB80     	 strh r3,[r7,#6]
 300:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(pattern);
 573              	 .loc 2 300 9
 574 0010 FB88     	 ldrh r3,[r7,#6]
 301:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 575              	 .loc 2 301 1
 576 0012 1846     	 mov r0,r3
 577 0014 0837     	 adds r7,r7,#8
 578              	.LCFI63:
 579              	 .cfi_def_cfa_offset 8
 580 0016 BD46     	 mov sp,r7
 581              	.LCFI64:
 582              	 .cfi_def_cfa_register 13
 583              	 
 584 0018 80BD     	 pop {r7,pc}
 585              	.L25:
 586 001a 00BF     	 .align 2
 587              	.L24:
 588 001c 00800240 	 .word 1073905664
 589              	 .cfi_endproc
 590              	.LFE415:
 592              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern,"ax",%progbits
 593              	 .align 1
 594              	 .syntax unified
 595              	 .thumb
 596              	 .thumb_func
 597              	 .fpu fpv4-sp-d16
 599              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:
 600              	.LFB416:
 302:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 303:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param pattern The hall sensor pattern mask [0-63] Format of mask: (expected_pattern << 3) | (cu
 304:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 305:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 306:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 307:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Configures current and expected hall pattern of \a peripheral. \n
 308:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 309:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern(uint8_t pattern)
 310:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 601              	 .loc 2 310 1
 602              	 .cfi_startproc
 603              	 
 604              	 
 605 0000 80B5     	 push {r7,lr}
 606              	.LCFI65:
 607              	 .cfi_def_cfa_offset 8
 608              	 .cfi_offset 7,-8
 609              	 .cfi_offset 14,-4
 610 0002 82B0     	 sub sp,sp,#8
 611              	.LCFI66:
 612              	 .cfi_def_cfa_offset 16
 613 0004 00AF     	 add r7,sp,#0
 614              	.LCFI67:
 615              	 .cfi_def_cfa_register 7
 616 0006 0346     	 mov r3,r0
 617 0008 FB71     	 strb r3,[r7,#7]
 311:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_HSC_SetHallPatterns(MOTOR0_BLDC_SCALAR_POSIF_MODULE, pattern);
 618              	 .loc 2 311 3
 619 000a FB79     	 ldrb r3,[r7,#7]
 620 000c 1946     	 mov r1,r3
 621 000e 0348     	 ldr r0,.L27
 622 0010 FFF7FEFF 	 bl XMC_POSIF_HSC_SetHallPatterns
 312:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 623              	 .loc 2 312 1
 624 0014 00BF     	 nop
 625 0016 0837     	 adds r7,r7,#8
 626              	.LCFI68:
 627              	 .cfi_def_cfa_offset 8
 628 0018 BD46     	 mov sp,r7
 629              	.LCFI69:
 630              	 .cfi_def_cfa_register 13
 631              	 
 632 001a 80BD     	 pop {r7,pc}
 633              	.L28:
 634              	 .align 2
 635              	.L27:
 636 001c 00800240 	 .word 1073905664
 637              	 .cfi_endproc
 638              	.LFE416:
 640              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern,"ax",%progbits
 641              	 .align 1
 642              	 .syntax unified
 643              	 .thumb
 644              	 .thumb_func
 645              	 .fpu fpv4-sp-d16
 647              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern:
 648              	.LFB417:
 313:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 314:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 315:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 316:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 317:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * The transfer of hall sensor pattern shadow registers content to the hall sensor pattern register
 318:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * on hardware trigger.
 319:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 320:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern(void)
 321:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 649              	 .loc 2 321 1
 650              	 .cfi_startproc
 651              	 
 652              	 
 653 0000 80B5     	 push {r7,lr}
 654              	.LCFI70:
 655              	 .cfi_def_cfa_offset 8
 656              	 .cfi_offset 7,-8
 657              	 .cfi_offset 14,-4
 658 0002 00AF     	 add r7,sp,#0
 659              	.LCFI71:
 660              	 .cfi_def_cfa_register 7
 322:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_HSC_UpdateHallPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 661              	 .loc 2 322 3
 662 0004 0248     	 ldr r0,.L30
 663 0006 FFF7FEFF 	 bl XMC_POSIF_HSC_UpdateHallPattern
 323:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 664              	 .loc 2 323 1
 665 000a 00BF     	 nop
 666 000c 80BD     	 pop {r7,pc}
 667              	.L31:
 668 000e 00BF     	 .align 2
 669              	.L30:
 670 0010 00800240 	 .word 1073905664
 671              	 .cfi_endproc
 672              	.LFE417:
 674              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern,"ax",%progbits
 675              	 .align 1
 676              	 .syntax unified
 677              	 .thumb
 678              	 .thumb_func
 679              	 .fpu fpv4-sp-d16
 681              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:
 682              	.LFB418:
 324:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 325:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval pattern The hall sensor pattern to be programmed into current pattern [0-7] <br>
 326:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 327:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 328:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Retrieves the expected hall sensor pattern from \a HALP register's \a HEP bit field of \a periph
 329:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 330:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint8_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern(void)
 331:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 683              	 .loc 2 331 1
 684              	 .cfi_startproc
 685              	 
 686              	 
 687 0000 80B5     	 push {r7,lr}
 688              	.LCFI72:
 689              	 .cfi_def_cfa_offset 8
 690              	 .cfi_offset 7,-8
 691              	 .cfi_offset 14,-4
 692 0002 82B0     	 sub sp,sp,#8
 693              	.LCFI73:
 694              	 .cfi_def_cfa_offset 16
 695 0004 00AF     	 add r7,sp,#0
 696              	.LCFI74:
 697              	 .cfi_def_cfa_register 7
 332:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t pattern;
 333:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   pattern = XMC_POSIF_HSC_GetExpectedPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 698              	 .loc 2 333 13
 699 0006 0548     	 ldr r0,.L34
 700 0008 FFF7FEFF 	 bl XMC_POSIF_HSC_GetExpectedPattern
 701 000c 0346     	 mov r3,r0
 702 000e FB71     	 strb r3,[r7,#7]
 334:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(pattern);
 703              	 .loc 2 334 9
 704 0010 FB79     	 ldrb r3,[r7,#7]
 335:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 705              	 .loc 2 335 1
 706 0012 1846     	 mov r0,r3
 707 0014 0837     	 adds r7,r7,#8
 708              	.LCFI75:
 709              	 .cfi_def_cfa_offset 8
 710 0016 BD46     	 mov sp,r7
 711              	.LCFI76:
 712              	 .cfi_def_cfa_register 13
 713              	 
 714 0018 80BD     	 pop {r7,pc}
 715              	.L35:
 716 001a 00BF     	 .align 2
 717              	.L34:
 718 001c 00800240 	 .word 1073905664
 719              	 .cfi_endproc
 720              	.LFE418:
 722              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent,"ax",%progbits
 723              	 .align 1
 724              	 .syntax unified
 725              	 .thumb
 726              	 .thumb_func
 727              	 .fpu fpv4-sp-d16
 729              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent:
 730              	.LFB425:
 336:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 337:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval interval between two hall events <br>
 338:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 339:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 340:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Return time between two hall events\n
 341:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 342:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint32_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallEventTime(void)
 343:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 344:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t period;
 345:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   period = XMC_CCU4_SLICE_GetCaptureRegisterValue(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE, BLDC_SCALA
 346:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(period);
 347:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 348:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 349:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint8_t Returns last sampled hall sensor pattern. Range : [0-7] <br>
 350:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 351:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 352:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns last sampled hall sensor pattern of \a peripheral.\n
 353:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 354:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint8_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern(void)
 355:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 356:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t hall_pattern;
 357:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   hall_pattern = XMC_POSIF_HSC_GetLastSampledPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 358:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(hall_pattern);
 359:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 360:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 361:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 362:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 363:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 364:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Reset the capture timer prescaler value.\n
 365:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 366:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_ResetCaptureTimePrescaler(void)
 367:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 368:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /*
 369:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****    * Stop timer and prescalar.
 370:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****    * initialize timer and prescalar value and restert the timer
 371:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****    */
 372:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_CCU4_SLICE_StopTimer(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE);
 373:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_CCU4_StopPrescaler(MOTOR0_BLDC_SCALAR_CCU4_MODULE);
 374:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_CCU4_SLICE_SetTimerValue(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE, 0U);
 375:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_CCU4_SLICE_SetPrescaler(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE, MOTOR0_BLDC_SCALAR_CCU4_PRESCA
 376:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_CCU4_StartPrescaler(MOTOR0_BLDC_SCALAR_CCU4_MODULE);
 377:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_CCU4_SLICE_StartTimer(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE);
 378:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 379:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 380:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval Hall event capture timer current value <br>
 381:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 382:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 383:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Return Hall event capture timer current value\n
 384:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 385:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint16_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetCapTimerVal(void)
 386:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 387:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint16_t period;
 388:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   period = XMC_CCU4_SLICE_GetTimerValue(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE);
 389:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(period);
 390:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 391:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 392:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 393:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param event Event ID to be checked for status
 394:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint8_t Returns event status <br>
 395:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 396:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 397:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns event status of peripheral. \n
 398:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 399:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint8_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetEventStatus(const XMC_POSIF_IRQ_EVENT_
 400:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 401:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return XMC_POSIF_GetEventStatus(MOTOR0_BLDC_SCALAR_POSIF_MODULE, event);
 402:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 403:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 404:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 405:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param event Event to be acknowledged
 406:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None
 407:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 408:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 409:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Clears event by acknowledgment of peripheral. \n
 410:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 411:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_ClearEvent(const XMC_POSIF_IRQ_EVENT_t event
 412:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 413:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_ClearEvent(MOTOR0_BLDC_SCALAR_POSIF_MODULE, event);
 414:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 415:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 416:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 417:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief Disables an IRQ generation capable event
 418:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param event Event to be disabled
 419:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None
 420:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 421:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 422:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Disables event generation of peripheral.\n
 423:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 424:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent(const XMC_POSIF_IRQ_EVENT_t eve
 425:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 731              	 .loc 2 425 1
 732              	 .cfi_startproc
 733              	 
 734              	 
 735 0000 80B5     	 push {r7,lr}
 736              	.LCFI77:
 737              	 .cfi_def_cfa_offset 8
 738              	 .cfi_offset 7,-8
 739              	 .cfi_offset 14,-4
 740 0002 82B0     	 sub sp,sp,#8
 741              	.LCFI78:
 742              	 .cfi_def_cfa_offset 16
 743 0004 00AF     	 add r7,sp,#0
 744              	.LCFI79:
 745              	 .cfi_def_cfa_register 7
 746 0006 0346     	 mov r3,r0
 747 0008 FB71     	 strb r3,[r7,#7]
 426:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_DisableEvent(MOTOR0_BLDC_SCALAR_POSIF_MODULE, event);
 748              	 .loc 2 426 3
 749 000a FB79     	 ldrb r3,[r7,#7]
 750 000c 1946     	 mov r1,r3
 751 000e 0348     	 ldr r0,.L37
 752 0010 FFF7FEFF 	 bl XMC_POSIF_DisableEvent
 427:../MotorLib/ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 753              	 .loc 2 427 1
 754 0014 00BF     	 nop
 755 0016 0837     	 adds r7,r7,#8
 756              	.LCFI80:
 757              	 .cfi_def_cfa_offset 8
 758 0018 BD46     	 mov sp,r7
 759              	.LCFI81:
 760              	 .cfi_def_cfa_register 13
 761              	 
 762 001a 80BD     	 pop {r7,pc}
 763              	.L38:
 764              	 .align 2
 765              	.L37:
 766 001c 00800240 	 .word 1073905664
 767              	 .cfi_endproc
 768              	.LFE425:
 770              	 .section .ram_code,"ax",%progbits
 771              	 .align 1
 772              	 .global Motor0_BLDC_SCALAR_PatternInitiator
 773              	 .syntax unified
 774              	 .thumb
 775              	 .thumb_func
 776              	 .fpu fpv4-sp-d16
 778              	Motor0_BLDC_SCALAR_PatternInitiator:
 779              	.LFB449:
 780              	 .file 3 "../MotorLib/ControlModule/bldc_scalar_control_hall.c"
   1:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**
   2:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @file bldc_scalar_control_hall.c
   3:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @brief Hall sensor feedback control algorithm
   4:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @date 2016-08-31
   5:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
   6:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @cond
   7:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
   8:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * BLDC_SCALAR_CONTROL v1.0.2 - BLDC motor control using block commutation
   9:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * All rights reserved.
  11:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  12:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * following conditions are met:
  14:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  15:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  16:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *   disclaimer.
  17:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  18:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  19:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  20:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  21:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  22:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *   products derived from this software without specific prior written permission.
  23:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  24:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  32:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * with Infineon Technologies AG (dave@infineon.com).
  34:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
  35:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  36:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * Change History
  37:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * --------------
  38:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  39:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * 2016-08-31:
  40:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *     - Initial version
  41:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  42:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @endcond
  43:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  *
  44:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  */
  45:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  46:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**************************************************************************************************
  47:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * HEADER FILES
  48:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
  49:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #include "bldc_scalar_control_hall.h"
  50:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #include "../bldc_scalar_user_interface.h"
  51:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  52:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**************************************************************************************************
  53:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * MACROS
  54:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
  55:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #define BLDC_SCALAR_HALL_VALIDATION_COUNT          (8U)
  56:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #define BLDC_SCALAR_HALL_DIRECTION_INDEX           (8U)
  57:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #define BLDC_SCALAR_HALL_LEARNING_ITERATION_COUNT  (20U)
  58:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #define BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE     (7U)
  59:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #define BLDC_SCALAR_HALL_MCM_SYNC_UPDATE_COUNT     (3U)
  60:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**************************************************************************************************
  61:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * LOCAL DATA
  62:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
  63:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** extern void Motor0_BLDC_SCALAR_MotorStop(void);
  64:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**************************************************************************************************
  65:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * LOCAL ROUTINES
  66:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
  67:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #if (MOTOR0_BLDC_SCALAR_HALL_LEARNING == 1U)
  68:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**
  69:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @brief This function validates the open loop captured pattern.
  70:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * If pattern is not valid then reset adapt_algoindex counter.
  71:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  */
  72:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  73:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** static void Motor0_BLDC_SCALAR_OpenLoopPatternValidation(void);
  74:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**
  75:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @brief This function updates the hall pattern and multi channel pattern
  76:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * for forward and reverse direction based on the captured pattern.
  77:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * which is used when motor runs in close loop.
  78:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  */
  79:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** static void Motor0_BLDC_SCALAR_UpdateCloseLoopPattern(void);
  80:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  81:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**
  82:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * @brief This function validates and updates the pattern
  83:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  */
  84:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** static void Motor0_BLDC_SCALAR_ValidationAndUpdate(void);
  85:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #endif /* end of #if (MOTOR0_BLDC_SCALAR_HALL_LEARNING == 1U) */
  86:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  87:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  88:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /**************************************************************************************************
  89:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  * API IMPLEMENTATION
  90:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****  **************************************************************************************************
  91:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #if (MOTOR0_BLDC_SCALAR_HALL_LEARNING == 1U)
  92:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  93:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /*Validate the capture pattern */
  94:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** static void Motor0_BLDC_SCALAR_OpenLoopPatternValidation(void)
  95:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** {
  96:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint32_t iter_count = 0U;    /* loop count for pattern validation */
  97:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
  98:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   if (Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex == Motor0_BLDC_SCALAR_HallLearning.ol_count)
  99:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 100:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /*Validate the captured pattern */
 101:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     for (iter_count = 0U;iter_count < BLDC_SCALAR_HALL_VALIDATION_COUNT; iter_count++)
 102:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 103:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       /* reset the index if validation fails */
 104:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[(Motor0_BLDC_SCALAR_HallLearning.adapt_algo
 105:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[(Motor0_BLDC_SCALAR_HallLearning.adapt_algo
 106:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 107:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex = 0U;
 108:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 109:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[iter_count] == Motor0_BLDC_SCALAR_HallLearn
 110:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 111:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex = 0U;
 112:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 113:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 114:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 115:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 116:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** }
 117:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 118:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /*Update the hall and MCM pattern */
 119:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** static void Motor0_BLDC_SCALAR_UpdateCloseLoopPattern(void)
 120:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** {
 121:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint32_t iter_count;       /* loop count for one electrical revolution */
 122:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t rev_direction;     /* reverse direction */
 123:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint16_t count;            /* loop count to update multi-channel pattern */
 124:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t direction = (uint8_t)Motor0_BLDC_SCALAR.motor_set_direction & BLDC_SCALAR_HALL_DIRECTION_
 125:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 126:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /* Find reverse direction */
 127:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   if (BLDC_SCALAR_POSITIVE_DIR == Motor0_BLDC_SCALAR.motor_set_direction)
 128:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 129:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     rev_direction = (uint8_t)BLDC_SCALAR_NEGATIVE_DIR & BLDC_SCALAR_HALL_DIRECTION_INDEX;
 130:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 131:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   else
 132:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 133:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     rev_direction = (uint8_t)BLDC_SCALAR_POSITIVE_DIR & BLDC_SCALAR_HALL_DIRECTION_INDEX;
 134:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 135:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 136:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   for (iter_count = (uint32_t)0; iter_count<(uint32_t)(BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE - 1U)
 137:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 138:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /*Update close loop Hall pattern*/
 139:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_Hall.hall_pattern[Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[(Motor0_BLDC
 140:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     (uint8_t)BLDC_SCALAR_HALL_MCM((uint32_t)Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[(Motor0_B
 141:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****                                   (uint32_t)Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[(Motor0_B
 142:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /*Update close loop Multi channel pattern*/
 143:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_HIGHSIDE][Motor0_BLDC_SCALAR_HallLearning.capt_hallpat
 144:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     (uint16_t)Motor0_BLDC_SCALAR_HallLearning.capt_outpatt[(Motor0_BLDC_SCALAR_HallLearning.adapt_a
 145:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_LOWSIDE][Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt
 146:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     (uint16_t)Motor0_BLDC_SCALAR_HallLearning.capt_outpatt[(Motor0_BLDC_SCALAR_HallLearning.adapt_a
 147:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 148:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /*Update close loop Multi channel pattern for sync modulation*/
 149:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     for (count = 0U; count < BLDC_SCALAR_HALL_MCM_SYNC_UPDATE_COUNT; count++)
 150:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 151:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       /* Find high side switch is on */
 152:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_PWM_BC.ph_mcpatt_compmask[count] ==
 153:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           (Motor0_BLDC_SCALAR_HallLearning.capt_outpatt[(Motor0_BLDC_SCALAR_HallLearning.adapt_algo
 154:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 155:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         /* Update table for both side modulation by oring with "BLDC_SCALAR_PWM_BC.ph_bothside_comp
 156:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_HIGHSIDE_SYNCRECTI][Motor0_BLDC_SCALAR_HallLearnin
 157:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         (Motor0_BLDC_SCALAR_HallLearning.capt_outpatt[(Motor0_BLDC_SCALAR_HallLearning.adapt_algoin
 158:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 159:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 160:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 161:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /*Update close loop Hall pattern for opposite direction*/
 162:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_Hall.hall_pattern[Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[((Motor0_BLD
 163:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     (uint8_t)BLDC_SCALAR_HALL_MCM(Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[(Motor0_BLDC_SCALAR
 164:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 165:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 166:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /*Update close loop Multi channel pattern for opposite direction*/
 167:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   for (iter_count = 1U; iter_count < BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE; iter_count++)
 168:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 169:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_HIGHSIDE][iter_count + rev_direction] =
 170:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_HIGHSIDE][BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE -
 171:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_LOWSIDE][iter_count + rev_direction] =
 172:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_LOWSIDE][BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE - 
 173:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_HIGHSIDE_SYNCRECTI][iter_count + rev_direction] =
 174:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR.mc_pattern[PWM_BC_MOD_HIGHSIDE_SYNCRECTI][BLDC_SCALAR_HALL_CLOSE_LOOP_AR
 175:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 176:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 177:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /* Update pattern array to be used for user configuration update */
 178:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   for (count = 0U; count < BLDC_SCALAR_HALL_LEARNING_NUM_OF_PATTERNS; count++)
 179:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 180:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     if (Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[count] == (uint8_t)0x1)
 181:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 182:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       /* hall pattern 1->5 transition */
 183:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[count + 1U] == 0x5U)
 184:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 185:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         if (Motor0_BLDC_SCALAR.motor_set_direction == BLDC_SCALAR_POSITIVE_DIR)
 186:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         {
 187:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[0U] = (uint16_t)BLDC_SCALAR_HALL_SE
 188:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         }
 189:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         else
 190:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         {
 191:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[0U] = (uint16_t)BLDC_SCALAR_HALL_SE
 192:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         }
 193:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 194:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 195:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       /* hall pattern 1-> 3 transition */
 196:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[count + 1U] == (uint8_t)0x3)
 197:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 198:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         if (Motor0_BLDC_SCALAR.motor_set_direction == BLDC_SCALAR_POSITIVE_DIR)
 199:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         {
 200:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[0U] = (uint16_t)BLDC_SCALAR_HALL_SE
 201:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         }
 202:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         else
 203:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         {
 204:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[0U] = (uint16_t)BLDC_SCALAR_HALL_SE
 205:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         }
 206:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 207:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 208:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[0U] == (uint16_t)BLDC_SCALAR_HALL_S
 209:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 210:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         if (count < BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE)
 211:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         {
 212:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[1U] = Motor0_BLDC_SCALAR_HallLearni
 213:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[2U] = Motor0_BLDC_SCALAR_HallLearni
 214:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[3U] = Motor0_BLDC_SCALAR_HallLearni
 215:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[4U] = Motor0_BLDC_SCALAR_HallLearni
 216:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[5U] = Motor0_BLDC_SCALAR_HallLearni
 217:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[6U] = Motor0_BLDC_SCALAR_HallLearni
 218:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         }
 219:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 220:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       else
 221:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 222:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         if (count < BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE)
 223:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         {
 224:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[1U] = Motor0_BLDC_SCALAR_HallLearni
 225:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[2U] = Motor0_BLDC_SCALAR_HallLearni
 226:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[3U] = Motor0_BLDC_SCALAR_HallLearni
 227:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[4U] = Motor0_BLDC_SCALAR_HallLearni
 228:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[5U] = Motor0_BLDC_SCALAR_HallLearni
 229:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****           Motor0_BLDC_SCALAR_HallLearning.closedloop_mc_pattern[6U] = Motor0_BLDC_SCALAR_HallLearni
 230:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         }
 231:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 232:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       break;
 233:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 234:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 235:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 236:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** }
 237:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 238:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** static void Motor0_BLDC_SCALAR_ValidationAndUpdate(void)
 239:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** {
 240:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   if (Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex == Motor0_BLDC_SCALAR_HallLearning.ol_count)
 241:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 242:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_OpenLoopPatternValidation();
 243:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 244:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     if (Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex != Motor0_BLDC_SCALAR_HallLearning.ol_count
 245:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 246:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_HallLearning.ol_iter_count++;
 247:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       /* Try for 20 iterations to learn hall patterns */
 248:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if ((uint8_t)BLDC_SCALAR_HALL_LEARNING_ITERATION_COUNT == Motor0_BLDC_SCALAR_HallLearning.ol_
 249:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 250:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         /* Log the error as hall learning failed */
 251:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR.error_status |= (uint32_t)1 << (uint32_t)BLDC_SCALAR_EID_HALL_LEARNING_T
 252:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR.msm_state = BLDC_SCALAR_MSM_ERROR;
 253:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_MotorStop();
 254:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.ol_iter_count = (uint8_t)0;
 255:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 256:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 257:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     else
 258:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 259:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_UpdateCloseLoopPattern();
 260:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 261:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 262:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** }
 263:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 264:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** /*Adaptive Pattern Capture*/
 265:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** void Motor0_BLDC_SCALAR_HallPatternCapture(void)
 266:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** {
 267:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t hall_patt;        /* Read hall pattern from GPIO */
 268:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint16_t mcmval;          /* Actual multi-channel pattern */
 269:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint16_t mcm_patt;        /* multi-channel pattern used to lock the rotor */
 270:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t arrayindex_adv;  /* index used to lock the rotor */
 271:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 272:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t direction = (uint8_t)Motor0_BLDC_SCALAR.motor_set_direction & BLDC_SCALAR_HALL_DIRECTION_
 273:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 274:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   if (Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex < Motor0_BLDC_SCALAR_HallLearning.ol_count)
 275:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 276:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /*
 277:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****      * Read the hall state
 278:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****      * Update the hall and multi-channel pattern in captured array
 279:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****      * Apply next multi-channel pattern
 280:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****      */
 281:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     if (Motor0_BLDC_SCALAR_HallLearning.count > Motor0_BLDC_SCALAR_HallLearning.ol_pattup_count)
 282:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 283:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_HallLearning.count = 0U;
 284:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       hall_patt = (uint8_t)Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallPosition();
 285:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 286:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex < Motor0_BLDC_SCALAR_HallLearning.ol_coun
 287:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 288:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.capt_hallpatt[Motor0_BLDC_SCALAR_HallLearning.adapt_algoind
 289:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.capt_outpatt[Motor0_BLDC_SCALAR_HallLearning.adapt_algoinde
 290:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         (uint16_t)Motor0_BLDC_SCALAR_HallLearning.openloop_mc_pattern[Motor0_BLDC_SCALAR_HallLearni
 291:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.adapt_algoindex++;
 292:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 293:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 294:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (++(Motor0_BLDC_SCALAR_HallLearning.ol_arrayindex) > (uint8_t)(BLDC_SCALAR_HALL_CLOSE_LOOP
 295:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 296:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         Motor0_BLDC_SCALAR_HallLearning.ol_arrayindex = (uint8_t)1;
 297:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 298:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       arrayindex_adv = Motor0_BLDC_SCALAR_HallLearning.ol_arrayindex + 1U;
 299:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 300:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       if (arrayindex_adv > (uint8_t)(BLDC_SCALAR_HALL_CLOSE_LOOP_ARRAY_SIZE - 1U))
 301:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       {
 302:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****         arrayindex_adv = 1U;
 303:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       }
 304:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 305:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       mcm_patt = (Motor0_BLDC_SCALAR_HallLearning.openloop_mc_pattern[Motor0_BLDC_SCALAR_HallLearni
 306:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****                  (Motor0_BLDC_SCALAR_HallLearning.openloop_mc_pattern[arrayindex_adv + direction]);
 307:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 308:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(mcm_patt);
 309:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern();
 310:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       mcmval = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern();
 311:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_PWM_BC.immediate_modulation_ptr(mcmval);
 312:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 313:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       /*update open loop duty cycle*/
 314:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_PWM_BC_DutyCycleUpdate(Motor0_BLDC_SCALAR_HallLearning.amplitude);
 315:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_ValidationAndUpdate();
 316:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 317:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_HallLearning.count++;
 318:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 319:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   else
 320:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 321:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_Hall.hall_learning_flag = (uint8_t)BLDC_SCALAR_HALL_LEARNING_FLAG_DISABLED;
 322:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 323:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** }
 324:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #endif  /* end of #if (MOTOR0_BLDC_SCALAR_HALL_LEARNING == 1U) */
 325:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 326:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** RAM_ATTRIBUTE void Motor0_BLDC_SCALAR_PatternInitiator(uint8_t curpos)
 327:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** {
 781              	 .loc 3 327 1
 782              	 .cfi_startproc
 783              	 
 784              	 
 785 0000 80B5     	 push {r7,lr}
 786              	.LCFI82:
 787              	 .cfi_def_cfa_offset 8
 788              	 .cfi_offset 7,-8
 789              	 .cfi_offset 14,-4
 790 0002 84B0     	 sub sp,sp,#16
 791              	.LCFI83:
 792              	 .cfi_def_cfa_offset 24
 793 0004 00AF     	 add r7,sp,#0
 794              	.LCFI84:
 795              	 .cfi_def_cfa_register 7
 796 0006 0346     	 mov r3,r0
 797 0008 FB71     	 strb r3,[r7,#7]
 328:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t pattern_index;         /* Index of the pattern */
 329:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint16_t mcmval;       /* Actual multi-channel pattern */
 330:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint16_t mcmshadow;    /* Shadow multi-channel pattern */
 331:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint8_t direction = (uint8_t) Motor0_BLDC_SCALAR.motor_set_direction & BLDC_SCALAR_HALL_DIRECTION
 798              	 .loc 3 331 51
 799 000a 2B4B     	 ldr r3,.L40
 800 000c 9B6F     	 ldr r3,[r3,#120]
 801              	 .loc 3 331 23
 802 000e DBB2     	 uxtb r3,r3
 803              	 .loc 3 331 11
 804 0010 03F00803 	 and r3,r3,#8
 805 0014 FB73     	 strb r3,[r7,#15]
 332:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 333:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /* Load hall and multi-channel pattern in shadow and perform immediate transfer */
 334:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern(
 335:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint8_t) (Motor0_BLDC_SCALAR_Hall.hall_pattern[curpos + (uint32_t) direction]));
 806              	 .loc 3 335 62
 807 0016 FA79     	 ldrb r2,[r7,#7]
 808              	 .loc 3 335 64
 809 0018 FB7B     	 ldrb r3,[r7,#15]
 810              	 .loc 3 335 62
 811 001a 1344     	 add r3,r3,r2
 812              	 .loc 3 335 54
 813 001c 274A     	 ldr r2,.L40+4
 814 001e D35C     	 ldrb r3,[r2,r3]
 334:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint8_t) (Motor0_BLDC_SCALAR_Hall.hall_pattern[curpos + (uint32_t) direction]));
 815              	 .loc 3 334 3
 816 0020 1846     	 mov r0,r3
 817 0022 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern
 336:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern();
 818              	 .loc 3 336 3
 819 0026 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern
 337:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 338:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(
 339:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint16_t) Motor0_BLDC_SCALAR.mc_pattern[Motor0_BLDC_SCALAR_PWM_BC.modulation_type][(curpos) 
 820              	 .loc 3 339 73
 821 002a 254B     	 ldr r3,.L40+8
 822 002c 1B7B     	 ldrb r3,[r3,#12]
 823 002e 1846     	 mov r0,r3
 824              	 .loc 3 339 100
 825 0030 FA79     	 ldrb r2,[r7,#7]
 826              	 .loc 3 339 102
 827 0032 FB7B     	 ldrb r3,[r7,#15]
 828              	 .loc 3 339 100
 829 0034 1344     	 add r3,r3,r2
 830              	 .loc 3 339 90
 831 0036 2049     	 ldr r1,.L40
 832 0038 0201     	 lsls r2,r0,#4
 833 003a 1344     	 add r3,r3,r2
 834 003c 5B00     	 lsls r3,r3,#1
 835 003e 0B44     	 add r3,r3,r1
 836 0040 9B88     	 ldrh r3,[r3,#4]
 338:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint16_t) Motor0_BLDC_SCALAR.mc_pattern[Motor0_BLDC_SCALAR_PWM_BC.modulation_type][(curpos) 
 837              	 .loc 3 338 3
 838 0042 1846     	 mov r0,r3
 839 0044 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern
 340:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern();
 840              	 .loc 3 340 3
 841 0048 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern
 341:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /*
 342:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****    * Load next hall and multi-channel pattern in shadow registers to prepare for the
 343:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****    * shadow transfer when correct hall event occurs
 344:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****    */
 345:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   pattern_index = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern();
 842              	 .loc 3 345 19
 843 004c FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern
 844 0050 0346     	 mov r3,r0
 845 0052 BB73     	 strb r3,[r7,#14]
 346:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 347:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /* Prepare for block commutation for phases which are conducting */
 348:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   mcmval = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern();
 846              	 .loc 3 348 12
 847 0054 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern
 848 0058 0346     	 mov r3,r0
 849 005a BB81     	 strh r3,[r7,#12]
 349:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 350:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_PWM_BC.immediate_modulation_ptr(mcmval);
 850              	 .loc 3 350 28
 851 005c 184B     	 ldr r3,.L40+8
 852 005e 9B68     	 ldr r3,[r3,#8]
 853              	 .loc 3 350 3
 854 0060 BA89     	 ldrh r2,[r7,#12]
 855 0062 1046     	 mov r0,r2
 856 0064 9847     	 blx r3
 857              	.LVL0:
 351:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 352:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 353:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern(
 354:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint8_t) (Motor0_BLDC_SCALAR_Hall.hall_pattern[(uint8_t) pattern_index + (uint32_t) directio
 858              	 .loc 3 354 55
 859 0066 BA7B     	 ldrb r2,[r7,#14]
 860              	 .loc 3 354 81
 861 0068 FB7B     	 ldrb r3,[r7,#15]
 862              	 .loc 3 354 79
 863 006a 1344     	 add r3,r3,r2
 864              	 .loc 3 354 54
 865 006c 134A     	 ldr r2,.L40+4
 866 006e D35C     	 ldrb r3,[r2,r3]
 353:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint8_t) (Motor0_BLDC_SCALAR_Hall.hall_pattern[(uint8_t) pattern_index + (uint32_t) directio
 867              	 .loc 3 353 3
 868 0070 1846     	 mov r0,r3
 869 0072 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern
 355:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(
 356:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       (uint16_t) Motor0_BLDC_SCALAR.mc_pattern[Motor0_BLDC_SCALAR_PWM_BC.modulation_type][(pattern_
 870              	 .loc 3 356 73
 871 0076 124B     	 ldr r3,.L40+8
 872 0078 1B7B     	 ldrb r3,[r3,#12]
 873 007a 1846     	 mov r0,r3
 874              	 .loc 3 356 107
 875 007c BA7B     	 ldrb r2,[r7,#14]
 876              	 .loc 3 356 109
 877 007e FB7B     	 ldrb r3,[r7,#15]
 878              	 .loc 3 356 107
 879 0080 1344     	 add r3,r3,r2
 880              	 .loc 3 356 90
 881 0082 0D49     	 ldr r1,.L40
 882 0084 0201     	 lsls r2,r0,#4
 883 0086 1344     	 add r3,r3,r2
 884 0088 5B00     	 lsls r3,r3,#1
 885 008a 0B44     	 add r3,r3,r1
 886 008c 9B88     	 ldrh r3,[r3,#4]
 355:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(
 887              	 .loc 3 355 3
 888 008e 1846     	 mov r0,r3
 889 0090 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern
 357:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 358:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /* Prepare for block commutation for a phase which is inactive */
 359:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   mcmval = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern();
 890              	 .loc 3 359 12
 891 0094 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern
 892 0098 0346     	 mov r3,r0
 893 009a BB81     	 strh r3,[r7,#12]
 360:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   mcmshadow = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern();
 894              	 .loc 3 360 15
 895 009c FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern
 896 00a0 0346     	 mov r3,r0
 897 00a2 7B81     	 strh r3,[r7,#10]
 361:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   Motor0_BLDC_SCALAR_PWM_BC.shadow_modulation_ptr(mcmval, mcmshadow);
 898              	 .loc 3 361 28
 899 00a4 064B     	 ldr r3,.L40+8
 900 00a6 5B68     	 ldr r3,[r3,#4]
 901              	 .loc 3 361 3
 902 00a8 7989     	 ldrh r1,[r7,#10]
 903 00aa BA89     	 ldrh r2,[r7,#12]
 904 00ac 1046     	 mov r0,r2
 905 00ae 9847     	 blx r3
 906              	.LVL1:
 362:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** }
 907              	 .loc 3 362 1
 908 00b0 00BF     	 nop
 909 00b2 1037     	 adds r7,r7,#16
 910              	.LCFI85:
 911              	 .cfi_def_cfa_offset 8
 912 00b4 BD46     	 mov sp,r7
 913              	.LCFI86:
 914              	 .cfi_def_cfa_register 13
 915              	 
 916 00b6 80BD     	 pop {r7,pc}
 917              	.L41:
 918              	 .align 2
 919              	.L40:
 920 00b8 00000000 	 .word Motor0_BLDC_SCALAR
 921 00bc 00000000 	 .word Motor0_BLDC_SCALAR_Hall
 922 00c0 00000000 	 .word Motor0_BLDC_SCALAR_PWM_BC
 923              	 .cfi_endproc
 924              	.LFE449:
 926              	 .section .text.Motor0_BLDC_SCALAR_State_Identification,"ax",%progbits
 927              	 .align 1
 928              	 .global Motor0_BLDC_SCALAR_State_Identification
 929              	 .syntax unified
 930              	 .thumb
 931              	 .thumb_func
 932              	 .fpu fpv4-sp-d16
 934              	Motor0_BLDC_SCALAR_State_Identification:
 935              	.LFB450:
 363:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** 
 364:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_CATCH_FREE == 1U)
 365:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** BLDC_SCALAR_STATE_IDENTIFICATION_t Motor0_BLDC_SCALAR_State_Identification(void)
 366:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** {
 936              	 .loc 3 366 1
 937              	 .cfi_startproc
 938              	 
 939              	 
 940 0000 80B5     	 push {r7,lr}
 941              	.LCFI87:
 942              	 .cfi_def_cfa_offset 8
 943              	 .cfi_offset 7,-8
 944              	 .cfi_offset 14,-4
 945 0002 82B0     	 sub sp,sp,#8
 946              	.LCFI88:
 947              	 .cfi_def_cfa_offset 16
 948 0004 00AF     	 add r7,sp,#0
 949              	.LCFI89:
 950              	 .cfi_def_cfa_register 7
 367:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   BLDC_SCALAR_STATE_IDENTIFICATION_t status = BLDC_SCALAR_STATE_IDENTIFICATION_PROGRESS;
 951              	 .loc 3 367 38
 952 0006 0023     	 movs r3,#0
 953 0008 FB71     	 strb r3,[r7,#7]
 368:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   uint32_t speed;
 369:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   /* 3 hall events are detected */
 370:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   if (Motor0_BLDC_SCALAR_HALL_CatchFree.state_identification_done == 1U)
 954              	 .loc 3 370 40
 955 000a 214B     	 ldr r3,.L46
 956 000c 1B78     	 ldrb r3,[r3]
 957              	 .loc 3 370 6
 958 000e 012B     	 cmp r3,#1
 959 0010 25D1     	 bne .L43
 371:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 372:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /* Calculate the speed and change the status */
 373:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent(XMC_POSIF_IRQ_EVENT_CHE);
 960              	 .loc 3 373 5
 961 0012 0020     	 movs r0,#0
 962 0014 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent
 374:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_HALL_CatchFree.cf_capval = (Motor0_BLDC_SCALAR_HALL_CatchFree.cf_capval >> 1
 963              	 .loc 3 374 85
 964 0018 1D4B     	 ldr r3,.L46
 965 001a 5B68     	 ldr r3,[r3,#4]
 966              	 .loc 3 374 96
 967 001c 5A08     	 lsrs r2,r3,#1
 968              	 .loc 3 374 103
 969 001e 1346     	 mov r3,r2
 970 0020 5B00     	 lsls r3,r3,#1
 971 0022 1344     	 add r3,r3,r2
 972 0024 5B00     	 lsls r3,r3,#1
 973 0026 1A46     	 mov r2,r3
 974              	 .loc 3 374 49
 975 0028 194B     	 ldr r3,.L46
 976 002a 5A60     	 str r2,[r3,#4]
 375:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     speed = (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speed_constant / (Motor0_BLDC_SCALAR_HALL_CatchFree.
 977              	 .loc 3 375 47
 978 002c 194B     	 ldr r3,.L46+4
 979 002e 5A6A     	 ldr r2,[r3,#36]
 980              	 .loc 3 375 99
 981 0030 174B     	 ldr r3,.L46
 982 0032 5B68     	 ldr r3,[r3,#4]
 983              	 .loc 3 375 11
 984 0034 B2FBF3F3 	 udiv r3,r2,r3
 985 0038 3B60     	 str r3,[r7]
 376:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     speed = ((speed * Motor0_BLDC_SCALAR.speed_mech_scale) >> BLDC_SCALAR_SPEED_SCALE_RES);
 986              	 .loc 3 376 41
 987 003a 174B     	 ldr r3,.L46+8
 988 003c D3F8BC30 	 ldr r3,[r3,#188]
 989              	 .loc 3 376 21
 990 0040 3A68     	 ldr r2,[r7]
 991 0042 02FB03F3 	 mul r3,r2,r3
 992              	 .loc 3 376 11
 993 0046 9B0A     	 lsrs r3,r3,#10
 994 0048 3B60     	 str r3,[r7]
 377:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR.motor_speed = (int32_t)((int32_t)speed * Motor0_BLDC_SCALAR_HALL_CatchFree.i
 995              	 .loc 3 377 98
 996 004a 114B     	 ldr r3,.L46
 997 004c DB68     	 ldr r3,[r3,#12]
 998              	 .loc 3 377 48
 999 004e 3A68     	 ldr r2,[r7]
 1000              	 .loc 3 377 38
 1001 0050 02FB03F3 	 mul r3,r2,r3
 1002              	 .loc 3 377 36
 1003 0054 104A     	 ldr r2,.L46+8
 1004 0056 D366     	 str r3,[r2,#108]
 378:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     status = BLDC_SCALAR_STATE_IDENTIFICATION_COMPLETED;
 1005              	 .loc 3 378 12
 1006 0058 0123     	 movs r3,#1
 1007 005a FB71     	 strb r3,[r7,#7]
 1008 005c 12E0     	 b .L44
 1009              	.L43:
 379:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 380:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   else
 381:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   {
 382:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     /* Wait for timeout */
 383:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     Motor0_BLDC_SCALAR_HALL_CatchFree.catch_free_wait_counter++;
 1010              	 .loc 3 383 38
 1011 005e 0C4B     	 ldr r3,.L46
 1012 0060 9B68     	 ldr r3,[r3,#8]
 1013              	 .loc 3 383 62
 1014 0062 0133     	 adds r3,r3,#1
 1015 0064 0A4A     	 ldr r2,.L46
 1016 0066 9360     	 str r3,[r2,#8]
 384:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     if (Motor0_BLDC_SCALAR_HALL_CatchFree.catch_free_wait_counter >= Motor0_BLDC_SCALAR_HALL_CatchF
 1017              	 .loc 3 384 42
 1018 0068 094B     	 ldr r3,.L46
 1019 006a 9A68     	 ldr r2,[r3,#8]
 1020              	 .loc 3 384 103
 1021 006c 084B     	 ldr r3,.L46
 1022 006e DB69     	 ldr r3,[r3,#28]
 1023              	 .loc 3 384 8
 1024 0070 9A42     	 cmp r2,r3
 1025 0072 07D3     	 bcc .L44
 385:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     {
 386:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR.motor_speed = 0;
 1026              	 .loc 3 386 38
 1027 0074 084B     	 ldr r3,.L46+8
 1028 0076 0022     	 movs r2,#0
 1029 0078 DA66     	 str r2,[r3,#108]
 387:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent(XMC_POSIF_IRQ_EVENT_CHE);
 1030              	 .loc 3 387 7
 1031 007a 0020     	 movs r0,#0
 1032 007c FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent
 388:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****       status = BLDC_SCALAR_STATE_IDENTIFICATION_COMPLETED;
 1033              	 .loc 3 388 14
 1034 0080 0123     	 movs r3,#1
 1035 0082 FB71     	 strb r3,[r7,#7]
 1036              	.L44:
 389:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****     }
 390:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   }
 391:../MotorLib/ControlModule/bldc_scalar_control_hall.c ****   return status;
 1037              	 .loc 3 391 10
 1038 0084 FB79     	 ldrb r3,[r7,#7]
 392:../MotorLib/ControlModule/bldc_scalar_control_hall.c **** }
 1039              	 .loc 3 392 1
 1040 0086 1846     	 mov r0,r3
 1041 0088 0837     	 adds r7,r7,#8
 1042              	.LCFI90:
 1043              	 .cfi_def_cfa_offset 8
 1044 008a BD46     	 mov sp,r7
 1045              	.LCFI91:
 1046              	 .cfi_def_cfa_register 13
 1047              	 
 1048 008c 80BD     	 pop {r7,pc}
 1049              	.L47:
 1050 008e 00BF     	 .align 2
 1051              	.L46:
 1052 0090 00000000 	 .word Motor0_BLDC_SCALAR_HALL_CatchFree
 1053 0094 00000000 	 .word Motor0_BLDC_SCALAR_SPEED_POS_HALL
 1054 0098 00000000 	 .word Motor0_BLDC_SCALAR
 1055              	 .cfi_endproc
 1056              	.LFE450:
 1058              	 .text
 1059              	.Letext0:
 1060              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1061              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1062              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1063              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_ccu8.h"
 1064              	 .file 8 "../MotorLib/ControlModule/../MidSys/../MCUInit/ccu8.h"
 1065              	 .file 9 "../MotorLib/ControlModule/../MidSys/bldc_scalar_pwm_bc.h"
 1066              	 .file 10 "../MotorLib/ControlModule/bldc_scalar_control_scheme.h"
 1067              	 .file 11 "../MotorLib/ControlModule/bldc_scalar_control_hall.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bldc_scalar_control_hall.c
    {standard input}:17     .text.XMC_POSIF_HSC_GetExpectedPattern:00000000 $t
    {standard input}:24     .text.XMC_POSIF_HSC_GetExpectedPattern:00000000 XMC_POSIF_HSC_GetExpectedPattern
    {standard input}:70     .text.XMC_POSIF_HSC_SetHallPatterns:00000000 $t
    {standard input}:76     .text.XMC_POSIF_HSC_SetHallPatterns:00000000 XMC_POSIF_HSC_SetHallPatterns
    {standard input}:120    .text.XMC_POSIF_HSC_UpdateHallPattern:00000000 $t
    {standard input}:126    .text.XMC_POSIF_HSC_UpdateHallPattern:00000000 XMC_POSIF_HSC_UpdateHallPattern
    {standard input}:166    .text.XMC_POSIF_MCM_SetMultiChannelPattern:00000000 $t
    {standard input}:172    .text.XMC_POSIF_MCM_SetMultiChannelPattern:00000000 XMC_POSIF_MCM_SetMultiChannelPattern
    {standard input}:214    .text.XMC_POSIF_MCM_GetMultiChannelPattern:00000000 $t
    {standard input}:220    .text.XMC_POSIF_MCM_GetMultiChannelPattern:00000000 XMC_POSIF_MCM_GetMultiChannelPattern
    {standard input}:261    .text.XMC_POSIF_MCM_GetShadowMultiChannelPattern:00000000 $t
    {standard input}:267    .text.XMC_POSIF_MCM_GetShadowMultiChannelPattern:00000000 XMC_POSIF_MCM_GetShadowMultiChannelPattern
    {standard input}:308    .text.XMC_POSIF_MCM_UpdateMultiChannelPattern:00000000 $t
    {standard input}:314    .text.XMC_POSIF_MCM_UpdateMultiChannelPattern:00000000 XMC_POSIF_MCM_UpdateMultiChannelPattern
    {standard input}:356    .text.XMC_POSIF_DisableEvent:00000000 $t
    {standard input}:362    .text.XMC_POSIF_DisableEvent:00000000 XMC_POSIF_DisableEvent
    {standard input}:414    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:00000000 $t
    {standard input}:420    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern
    {standard input}:458    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:0000001c $d
    {standard input}:463    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern:00000000 $t
    {standard input}:469    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern
    {standard input}:492    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern:00000010 $d
    {standard input}:497    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:00000000 $t
    {standard input}:503    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern
    {standard input}:540    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:0000001c $d
    {standard input}:545    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:00000000 $t
    {standard input}:551    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern
    {standard input}:588    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:0000001c $d
    {standard input}:593    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:00000000 $t
    {standard input}:599    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern
    {standard input}:636    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:0000001c $d
    {standard input}:641    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern:00000000 $t
    {standard input}:647    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern
    {standard input}:670    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern:00000010 $d
    {standard input}:675    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:00000000 $t
    {standard input}:681    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern
    {standard input}:718    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:0000001c $d
    {standard input}:723    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent:00000000 $t
    {standard input}:729    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent
    {standard input}:766    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_DisableEvent:0000001c $d
    {standard input}:771    .ram_code:00000000 $t
    {standard input}:778    .ram_code:00000000 Motor0_BLDC_SCALAR_PatternInitiator
    {standard input}:920    .ram_code:000000b8 $d
    {standard input}:927    .text.Motor0_BLDC_SCALAR_State_Identification:00000000 $t
    {standard input}:934    .text.Motor0_BLDC_SCALAR_State_Identification:00000000 Motor0_BLDC_SCALAR_State_Identification
    {standard input}:1052   .text.Motor0_BLDC_SCALAR_State_Identification:00000090 $d

UNDEFINED SYMBOLS
Motor0_BLDC_SCALAR
Motor0_BLDC_SCALAR_Hall
Motor0_BLDC_SCALAR_PWM_BC
Motor0_BLDC_SCALAR_HALL_CatchFree
Motor0_BLDC_SCALAR_SPEED_POS_HALL
