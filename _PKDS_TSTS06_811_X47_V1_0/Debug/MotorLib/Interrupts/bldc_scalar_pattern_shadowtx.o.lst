   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "bldc_scalar_pattern_shadowtx.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_POSIF_HSC_GetLastSampledPattern,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_POSIF_HSC_GetLastSampledPattern:
  25              	.LFB280:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_posif.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @file xmc_posif.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @date 2019-12-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-02-18:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Initial version
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-02-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Driver description added <BR>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-06-19:
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Removed version macros and declaration of GetDriverVersion API <BR>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-07-02:
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Updated XMC_POSIF_QD_GetDirection API
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2016-03-09:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Optimization of write only registers
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2017-06-24
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Added posif map connectivity file<br>
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 2019-12-02:
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @endcond
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #ifndef XMC_POSIF_H
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_H
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * HEADER FILES
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_common.h"
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(POSIF0)
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_scu.h"
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_posif_map.h"
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @addtogroup XMClib XMC Peripheral Library
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @{
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @addtogroup POSIF
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @brief Position Interface Unit (POSIF) driver for the XMC microcontroller family <br>
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The POSIF unit is a flexible and powerful component for motor control systems that use
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * rotary encoders or hall sensors as feedback loop. It provides interface for motor position and v
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF unit works with CCU4 and CCU8 to enable position and velocity measurement and to control P
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Driver is divided in three POSIF functional blocks - Hall Sensor Control (POSIF_HSC), Quadrature
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * MultiChannel Mode (POSIF_MCM). <br>
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF driver features:
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Configuration structure XMC_POSIF_CONFIG_t and initialization function XMC_POSIF_Init() to c
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows to change the operating mode using XMC_POSIF_SetMode()
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows the selection of one of the four inputs (A, B, C or D) using XMC_POSIF_SelectInputSour
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * hall0, hall1 and hall2 signals. For quadrature decoder mode, inputs are phase A, phase B and ind
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Hall Sensor Control (APIs prefixed with XMC_POSIF_HSC_) <br>
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_HSC_CONFIG_t and initialization function XMC_POSIF_HSC_Ini
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Update current and expected hall pattern in shadow register using XMC_POSIF_HSC_SetHallPatte
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	- Allows immediate shadow transfer using XMC_POSIF_HSC_UpdateHallPattern()
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Quadrature Decoder (APIs prefixed with XMC_POSIF_QD_) <br>
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_QD_CONFIG_t and initialization function XMC_POSIF_QD_Init(
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Get direction of rotation using XMC_POSIF_QD_GetDirection()
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  MultiChannel Mode (APIs prefixed with XMC_POSIF_MCM_) <br>
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Configuration structure XMC_POSIF_MCM_CONFIG_t and initialization function XMC_POSIF_MCM_Init
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Update multichannel pattern in shadow register using XMC_POSIF_MCM_SetMultiChannelPattern()
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Allows immediate shadow transfer using XMC_POSIF_MCM_UpdateMultiChannelPattern()
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# User need to call respective init functions to configure POSIF operating mode. e.g to configu
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * call both XMC_POSIF_HSC_Init() and XMC_POSIF_MCM_Init().
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows to enable and disable interrupt sources and assign to service request node using XMC_P
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @note POSIF is not available on XMC11 and XMC12 devices
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @{
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * MACROS
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC47) || (UC_SERIES == XMC48) |
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0) || ((PTR)== POSIF1) ) /*< Check for val
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #else
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0))  /*< Check for valid module pointer */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * ENUMS
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines the return status, to verify the POSIF related API calls. Use type @ref XMC_POSIF_STATU
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_STATUS
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_OK = 0U,     /**< API fulfills request */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_ERROR        /**< API cannot fulfill request */
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_STATUS_t;
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable modes.Use type @ref XMC_POSIF_MODE_t for this enum.
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The members defines the function selector(FSEL) bitfields of \a PCONF register.
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_MODE
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_HALL_SENSOR = 0U, /**< Hall sensor mode */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_QD,               /**< Quadrature Decoder mode */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM,              /**< Standalone Multichannel mode */
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM_QD           /**< Quadrature Decoder + Standalone Multichannel mode */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MODE_t;
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable input ports.Use type @ref XMC_POSIF_INPUT_PORT_t for this enum.
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the respective input selector(INSELX) bitfields of \a PCONF register.
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It selects, which input is used for the phase or Hall input function (depending on the module is
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Quadrature Decoder or Hall Sensor Mode). Same enum can be used to configure pattern update signa
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \a PCONF register's \a MSETS bit field.
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_PORT
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_A = 0U, /**< INPUT-A */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_B,      /**< INPUT-B */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_C,      /**< INPUT-C */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_D,      /**< INPUT-D */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_E,      /**< INPUT-E */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_F,      /**< INPUT-F */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_G,      /**< INPUT-G */
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_H       /**< INPUT-H */
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_PORT_t;
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines active level of an input signal.Use type @ref XMC_POSIF_INPUT_ACTIVE_LEVEL_t for this e
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_ACTIVE_LEVEL
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_HIGH  = 0U, /**< Input - Active High */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_LOW         /**< Input - Active Low */
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_ACTIVE_LEVEL_t;
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF input debounce filter configuration.POSIF inputs are connected to low pass filter 
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * this enum is used to configure low pass filters cut off frequency.
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_FILTER_t for this enum.
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the low pass filter configuration(LPC) bitfield of \a PCONF register.
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_FILTER
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_DISABLED     = 0U, /**< No filtering */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_1_CLOCK_CYCLE,     /**< Filter of 1 Clock Cycle */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_2_CLOCK_CYCLE,     /**< Filter of 2 Clock Cycles */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_4_CLOCK_CYCLE,     /**< Filter of 4 Clock Cycles */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_8_CLOCK_CYCLE,     /**< Filter of 8 Clock Cycles */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_16_CLOCK_CYCLE,    /**< Filter of 16 Clock Cycles */
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_32_CLOCK_CYCLE,    /**< Filter of 32 Clock Cycles */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_64_CLOCK_CYCLE     /**< Filter of 64 Clock Cycles */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_FILTER_t;
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF events.Use type @ref XMC_POSIF_IRQ_EVENT_t for this enum.
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines available event sources.It is used to configure which event to be used for
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * interrupt generation using \a PFLGE register. [ PFLG,SPFLG,RPFLG]
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_IRQ_EVENT
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CHE                  = 0U, /**< Hall Mode : Correct Hall Event */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_WHE                  = 1U, /**< Hall Mode : Wrong Hall Event */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_HALL_INPUT           = 2U, /**< Hall Mode : Hall Input update */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_MCP_SHADOW_TRANSFER  = 4U, /**< Hall Mode + MCM Mode : MC Pattern shadow tran
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_INDX                 = 8U, /**< Quadrature Mode : Index event detection */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_ERR                  = 9U, /**< Quadrature Mode : Quadrature Phase Error */
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CNT                  = 10U, /**< Quadrature Mode : Quadrature Clock event */
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_DIR                  = 11U, /**< Quadrature Mode : Quadrature Direction chang
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_PCLK                 = 12U  /**< Quadrature Mode : Quadrature period clock ge
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_IRQ_EVENT_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF service request lines.Use type @ref XMC_POSIF_SR_ID_t for this enum.
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to connect POSIF event to required service request line.
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * in \a PFLGE register for interrupt generation.
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_SR_ID
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_0 = 0U, /**< SR-0 */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_1      /**< SR-1 */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_SR_ID_t;
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines position decoder mode selection.Use type @ref XMC_POSIF_QD_MODE_t for this enum.
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines configuration for the operation of the quadrature decoder mode.
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to configure \a QDC register.
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_MODE
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_QUADRATURE       = 0U, /**< Standard Quadrature Mode */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_DIRECTION_COUNT       /**< Direction Count Mode */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_MODE_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines motor rotation direction.Use type @ref XMC_POSIF_QD_DIR_t for this enum.
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the direction in quadrature mode.
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_DIR
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_COUNTERCLOCKWISE  = 0U, /**< Counter Clockwise */
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_CLOCKWISE              /**< Clockwise */
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_DIR_t;
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines frequency of index signal generation.Use type @ref XMC_POSIF_QD_INDEX_GENERATION_t for t
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Member represents available configuration for index marker generation using \a ICM  bit field in
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_INDEX_GENERATION
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_NEVER  = 0U, /**< Never generate the index marker signal */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ONCE,       /**< Generate only once after the first revolution */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ALWAYS      /**< Index marker generated upon every revolution */
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_INDEX_GENERATION_t;
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines trigger edge in hall sensor mode.Use type @ref XMC_POSIF_HSC_TRIGGER_EDGE_t for this en
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  It can be used to configure \a PCONF register's \a SPES and \a MSES bit fields.
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_HSC_TRIGGER_EDGE
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_RISING  = 0U, /**< Rising edge */
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_FALLING      /**< Falling edge */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_TRIGGER_EDGE_t;
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * DATA STRUCTURES
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard start*/
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma push
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma anon_unions
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma warning 586
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF peripheral register structure.Use type @ref XMC_POSIF_t for this data structure.
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef POSIF_GLOBAL_TypeDef XMC_POSIF_t;
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF quadrature decoder initialization data structure.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_QD_CONFIG_t for this data structure.
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  It used to configure Quadrature mode using \a QDC register.
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_QD_CONFIG
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_t mode;      /**< Operational Mode of the quadrature encoder and decoder */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_a: 1;       /**< Phase-A active level configuration */
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_b: 1;       /**< Phase-B active level configuration */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_leader: 1;  /**< Which of the two phase signals[Phase A or Phase B] leads the 
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 1;
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t index: 2;        /**< Index signal generation control. Use @ref XMC_POSIF_QD_INDEX_G
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 26;
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t qdc;
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_CONFIG_t;
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF hall sensor control initialization data structure.
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_HSC_CONFIG_t for this data structure.
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to initialize hall sensor mode configuration using \a PCONF register.
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_HSC_CONFIG
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 4;
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t disable_idle_signal: 1;   /**< Should idle signal be disabled upon wrong hall event?
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 11;
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger: 1;      /**< Of HSDA and HSDB, which one is to be used to trigger 
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger_edge: 1; /**< Which edge of the sampling trigger signal is to be co
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 6;
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_port: 2;    /**< Of the 4 external error ports, which one is to be co
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_enable: 1;  /**< Should external errors lead to Wrong Hall event? */
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_level: 1;   /**< What should be the active level of external error si
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t: 4;
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t hall_config;
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_CONFIG_t;
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF multi-channel mode initialization data structure.
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_MCM_CONFIG_t for this data structure.
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to initialize multi channel mode configuration using \a PCONF register.
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_MCM_CONFIG
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 5;
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_sw_update: 1; /**< should multi channel pattern updated by SW ? */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 12;
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_update_trigger: 3; /**< Of the 8 update triggers, which one is to be conside
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_trigger_edge: 1;  /**< Which edge of the pattern update trigger is to be con
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pwm_sync: 2;         /**< Of the 4 pwm sync inputs, which one is to be considered? *
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 8;
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t mcm_config;
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MCM_CONFIG_t;
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF module initialization data structure.
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_CONFIG_t for this data structure.
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *  It is used to initialize POSIF module using \a PCONF register.
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_CONFIG
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   union
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   {
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     {
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t mode: 2;    /**< POSIF Operational mode. Use @ref XMC_POSIF_MODE_t to configure */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 6;
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input0: 2; /**< Choice of input for Input-1 */
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input1: 2; /**< Choice of input for Input-2 */
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input2: 2; /**< Choice of input for Input-3 */
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 14;
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t filter: 3; /**< Input filter configuration */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t: 1;
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     };
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t pconf;
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   };
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_CONFIG_t;
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard end*/
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma pop
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #pragma warning restore
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * API Prototypes
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #ifdef __cplusplus
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** extern "C" {
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * De-asserts the POSIF module from reset and enables the clock.\n
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bit field depends upon \a peripheral.
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then it will ungate the peripheral clock.
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is the first API which application must invoke to configure POSIF.
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is internally called by XMC_POSIF_Init().
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Disable(),XMC_POSIF_Init() \n\n\n
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral);
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Asserts the POSIF module into reset and disables the clock.\n
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then in addition it will gate the peripheral clock.
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bitfield depends upon \a peripheral.
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Enable()\n\n\n
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral);
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to POSIF configuration data(operation mode,input selection and filter conf
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initialize POSIF module with \a config.\n
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures POSIF global registers.This is the first API which application must invoke to configu
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It sets up parameters common to all the POSIF modes - hall sensor,quadrature decoder and multi-c
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with mode of operation,input selection and filter configuration.
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init(),XMC_POSIF_MCM_Init() \n\n\n
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t *const config);
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to hall sensor control initialization data of type @ref XMC_POSIF_HSC_CONF
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t  Returns @ref XMC_POSIF_STATUS_OK if configured in Hall Sensor Mode
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *                             else return @ref XMC_POSIF_STATUS_ERROR.
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes hall sensor control mode.\n
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with which POSIF input trigger to be used for
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * sampling hall pattern.Configures \a PCONF register for idle signal generation for wrong hall eve
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Hall sensor mode before invocation of t
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns quadrature mode initialization status of type @ref XMC_POSIF_
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes quadrature decoder control mode.\n
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with quadrature mode using @ref XMC_POSIF_QD_MODE_t data structure.
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes \a QDC register with quadrature mode configuration using @ref XMC_POSIF_QD_CONFIG_t 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Quadrature decoder mode before invocati
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t *co
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns multi channel pattern initialization status of type @ref XMC_
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes multi channel mode in Hall mode, standalone multi-channel mode and quadrature with m
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with multi channel mode using @ref XMC_POSIF_MCM_CONFIG_t data stru
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to call XMC_POSIF_Init first before invocation of this API.
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_HALL_SENSOR, it is necessary to have called XMC_POSIF_HSC_Init before invocat
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_MCM_QD, it is necessary to have called XMC_POSIF_QD_Init before invocation of
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init(),XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init() \n\n\n
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param mode POSIF operating mode of type @ref XMC_POSIF_MODE_t
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures POSIF module for \a mode.\n
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's a\ FSEL bitfield with \a mode.
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Refer @ref XMC_POSIF_MODE_t for available options.
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF module should be in stopped state while changing the operating mode.
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop() \n\n\n
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_SetMode(XMC_POSIF_t *const peripheral, const XMC_POSIF_MODE_t mode)
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)(POSIF_PCONF_FSEL_Msk)) |
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)mode << POSIF_PCONF_FSEL_Pos) & (uint32_t)POSIF_PCONF_FSEL_Msk))
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input0 Choice of input for input 0 [0-3]
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input1 Choice of input for input 1 [0-3]
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input2 Choice of input for input 2 [0-3]
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures which input to be connected to POSIF module. \n
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's INSEL0,INSEL1,INSEL2 bit fields with source for the input connect
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \a input1, \a input2 respectively.
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures which input is used for the Phase X or Hall input X function depending upon the modul
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * set for Quadrature Decoder or Hall Sensor Mode.
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_SelectInputSource(XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input0
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                                  const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t 
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Starts POSIF \a peripheral functional state machine.\n
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Starts POSIF state machine for \a peripheral.Configures \a PRUNS register's \a SRB bit field wit
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Global properties of POSIF along with mode specific properties should have been initialized befo
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * FSM.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 562:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 563:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop(),XMC_POSIF_IsRunning() \n\n\n
 564:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 565:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Start(XMC_POSIF_t *const peripheral)
 566:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 567:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNS = (uint32_t)POSIF_PRUNS_SRB_Msk;
 568:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 569:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 570:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 571:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 572:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 573:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 574:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 575:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Stops POSIF \a peripheral functional state machine.\n
 576:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Stop POSIF functional state machine and clears current internal status of the \a peripheral.
 577:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRUNC register's \a CRB bit field with 1.
 578:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 580:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_IsRunning() \n\n\n
 581:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 582:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Stop(XMC_POSIF_t *const peripheral)
 583:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 584:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNC = (uint32_t)(POSIF_PRUNC_CRB_Msk | POSIF_PRUNC_CSM_Msk);
 585:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 586:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 587:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 588:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 589:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval bool Returns false: IDLE, true:RUNNING
 590:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 591:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 592:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns the status of POSIF module - Running or IDLE.\n
 593:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the status from \a PRUN register's \a SRB bit.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 595:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 596:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_Stop() \n\n\n
 597:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE bool XMC_POSIF_IsRunning(XMC_POSIF_t *const peripheral)
 599:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 600:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((bool)peripheral->PRUN);
 601:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 602:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 603:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 604:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 605:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns last sampled hall sensor pattern. Range : [0-7]
 606:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 607:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 608:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns last sampled hall sensor pattern of \a peripheral.\n
 609:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the last sampled hall sensor pattern from \a PDBG register's \a HSP bit field of \a pe
 610:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the last sampled hall sensor pattern by invoking 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 612:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 613:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.
 614:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 615:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 616:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetCurrentPattern(),XMC_POSIF_HSC_GetExpectedPattern() \n\n\n
 617:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 618:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_HSC_GetLastSampledPattern(XMC_POSIF_t *const peripheral)
 619:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
  27              	 .loc 1 619 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 620:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->PDBG) & POSIF_PDBG_HSP_Msk) >> POSIF_PDBG_HSP_Pos);
  43              	 .loc 1 620 32
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F80031 	 ldr r3,[r3,#256]
  46              	 .loc 1 620 11
  47 000e DBB2     	 uxtb r3,r3
  48              	 .loc 1 620 62
  49 0010 5B11     	 asrs r3,r3,#5
  50 0012 DBB2     	 uxtb r3,r3
  51 0014 03F00703 	 and r3,r3,#7
  52 0018 DBB2     	 uxtb r3,r3
 621:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
  53              	 .loc 1 621 1
  54 001a 1846     	 mov r0,r3
  55 001c 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 001e BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0020 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0024 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE280:
  70              	 .section .text.XMC_POSIF_HSC_GetExpectedPattern,"ax",%progbits
  71              	 .align 1
  72              	 .syntax unified
  73              	 .thumb
  74              	 .thumb_func
  75              	 .fpu fpv4-sp-d16
  77              	XMC_POSIF_HSC_GetExpectedPattern:
  78              	.LFB282:
 622:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 624:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 625:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns current hall sensor pattern. Range : [0-7]
 626:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 627:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 628:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns current sampled hall sensor pattern of \a peripheral.\n
 629:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the current hall sensor pattern from \a HALP register's \a HCP bit field of \a periphe
 630:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the current hall sensor pattern by invoking this 
 631:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 632:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 633:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.
 634:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 635:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 636:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetLastSampledPattern(),XMC_POSIF_HSC_GetExpectedPattern() \n\n\n
 637:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 638:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_HSC_GetCurrentPattern(XMC_POSIF_t *const peripheral)
 639:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 640:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->HALP & POSIF_HALP_HCP_Msk) >> POSIF_HALP_HCP_Pos));
 641:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 642:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 643:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 644:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 645:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint8_t Returns expected hall sensor pattern. Range : [0-7]
 646:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 647:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 648:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns expected hall sensor pattern of \a peripheral.\n
 649:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the expected hall sensor pattern from \a HALP register's \a HEP bit field of \a periph
 650:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the expected hall sensor pattern by invoking this
 651:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 652:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.
 654:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 655:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 656:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetLastSampledPattern(),XMC_POSIF_HSC_GetCurrentPattern() \n\n\n
 657:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 658:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint8_t XMC_POSIF_HSC_GetExpectedPattern(XMC_POSIF_t *const peripheral)
 659:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
  79              	 .loc 1 659 1
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0000 80B4     	 push {r7}
  85              	.LCFI6:
  86              	 .cfi_def_cfa_offset 4
  87              	 .cfi_offset 7,-4
  88 0002 83B0     	 sub sp,sp,#12
  89              	.LCFI7:
  90              	 .cfi_def_cfa_offset 16
  91 0004 00AF     	 add r7,sp,#0
  92              	.LCFI8:
  93              	 .cfi_def_cfa_register 7
  94 0006 7860     	 str r0,[r7,#4]
 660:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint8_t)((peripheral->HALP & POSIF_HALP_HEP_Msk) >> POSIF_HALP_HEP_Pos));
  95              	 .loc 1 660 32
  96 0008 7B68     	 ldr r3,[r7,#4]
  97 000a 1B6B     	 ldr r3,[r3,#48]
  98              	 .loc 1 660 61
  99 000c DB08     	 lsrs r3,r3,#3
 100              	 .loc 1 660 11
 101 000e DBB2     	 uxtb r3,r3
 102 0010 03F00703 	 and r3,r3,#7
 103 0014 DBB2     	 uxtb r3,r3
 661:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 104              	 .loc 1 661 1
 105 0016 1846     	 mov r0,r3
 106 0018 0C37     	 adds r7,r7,#12
 107              	.LCFI9:
 108              	 .cfi_def_cfa_offset 4
 109 001a BD46     	 mov sp,r7
 110              	.LCFI10:
 111              	 .cfi_def_cfa_register 13
 112              	 
 113 001c 5DF8047B 	 ldr r7,[sp],#4
 114              	.LCFI11:
 115              	 .cfi_restore 7
 116              	 .cfi_def_cfa_offset 0
 117 0020 7047     	 bx lr
 118              	 .cfi_endproc
 119              	.LFE282:
 121              	 .section .text.XMC_POSIF_HSC_SetHallPatterns,"ax",%progbits
 122              	 .align 1
 123              	 .syntax unified
 124              	 .thumb
 125              	 .thumb_func
 126              	 .fpu fpv4-sp-d16
 128              	XMC_POSIF_HSC_SetHallPatterns:
 129              	.LFB285:
 662:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 663:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 664:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 665:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern The hall sensor pattern to be programmed into current pattern [0-7]
 666:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 667:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures current Hall sensor \a pattern of \a peripheral.\n
 670:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures the Current hall sensor pattern on \a HALPS shadow register's \a HCPS bit field of \a
 671:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can set at any point in time program the current hall sensor pattern by invoking th
 672:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 673:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 674:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation. It may be noted that the pattern i
 675:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * written to the shadow register. Transfer from the shadow register is based on a hardware transfe
 676:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_HSC_UpdateHallPattern().
 677:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 678:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 679:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetCurrentPattern(),XMC_POSIF_HSC_SetExpectedPattern() \n\n\n
 680:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 681:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_SetCurrentPattern(XMC_POSIF_t *const peripheral, const uint8_t p
 682:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 683:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->HALPS = ((peripheral->HALPS & ~(uint32_t)(POSIF_HALPS_HCPS_Msk)) |
 684:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)pattern << POSIF_HALPS_HCPS_Pos) & (uint32_t)POSIF_HALPS_HCPS_Ms
 685:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 686:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 687:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 688:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 689:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern The hall sensor pattern to be programmed into expected pattern [0-7]
 690:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 691:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 692:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 693:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures the expected hall sensor \a pattern of \a peripheral.\n
 694:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can set at any point in time program the hall sensor expected patterns by invoking 
 695:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures the expected hall sensor pattern on \a HALPS shadow register's \a HEPS bit field of \
 696:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 697:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 698:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.It may be noted that the pattern is
 699:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * written to the shadow register. Transfer from the shadow register is based on a hardware transfe
 700:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_HSC_UpdateHallPattern().
 701:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 702:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_GetExpectedPattern() \n\n\n
 704:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 705:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_SetExpectedPattern(XMC_POSIF_t *const peripheral, const uint8_t 
 706:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 707:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->HALPS = ((peripheral->HALPS & ~(uint32_t)(POSIF_HALPS_HEPS_Msk)) |
 708:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)pattern << POSIF_HALPS_HEPS_Pos) & (uint32_t)POSIF_HALPS_HEPS_Ms
 709:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 710:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 711:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 712:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 713:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern_mask The hall sensor pattern mask [0-63] Format of mask: (expected_pattern << 3) 
 714:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 715:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 716:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 717:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures current and expected hall pattern of \a peripheral. \n
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a HALPS register with the Current and Expected hall sensor patterns in one operation
 719:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time program the current and expected hall sensor pattern by in
 720:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 721:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 722:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This is applicable only to the hall sensor mode of operation.  It may be noted that the pattern 
 723:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * written to the shadow register. Transfer from the shadow register is based on a hardware transfe
 724:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_HSC_UpdateHallPattern().
 725:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 726:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 727:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_SetExpectedPattern(),XMC_POSIF_HSC_SetCurrentPattern() \n\n\n
 728:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 729:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_SetHallPatterns(XMC_POSIF_t *const peripheral, const uint8_t pat
 730:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 130              	 .loc 1 730 1
 131              	 .cfi_startproc
 132              	 
 133              	 
 134              	 
 135 0000 80B4     	 push {r7}
 136              	.LCFI12:
 137              	 .cfi_def_cfa_offset 4
 138              	 .cfi_offset 7,-4
 139 0002 83B0     	 sub sp,sp,#12
 140              	.LCFI13:
 141              	 .cfi_def_cfa_offset 16
 142 0004 00AF     	 add r7,sp,#0
 143              	.LCFI14:
 144              	 .cfi_def_cfa_register 7
 145 0006 7860     	 str r0,[r7,#4]
 146 0008 0B46     	 mov r3,r1
 147 000a FB70     	 strb r3,[r7,#3]
 731:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->HALPS = (uint32_t)(pattern_mask & (POSIF_HALPS_HCPS_Msk | POSIF_HALPS_HEPS_Msk));
 148              	 .loc 1 731 23
 149 000c FB78     	 ldrb r3,[r7,#3]
 150 000e 03F03F02 	 and r2,r3,#63
 151              	 .loc 1 731 21
 152 0012 7B68     	 ldr r3,[r7,#4]
 153 0014 5A63     	 str r2,[r3,#52]
 732:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 154              	 .loc 1 732 1
 155 0016 00BF     	 nop
 156 0018 0C37     	 adds r7,r7,#12
 157              	.LCFI15:
 158              	 .cfi_def_cfa_offset 4
 159 001a BD46     	 mov sp,r7
 160              	.LCFI16:
 161              	 .cfi_def_cfa_register 13
 162              	 
 163 001c 5DF8047B 	 ldr r7,[sp],#4
 164              	.LCFI17:
 165              	 .cfi_restore 7
 166              	 .cfi_def_cfa_offset 0
 167 0020 7047     	 bx lr
 168              	 .cfi_endproc
 169              	.LFE285:
 171              	 .section .text.XMC_POSIF_MCM_SetMultiChannelPattern,"ax",%progbits
 172              	 .align 1
 173              	 .syntax unified
 174              	 .thumb
 175              	 .thumb_func
 176              	 .fpu fpv4-sp-d16
 178              	XMC_POSIF_MCM_SetMultiChannelPattern:
 179              	.LFB287:
 733:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 734:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 735:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 736:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 737:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 738:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 739:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Manually performs shadow transfer of hall sensor patterns.\n
 740:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a MCMS register's \a STHR bit field with 1.
 741:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Setting this bit to 1 leads to an immediate update of the fields \a HALP.HCP(Current pattern) an
 742:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 744:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * The transfer of hall sensor pattern shadow registers content to the sensor pattern register happ
 745:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * conditions. A hardware trigger starts the shadow transfer. Alternatively, the shadow transfer ca
 746:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * by application software by means of invocation of this API.
 747:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 748:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 749:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_SetHallPatterns() \n\n\n
 750:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 751:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_HSC_UpdateHallPattern(XMC_POSIF_t *const peripheral)
 752:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 753:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->MCMS = (uint32_t)POSIF_MCMS_STHR_Msk;
 754:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 755:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 756:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 757:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 758:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param pattern The 16b multi-channel pattern [0-65535]
 759:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 760:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 761:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 762:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a MCSM register with Multi-Channel Pattern.\n
 763:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * This 16b multi-channel pattern which controls the 16 outputs of all slices of a CCU8 module.
 764:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Transfer from the shadow register is based on a hardware transfer trigger
 765:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * or software trigger through API @ref XMC_POSIF_MCM_UpdateMultiChannelPattern().
 766:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Every time that a Multi-Channel pattern transfer is triggered, this value is passed into the fie
 767:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 768:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 769:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It may be noted that the pattern is merely written to the shadow register.
 770:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 771:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 772:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_GetMultiChannelPattern() \n\n\n
 773:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 774:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_MCM_SetMultiChannelPattern(XMC_POSIF_t *const peripheral, const uint
 775:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 180              	 .loc 1 775 1
 181              	 .cfi_startproc
 182              	 
 183              	 
 184              	 
 185 0000 80B4     	 push {r7}
 186              	.LCFI18:
 187              	 .cfi_def_cfa_offset 4
 188              	 .cfi_offset 7,-4
 189 0002 83B0     	 sub sp,sp,#12
 190              	.LCFI19:
 191              	 .cfi_def_cfa_offset 16
 192 0004 00AF     	 add r7,sp,#0
 193              	.LCFI20:
 194              	 .cfi_def_cfa_register 7
 195 0006 7860     	 str r0,[r7,#4]
 196 0008 0B46     	 mov r3,r1
 197 000a 7B80     	 strh r3,[r7,#2]
 776:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->MCSM = pattern;
 198              	 .loc 1 776 20
 199 000c 7A88     	 ldrh r2,[r7,#2]
 200 000e 7B68     	 ldr r3,[r7,#4]
 201 0010 5A64     	 str r2,[r3,#68]
 777:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 202              	 .loc 1 777 1
 203 0012 00BF     	 nop
 204 0014 0C37     	 adds r7,r7,#12
 205              	.LCFI21:
 206              	 .cfi_def_cfa_offset 4
 207 0016 BD46     	 mov sp,r7
 208              	.LCFI22:
 209              	 .cfi_def_cfa_register 13
 210              	 
 211 0018 5DF8047B 	 ldr r7,[sp],#4
 212              	.LCFI23:
 213              	 .cfi_restore 7
 214              	 .cfi_def_cfa_offset 0
 215 001c 7047     	 bx lr
 216              	 .cfi_endproc
 217              	.LFE287:
 219              	 .section .text.XMC_POSIF_MCM_GetMultiChannelPattern,"ax",%progbits
 220              	 .align 1
 221              	 .syntax unified
 222              	 .thumb
 223              	 .thumb_func
 224              	 .fpu fpv4-sp-d16
 226              	XMC_POSIF_MCM_GetMultiChannelPattern:
 227              	.LFB288:
 778:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 779:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 780:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 781:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint16_t Returns configured multi channel pattern
 782:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 783:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 784:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns configured multi channel pattern of \a peripheral. \n
 785:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the Multi-Channel Pattern from \a MCM register's MCMP bit field of \a peripheral
 786:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the multi-channel pattern by invoking this API.
 787:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 788:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 789:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_SetMultiChannelPattern() \n\n\n
 790:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 791:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint16_t XMC_POSIF_MCM_GetMultiChannelPattern(XMC_POSIF_t *const peripheral)
 792:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 228              	 .loc 1 792 1
 229              	 .cfi_startproc
 230              	 
 231              	 
 232              	 
 233 0000 80B4     	 push {r7}
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 4
 236              	 .cfi_offset 7,-4
 237 0002 83B0     	 sub sp,sp,#12
 238              	.LCFI25:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI26:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
 793:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint16_t)(peripheral->MCM & (uint32_t)POSIF_MCM_MCMP_Msk));
 244              	 .loc 1 793 32
 245 0008 7B68     	 ldr r3,[r7,#4]
 246 000a 1B6C     	 ldr r3,[r3,#64]
 247              	 .loc 1 793 11
 248 000c 9BB2     	 uxth r3,r3
 794:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 249              	 .loc 1 794 1
 250 000e 1846     	 mov r0,r3
 251 0010 0C37     	 adds r7,r7,#12
 252              	.LCFI27:
 253              	 .cfi_def_cfa_offset 4
 254 0012 BD46     	 mov sp,r7
 255              	.LCFI28:
 256              	 .cfi_def_cfa_register 13
 257              	 
 258 0014 5DF8047B 	 ldr r7,[sp],#4
 259              	.LCFI29:
 260              	 .cfi_restore 7
 261              	 .cfi_def_cfa_offset 0
 262 0018 7047     	 bx lr
 263              	 .cfi_endproc
 264              	.LFE288:
 266              	 .section .text.XMC_POSIF_MCM_GetShadowMultiChannelPattern,"ax",%progbits
 267              	 .align 1
 268              	 .syntax unified
 269              	 .thumb
 270              	 .thumb_func
 271              	 .fpu fpv4-sp-d16
 273              	XMC_POSIF_MCM_GetShadowMultiChannelPattern:
 274              	.LFB289:
 795:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** 
 796:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** /**
 797:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 798:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval uint16_t Returns configured multi channel pattern present in shadow transfer register
 799:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 801:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Returns configured multi channel pattern in shadow register of \a peripheral. \n
 802:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Retrieves the Multi-Channel Pattern from \a MCSM shadow register's \a MCMPS bit field.
 803:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * Applications can at any point in time retrieve the multi-channel pattern by invoking this API.
 804:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 805:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * It can be used when MCM is enabled.
 806:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  *
 807:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 808:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_MCM_SetMultiChannelPattern() \n\n\n
 809:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****  */
 810:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE uint16_t XMC_POSIF_MCM_GetShadowMultiChannelPattern(XMC_POSIF_t *const peripheral)
 811:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** {
 275              	 .loc 1 811 1
 276              	 .cfi_startproc
 277              	 
 278              	 
 279              	 
 280 0000 80B4     	 push {r7}
 281              	.LCFI30:
 282              	 .cfi_def_cfa_offset 4
 283              	 .cfi_offset 7,-4
 284 0002 83B0     	 sub sp,sp,#12
 285              	.LCFI31:
 286              	 .cfi_def_cfa_offset 16
 287 0004 00AF     	 add r7,sp,#0
 288              	.LCFI32:
 289              	 .cfi_def_cfa_register 7
 290 0006 7860     	 str r0,[r7,#4]
 812:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h ****   return ((uint16_t)(peripheral->MCSM & (uint32_t)POSIF_MCSM_MCMPS_Msk));
 291              	 .loc 1 812 32
 292 0008 7B68     	 ldr r3,[r7,#4]
 293 000a 5B6C     	 ldr r3,[r3,#68]
 294              	 .loc 1 812 11
 295 000c 9BB2     	 uxth r3,r3
 813:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_posif.h **** }
 296              	 .loc 1 813 1
 297 000e 1846     	 mov r0,r3
 298 0010 0C37     	 adds r7,r7,#12
 299              	.LCFI33:
 300              	 .cfi_def_cfa_offset 4
 301 0012 BD46     	 mov sp,r7
 302              	.LCFI34:
 303              	 .cfi_def_cfa_register 13
 304              	 
 305 0014 5DF8047B 	 ldr r7,[sp],#4
 306              	.LCFI35:
 307              	 .cfi_restore 7
 308              	 .cfi_def_cfa_offset 0
 309 0018 7047     	 bx lr
 310              	 .cfi_endproc
 311              	.LFE289:
 313              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue,"ax",%progbits
 314              	 .align 1
 315              	 .syntax unified
 316              	 .thumb
 317              	 .thumb_func
 318              	 .fpu fpv4-sp-d16
 320              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue:
 321              	.LFB410:
 322              	 .file 2 "../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h"
   1:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
   2:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @file bldc_scalar_speed_pos_hall.h
   3:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief Speed and position interface using 3 hall sensor feedback. This uses floating prescaler f
   4:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @date 2016-08-31
   5:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
   6:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
   7:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * BLDC_SCALAR_CONTROL v1.0.2 - BLDC motor control using block commutation
   8:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
   9:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * All rights reserved.
  10:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  11:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  12:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * following conditions are met:
  13:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  14:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  15:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   disclaimer.
  16:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  17:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  18:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  19:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  20:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  21:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *   products derived from this software without specific prior written permission.
  22:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  23:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  24:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  25:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  26:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  27:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  28:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  29:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  31:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  32:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * with Infineon Technologies AG (dave@infineon.com).
  33:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
  34:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  35:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Change History
  36:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * --------------
  37:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  38:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  39:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * 2016-08-31:
  40:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *     - Initial version
  41:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  42:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @endcond
  43:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
  44:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  45:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  46:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @addtogroup BLDC_SCALAR BLDC Motor Control
  47:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @{
  48:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  49:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  50:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  51:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @addtogroup MidSys
  52:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @{
  53:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  54:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #ifndef BLDC_SCALAR_SPEED_POS_HALL_H_
  55:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_SPEED_POS_HALL_H_
  56:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  57:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  58:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * HEADER FILES
  59:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
  60:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #include "../MCUInit/ccu4.h"
  61:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #include "../MCUInit/gpio.h"
  62:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #include "../MCUInit/posif.h"
  63:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  64:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  65:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  66:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * MACROS
  67:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
  68:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /** This defines speed accumulation limit value*/
  69:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_SPEED_POS_HALL_SPEEDACCUMLIMITCHECK             (5U)
  70:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /** Maximum period value of CCU4 slice */
  71:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_SPEED_POS_HALL_CAP_COMP_VAL                     (0xFFFFU)
  72:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /** Capture register number */
  73:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #define BLDC_SCALAR_HALL_CAPTURE_REGITSER                           (3U)
  74:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  75:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  76:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * ENUMS
  77:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
  78:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  79:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief return value of API
  80:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  81:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** typedef enum BLDC_SCALAR_SPEED_POS_HALL_STATUS
  82:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
  83:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS = 0U,   /*!< API execution is successful */
  84:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   BLDC_SCALAR_SPEED_POS_HALL_STATUS_FAILURE        /*!< API execution is failed */
  85:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  86:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** } BLDC_SCALAR_SPEED_POS_HALL_STATUS_t;
  87:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
  88:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
  89:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * DATA STRUCTURES
  90:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
  91:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
  92:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @brief structure to get the position and speed
  93:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
  94:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** typedef struct BLDC_SCALAR_SPEED_POS_HALL
  95:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
  96:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t captureval[6];      /*!< captured time value between two correct hall events */
  97:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t capval;             /*!< Captured time Value */
  98:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t speedcheck;         /*!< whether motor speed can be calculated */
  99:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t speedaccum;         /*!< accumulated speed of the motor for 6 samples */
 100:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t speed_constant;     /*!< constant value used for speed calculation */
 101:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t index;               /*!< index of an array of hall pattern */
 102:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t speedindex;          /*!< index of an array of the speed capture variables */
 103:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** } BLDC_SCALAR_SPEED_POS_HALL_t;
 104:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 105:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 106:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
 107:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** * EXTERN
 108:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** ***************************************************************************************************
 109:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** extern BLDC_SCALAR_SPEED_POS_HALL_t Motor0_BLDC_SCALAR_SPEED_POS_HALL;
 110:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** extern uint32_t BLDC_SCALAR_SPEED_POS_HALL_Cap_Array[16];
 111:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 112:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #ifdef __cplusplus
 113:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****    extern "C" {
 114:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** #endif
 115:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**************************************************************************************************
 116:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * API Prototypes
 117:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  **************************************************************************************************
 118:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 119:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 120:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 121:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 122:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Return the current state of the POSIF input pins to which hall sensors are connected.
 123:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 124:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** uint32_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallPosition(void);
 125:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 126:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 127:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 128:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 129:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 130:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Initializes the peripheral required for position and speed identification.
 131:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * This initializes the POSIF and CCU4 module.
 132:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 133:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** void Motor0_BLDC_SCALAR_SPEED_POS_HALL_Init(void);
 134:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 135:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 136:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 137:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 138:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 139:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  Starts CCU4 and POSIF modules required for position and speed detection.
 140:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  It also reinitializes the speed calculation related variables.
 141:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 142:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** void Motor0_BLDC_SCALAR_SPEED_POS_HALL_Start(void);
 143:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 144:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 145:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None <br>
 146:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 147:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 148:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  Stops CCU4 and POSIF modules required for position and speed detection.
 149:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 150:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** void Motor0_BLDC_SCALAR_SPEED_POS_HALL_Stop(void);
 151:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 152:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 153:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 154:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return none <br>
 155:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 156:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 157:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Resets variables related to speed calculation.
 158:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 159:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_ClearSpeedFilter(void)
 160:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 161:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex = 0U;
 162:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedcheck = 0U;
 163:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[0] = 0U;
 164:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[1] = 0U;
 165:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[2] = 0U;
 166:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[3] = 0U;
 167:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[4] = 0U;
 168:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[5] = 0U;
 169:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval = Motor0_BLDC_SCALAR_SPEED_POS_HALL.speed_constant;
 170:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum = 0U;
 171:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 172:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 173:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 174:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param capval captured value calculated from captured timer and prescaler
 175:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return BLDC_SCALAR_SPEED_POS_HALL_STATUS_t status of API execution \n
 176:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * BLDC_SCALAR_SPEED_POS_HALL_STATUS_FAILURE: if valid capture value is not available \n
 177:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS: if valid capture value is available \n
 178:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  <br>
 179:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 180:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 181:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  Calculates the captured time from timer value and current prescaler value in capture register
 182:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 183:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Execution Time:</b><br>
 184:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * <b>1.7 uSec </b>using O3 optimization level
 185:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 186:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE BLDC_SCALAR_SPEED_POS_HALL_STATUS_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureVa
 187:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 323              	 .loc 2 187 1
 324              	 .cfi_startproc
 325              	 
 326              	 
 327 0000 80B5     	 push {r7,lr}
 328              	.LCFI36:
 329              	 .cfi_def_cfa_offset 8
 330              	 .cfi_offset 7,-8
 331              	 .cfi_offset 14,-4
 332 0002 86B0     	 sub sp,sp,#24
 333              	.LCFI37:
 334              	 .cfi_def_cfa_offset 32
 335 0004 00AF     	 add r7,sp,#0
 336              	.LCFI38:
 337              	 .cfi_def_cfa_register 7
 338 0006 7860     	 str r0,[r7,#4]
 188:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   BLDC_SCALAR_SPEED_POS_HALL_STATUS_t status = BLDC_SCALAR_SPEED_POS_HALL_STATUS_FAILURE;  /* retur
 339              	 .loc 2 188 39
 340 0008 0123     	 movs r3,#1
 341 000a FB75     	 strb r3,[r7,#23]
 189:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t temp_capval; /* capture register value */
 190:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t curr_psc;    /* prescaler value */
 191:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 192:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   temp_capval = (uint32_t)XMC_CCU4_SLICE_GetCaptureRegisterValue(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SL
 342              	 .loc 2 192 27
 343 000c 0321     	 movs r1,#3
 344 000e 1648     	 ldr r0,.L15
 345 0010 FFF7FEFF 	 bl XMC_CCU4_SLICE_GetCaptureRegisterValue
 346 0014 3861     	 str r0,[r7,#16]
 193:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 194:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /*If Full flag is set, read the captured value and save in the dynamic handle */
 195:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   if (((temp_capval & (uint32_t)CCU4_CC4_CV_FFL_Msk) >> CCU4_CC4_CV_FFL_Pos) == 1U)
 347              	 .loc 2 195 78
 348 0016 3B69     	 ldr r3,[r7,#16]
 349 0018 03F48013 	 and r3,r3,#1048576
 350              	 .loc 2 195 6
 351 001c 002B     	 cmp r3,#0
 352 001e 1BD0     	 beq .L12
 196:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 197:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     curr_psc = ((temp_capval & (uint32_t)CCU4_CC4_CV_FPCV_Msk) >> (uint32_t)CCU4_CC4_CV_FPCV_Pos);
 353              	 .loc 2 197 64
 354 0020 3B69     	 ldr r3,[r7,#16]
 355 0022 1B0C     	 lsrs r3,r3,#16
 356              	 .loc 2 197 14
 357 0024 03F00F03 	 and r3,r3,#15
 358 0028 FB60     	 str r3,[r7,#12]
 198:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     temp_capval = temp_capval & BLDC_SCALAR_SPEED_POS_HALL_CAP_COMP_VAL;
 359              	 .loc 2 198 17
 360 002a 3B69     	 ldr r3,[r7,#16]
 361 002c 9BB2     	 uxth r3,r3
 362 002e 3B61     	 str r3,[r7,#16]
 199:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval =
 200:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****         (uint32_t)(BLDC_SCALAR_SPEED_POS_HALL_Cap_Array[(curr_psc - MOTOR0_BLDC_SCALAR_CCU4_PRESCAL
 363              	 .loc 2 200 67
 364 0030 FB68     	 ldr r3,[r7,#12]
 365 0032 053B     	 subs r3,r3,#5
 366              	 .loc 2 200 56
 367 0034 0D4A     	 ldr r2,.L15+4
 368 0036 52F82320 	 ldr r2,[r2,r3,lsl#2]
 201:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****         (((uint32_t)1 << (curr_psc - MOTOR0_BLDC_SCALAR_CCU4_PRESCALER)) * (uint32_t)temp_capval));
 369              	 .loc 2 201 36
 370 003a FB68     	 ldr r3,[r7,#12]
 371 003c 053B     	 subs r3,r3,#5
 372              	 .loc 2 201 74
 373 003e 3969     	 ldr r1,[r7,#16]
 374 0040 01FA03F3 	 lsl r3,r1,r3
 200:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****         (((uint32_t)1 << (curr_psc - MOTOR0_BLDC_SCALAR_CCU4_PRESCALER)) * (uint32_t)temp_capval));
 375              	 .loc 2 200 9
 376 0044 1344     	 add r3,r3,r2
 199:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval =
 377              	 .loc 2 199 46
 378 0046 0A4A     	 ldr r2,.L15+8
 379 0048 9361     	 str r3,[r2,#24]
 202:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     *capval = (uint32_t)Motor0_BLDC_SCALAR_SPEED_POS_HALL.capval;
 380              	 .loc 2 202 58
 381 004a 094B     	 ldr r3,.L15+8
 382 004c 9A69     	 ldr r2,[r3,#24]
 383              	 .loc 2 202 13
 384 004e 7B68     	 ldr r3,[r7,#4]
 385 0050 1A60     	 str r2,[r3]
 203:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     status = BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS;
 386              	 .loc 2 203 12
 387 0052 0023     	 movs r3,#0
 388 0054 FB75     	 strb r3,[r7,#23]
 389 0056 02E0     	 b .L13
 390              	.L12:
 204:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 205:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   else
 206:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 207:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     *capval = 0U;
 391              	 .loc 2 207 13
 392 0058 7B68     	 ldr r3,[r7,#4]
 393 005a 0022     	 movs r2,#0
 394 005c 1A60     	 str r2,[r3]
 395              	.L13:
 208:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 209:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 210:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return (status);
 396              	 .loc 2 210 10
 397 005e FB7D     	 ldrb r3,[r7,#23]
 211:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 398              	 .loc 2 211 1
 399 0060 1846     	 mov r0,r3
 400 0062 1837     	 adds r7,r7,#24
 401              	.LCFI39:
 402              	 .cfi_def_cfa_offset 8
 403 0064 BD46     	 mov sp,r7
 404              	.LCFI40:
 405              	 .cfi_def_cfa_register 13
 406              	 
 407 0066 80BD     	 pop {r7,pc}
 408              	.L16:
 409              	 .align 2
 410              	.L15:
 411 0068 00C20040 	 .word 1073791488
 412 006c 00000000 	 .word BLDC_SCALAR_SPEED_POS_HALL_Cap_Array
 413 0070 00000000 	 .word Motor0_BLDC_SCALAR_SPEED_POS_HALL
 414              	 .cfi_endproc
 415              	.LFE410:
 417              	 .section .ram_code,"ax",%progbits
 418              	 .align 1
 419              	 .syntax unified
 420              	 .thumb
 421              	 .thumb_func
 422              	 .fpu fpv4-sp-d16
 424              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_SpeedCalculation:
 425              	.LFB411:
 212:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 213:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 214:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param capval time between two hall events (60 degrees)
 215:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param speed Calculated electrical speed in RPM
 216:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @return None
 217:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *  <br>
 218:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 219:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description:</b><br>
 220:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Calculates the speed based upon the captured time value between two correct hall events.
 221:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * It uses the floating prescaler for better resolution and low speed value.
 222:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 223:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Execution Time:</b><br>
 224:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * <b>9.5 uSec </b>using O3 optimization level
 225:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 226:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /*This function will calculate the speed based upon the captured time values.*/
 227:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** RAM_ATTRIBUTE __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_SpeedCalculation(uint32_t capv
 228:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 426              	 .loc 2 228 1
 427              	 .cfi_startproc
 428              	 
 429              	 
 430              	 
 431 0000 80B4     	 push {r7}
 432              	.LCFI41:
 433              	 .cfi_def_cfa_offset 4
 434              	 .cfi_offset 7,-4
 435 0002 83B0     	 sub sp,sp,#12
 436              	.LCFI42:
 437              	 .cfi_def_cfa_offset 16
 438 0004 00AF     	 add r7,sp,#0
 439              	.LCFI43:
 440              	 .cfi_def_cfa_register 7
 441 0006 7860     	 str r0,[r7,#4]
 442 0008 3960     	 str r1,[r7]
 229:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /* Moving average to calculate the speed */
 230:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum -= Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[Moto
 443              	 .loc 2 230 48
 444 000a 274B     	 ldr r3,.L22
 445 000c 1A6A     	 ldr r2,[r3,#32]
 446              	 .loc 2 230 129
 447 000e 264B     	 ldr r3,.L22
 448 0010 93F82930 	 ldrb r3,[r3,#41]
 449 0014 1946     	 mov r1,r3
 450              	 .loc 2 230 95
 451 0016 244B     	 ldr r3,.L22
 452 0018 53F82130 	 ldr r3,[r3,r1,lsl#2]
 453              	 .loc 2 230 48
 454 001c D31A     	 subs r3,r2,r3
 455 001e 224A     	 ldr r2,.L22
 456 0020 1362     	 str r3,[r2,#32]
 231:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex] = capv
 457              	 .loc 2 231 81
 458 0022 214B     	 ldr r3,.L22
 459 0024 93F82930 	 ldrb r3,[r3,#41]
 460 0028 1946     	 mov r1,r3
 461              	 .loc 2 231 94
 462 002a 1F4A     	 ldr r2,.L22
 463 002c 7B68     	 ldr r3,[r7,#4]
 464 002e 42F82130 	 str r3,[r2,r1,lsl#2]
 232:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum += Motor0_BLDC_SCALAR_SPEED_POS_HALL.captureval[Moto
 465              	 .loc 2 232 48
 466 0032 1D4B     	 ldr r3,.L22
 467 0034 1A6A     	 ldr r2,[r3,#32]
 468              	 .loc 2 232 129
 469 0036 1C4B     	 ldr r3,.L22
 470 0038 93F82930 	 ldrb r3,[r3,#41]
 471 003c 1946     	 mov r1,r3
 472              	 .loc 2 232 95
 473 003e 1A4B     	 ldr r3,.L22
 474 0040 53F82130 	 ldr r3,[r3,r1,lsl#2]
 475              	 .loc 2 232 48
 476 0044 1344     	 add r3,r3,r2
 477 0046 184A     	 ldr r2,.L22
 478 0048 1362     	 str r3,[r2,#32]
 233:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 234:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex++;
 479              	 .loc 2 234 36
 480 004a 174B     	 ldr r3,.L22
 481 004c 93F82930 	 ldrb r3,[r3,#41]
 482              	 .loc 2 234 47
 483 0050 0133     	 adds r3,r3,#1
 484 0052 DAB2     	 uxtb r2,r3
 485 0054 144B     	 ldr r3,.L22
 486 0056 83F82920 	 strb r2,[r3,#41]
 235:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 236:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   /* Speed calculation starts after 6 hall events */
 237:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   if (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex > BLDC_SCALAR_SPEED_POS_HALL_SPEEDACCUMLIMITCHEC
 487              	 .loc 2 237 40
 488 005a 134B     	 ldr r3,.L22
 489 005c 93F82930 	 ldrb r3,[r3,#41]
 490              	 .loc 2 237 6
 491 0060 052B     	 cmp r3,#5
 492 0062 06D9     	 bls .L18
 238:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 239:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedindex = 0U;
 493              	 .loc 2 239 50
 494 0064 104B     	 ldr r3,.L22
 495 0066 0022     	 movs r2,#0
 496 0068 83F82920 	 strb r2,[r3,#41]
 240:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedcheck = 1U;
 497              	 .loc 2 240 50
 498 006c 0E4B     	 ldr r3,.L22
 499 006e 0122     	 movs r2,#1
 500 0070 DA61     	 str r2,[r3,#28]
 501              	.L18:
 241:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 242:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 243:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   if (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedcheck == 1U)
 502              	 .loc 2 243 40
 503 0072 0D4B     	 ldr r3,.L22
 504 0074 DB69     	 ldr r3,[r3,#28]
 505              	 .loc 2 243 6
 506 0076 012B     	 cmp r3,#1
 507 0078 0CD1     	 bne .L19
 244:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 245:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     if (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speedaccum > 0U)
 508              	 .loc 2 245 42
 509 007a 0B4B     	 ldr r3,.L22
 510 007c 1B6A     	 ldr r3,[r3,#32]
 511              	 .loc 2 245 8
 512 007e 002B     	 cmp r3,#0
 513 0080 0BD0     	 beq .L21
 246:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     {
 247:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****       *speed = (Motor0_BLDC_SCALAR_SPEED_POS_HALL.speed_constant) / (Motor0_BLDC_SCALAR_SPEED_POS_H
 514              	 .loc 2 247 50
 515 0082 094B     	 ldr r3,.L22
 516 0084 5A6A     	 ldr r2,[r3,#36]
 517              	 .loc 2 247 103
 518 0086 084B     	 ldr r3,.L22
 519 0088 1B6A     	 ldr r3,[r3,#32]
 520              	 .loc 2 247 67
 521 008a B2FBF3F2 	 udiv r2,r2,r3
 522              	 .loc 2 247 14
 523 008e 3B68     	 ldr r3,[r7]
 524 0090 1A60     	 str r2,[r3]
 248:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     }
 249:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 250:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   else
 251:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   {
 252:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****     *speed = 0U;
 253:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 254:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 525              	 .loc 2 254 1
 526 0092 02E0     	 b .L21
 527              	.L19:
 252:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   }
 528              	 .loc 2 252 12
 529 0094 3B68     	 ldr r3,[r7]
 530 0096 0022     	 movs r2,#0
 531 0098 1A60     	 str r2,[r3]
 532              	.L21:
 533              	 .loc 2 254 1
 534 009a 00BF     	 nop
 535 009c 0C37     	 adds r7,r7,#12
 536              	.LCFI44:
 537              	 .cfi_def_cfa_offset 4
 538 009e BD46     	 mov sp,r7
 539              	.LCFI45:
 540              	 .cfi_def_cfa_register 13
 541              	 
 542 00a0 5DF8047B 	 ldr r7,[sp],#4
 543              	.LCFI46:
 544              	 .cfi_restore 7
 545              	 .cfi_def_cfa_offset 0
 546 00a4 7047     	 bx lr
 547              	.L23:
 548 00a6 00BF     	 .align 2
 549              	.L22:
 550 00a8 00000000 	 .word Motor0_BLDC_SCALAR_SPEED_POS_HALL
 551              	 .cfi_endproc
 552              	.LFE411:
 554              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern,"ax",%progbits
 555              	 .align 1
 556              	 .syntax unified
 557              	 .thumb
 558              	 .thumb_func
 559              	 .fpu fpv4-sp-d16
 561              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:
 562              	.LFB412:
 255:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 256:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param pattern The 16b multi-channel pattern [0-65535]
 257:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None
 258:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 259:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 260:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Configures \a MCSM register with Multi-Channel Pattern.\n
 261:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 262:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(uint16_t pattern)
 263:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 563              	 .loc 2 263 1
 564              	 .cfi_startproc
 565              	 
 566              	 
 567 0000 80B5     	 push {r7,lr}
 568              	.LCFI47:
 569              	 .cfi_def_cfa_offset 8
 570              	 .cfi_offset 7,-8
 571              	 .cfi_offset 14,-4
 572 0002 82B0     	 sub sp,sp,#8
 573              	.LCFI48:
 574              	 .cfi_def_cfa_offset 16
 575 0004 00AF     	 add r7,sp,#0
 576              	.LCFI49:
 577              	 .cfi_def_cfa_register 7
 578 0006 0346     	 mov r3,r0
 579 0008 FB80     	 strh r3,[r7,#6]
 264:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 265:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_MCM_SetMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE, pattern);
 580              	 .loc 2 265 3
 581 000a FB88     	 ldrh r3,[r7,#6]
 582 000c 1946     	 mov r1,r3
 583 000e 0348     	 ldr r0,.L25
 584 0010 FFF7FEFF 	 bl XMC_POSIF_MCM_SetMultiChannelPattern
 266:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** 
 267:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 585              	 .loc 2 267 1
 586 0014 00BF     	 nop
 587 0016 0837     	 adds r7,r7,#8
 588              	.LCFI50:
 589              	 .cfi_def_cfa_offset 8
 590 0018 BD46     	 mov sp,r7
 591              	.LCFI51:
 592              	 .cfi_def_cfa_register 13
 593              	 
 594 001a 80BD     	 pop {r7,pc}
 595              	.L26:
 596              	 .align 2
 597              	.L25:
 598 001c 00800240 	 .word 1073905664
 599              	 .cfi_endproc
 600              	.LFE412:
 602              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern,"ax",%progbits
 603              	 .align 1
 604              	 .syntax unified
 605              	 .thumb
 606              	 .thumb_func
 607              	 .fpu fpv4-sp-d16
 609              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:
 610              	.LFB414:
 268:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 269:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 270:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 271:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 272:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Performs shadow transfer of the Multi-Channel Pattern register by configuring.\n
 273:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 274:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateMultiChannelPattern(void)
 275:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 276:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_MCM_UpdateMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 277:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 278:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 279:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint16_t Returns configured multi channel pattern <br>
 280:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 281:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 282:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns configured multi channel pattern of \a peripheral. \n
 283:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 284:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint16_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern(void)
 285:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 611              	 .loc 2 285 1
 612              	 .cfi_startproc
 613              	 
 614              	 
 615 0000 80B5     	 push {r7,lr}
 616              	.LCFI52:
 617              	 .cfi_def_cfa_offset 8
 618              	 .cfi_offset 7,-8
 619              	 .cfi_offset 14,-4
 620 0002 82B0     	 sub sp,sp,#8
 621              	.LCFI53:
 622              	 .cfi_def_cfa_offset 16
 623 0004 00AF     	 add r7,sp,#0
 624              	.LCFI54:
 625              	 .cfi_def_cfa_register 7
 286:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint16_t pattern;
 287:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   pattern = XMC_POSIF_MCM_GetMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 626              	 .loc 2 287 13
 627 0006 0548     	 ldr r0,.L29
 628 0008 FFF7FEFF 	 bl XMC_POSIF_MCM_GetMultiChannelPattern
 629 000c 0346     	 mov r3,r0
 630 000e FB80     	 strh r3,[r7,#6]
 288:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(pattern);
 631              	 .loc 2 288 9
 632 0010 FB88     	 ldrh r3,[r7,#6]
 289:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 633              	 .loc 2 289 1
 634 0012 1846     	 mov r0,r3
 635 0014 0837     	 adds r7,r7,#8
 636              	.LCFI55:
 637              	 .cfi_def_cfa_offset 8
 638 0016 BD46     	 mov sp,r7
 639              	.LCFI56:
 640              	 .cfi_def_cfa_register 13
 641              	 
 642 0018 80BD     	 pop {r7,pc}
 643              	.L30:
 644 001a 00BF     	 .align 2
 645              	.L29:
 646 001c 00800240 	 .word 1073905664
 647              	 .cfi_endproc
 648              	.LFE414:
 650              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern,"ax",%progbits
 651              	 .align 1
 652              	 .syntax unified
 653              	 .thumb
 654              	 .thumb_func
 655              	 .fpu fpv4-sp-d16
 657              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:
 658              	.LFB415:
 290:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 291:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint16_t Returns configured multi channel pattern present in shadow transfer register <b
 292:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 293:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 294:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns configured multi channel pattern in shadow register of \a peripheral. \n
 295:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 296:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint16_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern(void)
 297:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 659              	 .loc 2 297 1
 660              	 .cfi_startproc
 661              	 
 662              	 
 663 0000 80B5     	 push {r7,lr}
 664              	.LCFI57:
 665              	 .cfi_def_cfa_offset 8
 666              	 .cfi_offset 7,-8
 667              	 .cfi_offset 14,-4
 668 0002 82B0     	 sub sp,sp,#8
 669              	.LCFI58:
 670              	 .cfi_def_cfa_offset 16
 671 0004 00AF     	 add r7,sp,#0
 672              	.LCFI59:
 673              	 .cfi_def_cfa_register 7
 298:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint16_t pattern;
 299:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   pattern = XMC_POSIF_MCM_GetShadowMultiChannelPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 674              	 .loc 2 299 13
 675 0006 0548     	 ldr r0,.L33
 676 0008 FFF7FEFF 	 bl XMC_POSIF_MCM_GetShadowMultiChannelPattern
 677 000c 0346     	 mov r3,r0
 678 000e FB80     	 strh r3,[r7,#6]
 300:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(pattern);
 679              	 .loc 2 300 9
 680 0010 FB88     	 ldrh r3,[r7,#6]
 301:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 681              	 .loc 2 301 1
 682 0012 1846     	 mov r0,r3
 683 0014 0837     	 adds r7,r7,#8
 684              	.LCFI60:
 685              	 .cfi_def_cfa_offset 8
 686 0016 BD46     	 mov sp,r7
 687              	.LCFI61:
 688              	 .cfi_def_cfa_register 13
 689              	 
 690 0018 80BD     	 pop {r7,pc}
 691              	.L34:
 692 001a 00BF     	 .align 2
 693              	.L33:
 694 001c 00800240 	 .word 1073905664
 695              	 .cfi_endproc
 696              	.LFE415:
 698              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern,"ax",%progbits
 699              	 .align 1
 700              	 .syntax unified
 701              	 .thumb
 702              	 .thumb_func
 703              	 .fpu fpv4-sp-d16
 705              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:
 706              	.LFB416:
 302:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 303:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @param pattern The hall sensor pattern mask [0-63] Format of mask: (expected_pattern << 3) | (cu
 304:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 305:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 306:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 307:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Configures current and expected hall pattern of \a peripheral. \n
 308:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 309:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern(uint8_t pattern)
 310:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 707              	 .loc 2 310 1
 708              	 .cfi_startproc
 709              	 
 710              	 
 711 0000 80B5     	 push {r7,lr}
 712              	.LCFI62:
 713              	 .cfi_def_cfa_offset 8
 714              	 .cfi_offset 7,-8
 715              	 .cfi_offset 14,-4
 716 0002 82B0     	 sub sp,sp,#8
 717              	.LCFI63:
 718              	 .cfi_def_cfa_offset 16
 719 0004 00AF     	 add r7,sp,#0
 720              	.LCFI64:
 721              	 .cfi_def_cfa_register 7
 722 0006 0346     	 mov r3,r0
 723 0008 FB71     	 strb r3,[r7,#7]
 311:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_HSC_SetHallPatterns(MOTOR0_BLDC_SCALAR_POSIF_MODULE, pattern);
 724              	 .loc 2 311 3
 725 000a FB79     	 ldrb r3,[r7,#7]
 726 000c 1946     	 mov r1,r3
 727 000e 0348     	 ldr r0,.L36
 728 0010 FFF7FEFF 	 bl XMC_POSIF_HSC_SetHallPatterns
 312:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 729              	 .loc 2 312 1
 730 0014 00BF     	 nop
 731 0016 0837     	 adds r7,r7,#8
 732              	.LCFI65:
 733              	 .cfi_def_cfa_offset 8
 734 0018 BD46     	 mov sp,r7
 735              	.LCFI66:
 736              	 .cfi_def_cfa_register 13
 737              	 
 738 001a 80BD     	 pop {r7,pc}
 739              	.L37:
 740              	 .align 2
 741              	.L36:
 742 001c 00800240 	 .word 1073905664
 743              	 .cfi_endproc
 744              	.LFE416:
 746              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern,"ax",%progbits
 747              	 .align 1
 748              	 .syntax unified
 749              	 .thumb
 750              	 .thumb_func
 751              	 .fpu fpv4-sp-d16
 753              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:
 754              	.LFB418:
 313:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 314:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval None <br>
 315:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 316:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 317:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * The transfer of hall sensor pattern shadow registers content to the hall sensor pattern register
 318:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * on hardware trigger.
 319:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 320:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_SPEED_POS_HALL_UpdateHallPattern(void)
 321:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 322:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   XMC_POSIF_HSC_UpdateHallPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 323:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 324:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 325:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval pattern The hall sensor pattern to be programmed into current pattern [0-7] <br>
 326:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 327:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 328:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Retrieves the expected hall sensor pattern from \a HALP register's \a HEP bit field of \a periph
 329:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 330:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint8_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern(void)
 331:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 755              	 .loc 2 331 1
 756              	 .cfi_startproc
 757              	 
 758              	 
 759 0000 80B5     	 push {r7,lr}
 760              	.LCFI67:
 761              	 .cfi_def_cfa_offset 8
 762              	 .cfi_offset 7,-8
 763              	 .cfi_offset 14,-4
 764 0002 82B0     	 sub sp,sp,#8
 765              	.LCFI68:
 766              	 .cfi_def_cfa_offset 16
 767 0004 00AF     	 add r7,sp,#0
 768              	.LCFI69:
 769              	 .cfi_def_cfa_register 7
 332:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t pattern;
 333:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   pattern = XMC_POSIF_HSC_GetExpectedPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 770              	 .loc 2 333 13
 771 0006 0548     	 ldr r0,.L40
 772 0008 FFF7FEFF 	 bl XMC_POSIF_HSC_GetExpectedPattern
 773 000c 0346     	 mov r3,r0
 774 000e FB71     	 strb r3,[r7,#7]
 334:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(pattern);
 775              	 .loc 2 334 9
 776 0010 FB79     	 ldrb r3,[r7,#7]
 335:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 777              	 .loc 2 335 1
 778 0012 1846     	 mov r0,r3
 779 0014 0837     	 adds r7,r7,#8
 780              	.LCFI70:
 781              	 .cfi_def_cfa_offset 8
 782 0016 BD46     	 mov sp,r7
 783              	.LCFI71:
 784              	 .cfi_def_cfa_register 13
 785              	 
 786 0018 80BD     	 pop {r7,pc}
 787              	.L41:
 788 001a 00BF     	 .align 2
 789              	.L40:
 790 001c 00800240 	 .word 1073905664
 791              	 .cfi_endproc
 792              	.LFE418:
 794              	 .section .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern,"ax",%progbits
 795              	 .align 1
 796              	 .syntax unified
 797              	 .thumb
 798              	 .thumb_func
 799              	 .fpu fpv4-sp-d16
 801              	Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern:
 802              	.LFB420:
 336:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 337:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval interval between two hall events <br>
 338:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 339:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 340:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Return time between two hall events\n
 341:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 342:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint32_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallEventTime(void)
 343:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 344:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint32_t period;
 345:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   period = XMC_CCU4_SLICE_GetCaptureRegisterValue(MOTOR0_BLDC_SCALAR_CCU4_CAPTURE_SLICE, BLDC_SCALA
 346:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(period);
 347:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 348:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** /**
 349:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * @retval uint8_t Returns last sampled hall sensor pattern. Range : [0-7] <br>
 350:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  *
 351:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * \par<b>Description</b><br>
 352:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  * Returns last sampled hall sensor pattern of \a peripheral.\n
 353:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****  */
 354:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** __STATIC_INLINE uint8_t Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern(void)
 355:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** {
 803              	 .loc 2 355 1
 804              	 .cfi_startproc
 805              	 
 806              	 
 807 0000 80B5     	 push {r7,lr}
 808              	.LCFI72:
 809              	 .cfi_def_cfa_offset 8
 810              	 .cfi_offset 7,-8
 811              	 .cfi_offset 14,-4
 812 0002 82B0     	 sub sp,sp,#8
 813              	.LCFI73:
 814              	 .cfi_def_cfa_offset 16
 815 0004 00AF     	 add r7,sp,#0
 816              	.LCFI74:
 817              	 .cfi_def_cfa_register 7
 356:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   uint8_t hall_pattern;
 357:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   hall_pattern = XMC_POSIF_HSC_GetLastSampledPattern(MOTOR0_BLDC_SCALAR_POSIF_MODULE);
 818              	 .loc 2 357 18
 819 0006 0548     	 ldr r0,.L44
 820 0008 FFF7FEFF 	 bl XMC_POSIF_HSC_GetLastSampledPattern
 821 000c 0346     	 mov r3,r0
 822 000e FB71     	 strb r3,[r7,#7]
 358:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h ****   return(hall_pattern);
 823              	 .loc 2 358 9
 824 0010 FB79     	 ldrb r3,[r7,#7]
 359:../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_speed_pos_hall.h **** }
 825              	 .loc 2 359 1
 826 0012 1846     	 mov r0,r3
 827 0014 0837     	 adds r7,r7,#8
 828              	.LCFI75:
 829              	 .cfi_def_cfa_offset 8
 830 0016 BD46     	 mov sp,r7
 831              	.LCFI76:
 832              	 .cfi_def_cfa_register 13
 833              	 
 834 0018 80BD     	 pop {r7,pc}
 835              	.L45:
 836 001a 00BF     	 .align 2
 837              	.L44:
 838 001c 00800240 	 .word 1073905664
 839              	 .cfi_endproc
 840              	.LFE420:
 842              	 .section .ram_code
 843              	 .align 1
 844              	 .global POSIF0_1_IRQHandler
 845              	 .syntax unified
 846              	 .thumb
 847              	 .thumb_func
 848              	 .fpu fpv4-sp-d16
 850              	POSIF0_1_IRQHandler:
 851              	.LFB436:
 852              	 .file 3 "../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c"
   1:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**
   2:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @file bldc_scalar_pattern_shadowtx.c
   3:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @brief POSIF multi channel pattern shadow transfer interrupt.
   4:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @date 2016-08-31
   5:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  **************************************************************************************************
   6:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * BLDC_SCALAR_CONTROL v1.0.2 - BLDC motor control using block commutation
   7:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
   8:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * All rights reserved.
   9:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  10:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  11:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * following conditions are met:
  12:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  13:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  14:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *   disclaimer.
  15:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  16:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  17:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  18:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  19:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  20:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *   products derived from this software without specific prior written permission.
  21:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  22:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  23:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  24:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  25:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  26:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  27:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  28:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  29:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  30:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  31:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * with Infineon Technologies AG (dave@infineon.com).
  32:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  **************************************************************************************************
  33:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  34:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * Change History
  35:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * --------------
  36:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  37:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * 2016-08-31:
  38:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *     - Initial version
  39:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  40:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  */
  41:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  42:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**************************************************************************************************
  43:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * HEADER FILES
  44:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  **************************************************************************************************
  45:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  46:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #include "../ControlModule/bldc_scalar_control_scheme.h"
  47:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #if (MOTOR0_BLDC_SCALAR_FEEDBACK == BLDC_SCALAR_3HALL)
  48:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #include "../ControlModule/bldc_scalar_control_hall.h"
  49:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #endif
  50:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  51:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**************************************************************************************************
  52:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * MACROS
  53:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  **************************************************************************************************
  54:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #define BLDC_SCALAR_HALL_MOTOR_DIR_INDEX        (0x8U)
  55:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #define BLDC_SCALAR_HALL_STALL_IGNORE_COUNT     (6U)
  56:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #define BLDC_SCALAR_HALL_CAPVAL_POS             (8U)
  57:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**************************************************************************************************
  58:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** * API IMPLEMENTATION
  59:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** ***************************************************************************************************
  60:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**
  61:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @addtogroup BLDC_SCALAR BLDC Motor Control
  62:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @{
  63:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  */
  64:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  65:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**
  66:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @addtogroup Interrupt Interrupts
  67:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @brief  Interrupt Service Routines  <br>
  68:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @{
  69:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  */
  70:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** /**
  71:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @param none
  72:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * @return None <br>
  73:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  *
  74:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * \par<b>Description:</b><br>
  75:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * Multi-channel pattern shadow transfer interrupt ISR. \n
  76:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * Prepare hall and multi-channel pattern for the next commutation.
  77:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  * Calculate the Speed based on captured value in CCU4 capture slice.
  78:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****  */
  79:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  80:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** RAM_ATTRIBUTE void Motor0_BLDC_SCALAR_PatternShadowTx_ISR(void)
  81:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** {
 853              	 .loc 3 81 1
 854              	 .cfi_startproc
 855              	 
 856              	 
 857 00ac 80B5     	 push {r7,lr}
 858              	.LCFI77:
 859              	 .cfi_def_cfa_offset 8
 860              	 .cfi_offset 7,-8
 861              	 .cfi_offset 14,-4
 862 00ae 84B0     	 sub sp,sp,#16
 863              	.LCFI78:
 864              	 .cfi_def_cfa_offset 24
 865 00b0 00AF     	 add r7,sp,#0
 866              	.LCFI79:
 867              	 .cfi_def_cfa_register 7
  82:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  83:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint8_t pos;            /* array index variable */
  84:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint16_t mcmval;  /*current multi-channel pattern */
  85:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint16_t mcmvals; /*shadow multi-channel pattern */
  86:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint32_t capval;  /* calculated time between last two hall events */
  87:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint8_t status;   /* return status of the API to read the captured value from capture register */
  88:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint32_t speed = 0U; /* electrical speed in RPM */
 868              	 .loc 3 88 12
 869 00b2 0023     	 movs r3,#0
 870 00b4 3B60     	 str r3,[r7]
  89:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   uint8_t direction = (uint8_t)Motor0_BLDC_SCALAR.motor_set_direction & BLDC_SCALAR_HALL_MOTOR_DIR_
 871              	 .loc 3 89 50
 872 00b6 2E4B     	 ldr r3,.L49
 873 00b8 9B6F     	 ldr r3,[r3,#120]
 874              	 .loc 3 89 23
 875 00ba DBB2     	 uxtb r3,r3
 876              	 .loc 3 89 11
 877 00bc 03F00803 	 and r3,r3,#8
 878 00c0 FB73     	 strb r3,[r7,#15]
  90:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
  91:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /* store the sampled pattern */
  92:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR_Hall.prev_hall_pos = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern();
 879              	 .loc 3 92 43
 880 00c2 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern
 881 00c6 0346     	 mov r3,r0
 882 00c8 1A46     	 mov r2,r3
 883              	 .loc 3 92 41
 884 00ca 2A4B     	 ldr r3,.L49+4
 885 00cc 5A74     	 strb r2,[r3,#17]
  93:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_IDC_LINK_MEASUREMENT == 1U)
  94:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_DEMAGNET_BLANKING == 1U)
  95:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /* To blank the direct DC link current measurement at the commutation point */
  96:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR_CurrentMeasurement.demagnetization_blanking_enable = 1U;
 886              	 .loc 3 96 73
 887 00ce 2A4B     	 ldr r3,.L49+8
 888 00d0 0122     	 movs r2,#1
 889 00d2 83F82020 	 strb r2,[r3,#32]
  97:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #endif  /* end of #if (MOTOR0_BLDC_SCALAR_ENABLE_DEMAGNET_BLANKING == 1U) */
  98:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #endif /* end of #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_IDC_LINK_MEASUREMENT == 1U) */
  99:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 100:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /*Get the expected hall pattern.*/
 101:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   pos = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern();
 890              	 .loc 3 101 9
 891 00d6 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern
 892 00da 0346     	 mov r3,r0
 893 00dc BB73     	 strb r3,[r7,#14]
 102:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /*Set next hall pattern and MCM pattern based on the expected hall pattern.*/
 103:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern(
 104:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****           (uint8_t)(Motor0_BLDC_SCALAR_Hall.hall_pattern[(uint8_t) pos + (uint32_t) direction]));
 894              	 .loc 3 104 58
 895 00de BA7B     	 ldrb r2,[r7,#14]
 896              	 .loc 3 104 74
 897 00e0 FB7B     	 ldrb r3,[r7,#15]
 898              	 .loc 3 104 72
 899 00e2 1344     	 add r3,r3,r2
 900              	 .loc 3 104 57
 901 00e4 234A     	 ldr r2,.L49+4
 902 00e6 D35C     	 ldrb r3,[r2,r3]
 103:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****           (uint8_t)(Motor0_BLDC_SCALAR_Hall.hall_pattern[(uint8_t) pos + (uint32_t) direction]));
 903              	 .loc 3 103 3
 904 00e8 1846     	 mov r0,r3
 905 00ea FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern
 105:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(
 106:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****       (uint16_t)Motor0_BLDC_SCALAR.mc_pattern[Motor0_BLDC_SCALAR_PWM_BC.modulation_type][(pos) +
 906              	 .loc 3 106 72
 907 00ee 234B     	 ldr r3,.L49+12
 908 00f0 1B7B     	 ldrb r3,[r3,#12]
 909 00f2 1846     	 mov r0,r3
 910              	 .loc 3 106 96
 911 00f4 BA7B     	 ldrb r2,[r7,#14]
 107:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****                                           (uint8_t)direction]);
 912              	 .loc 3 107 43
 913 00f6 FB7B     	 ldrb r3,[r7,#15]
 106:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****                                           (uint8_t)direction]);
 914              	 .loc 3 106 96
 915 00f8 1344     	 add r3,r3,r2
 106:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****                                           (uint8_t)direction]);
 916              	 .loc 3 106 89
 917 00fa 1D49     	 ldr r1,.L49
 918 00fc 0201     	 lsls r2,r0,#4
 919 00fe 1344     	 add r3,r3,r2
 920 0100 5B00     	 lsls r3,r3,#1
 921 0102 0B44     	 add r3,r3,r1
 922 0104 9B88     	 ldrh r3,[r3,#4]
 105:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern(
 923              	 .loc 3 105 3
 924 0106 1846     	 mov r0,r3
 925 0108 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern
 108:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 109:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /*Get the shadow multi-channel pattern value and apply the PWM modulation.*/
 110:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   mcmval = (uint16_t)Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern();
 926              	 .loc 3 110 22
 927 010c FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern
 928 0110 0346     	 mov r3,r0
 929 0112 BB81     	 strh r3,[r7,#12]
 111:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   mcmvals = (uint16_t)Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern();
 930              	 .loc 3 111 23
 931 0114 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern
 932 0118 0346     	 mov r3,r0
 933 011a 7B81     	 strh r3,[r7,#10]
 112:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR_PWM_BC.shadow_modulation_ptr(mcmval,mcmvals);
 934              	 .loc 3 112 28
 935 011c 174B     	 ldr r3,.L49+12
 936 011e 5B68     	 ldr r3,[r3,#4]
 937              	 .loc 3 112 3
 938 0120 7989     	 ldrh r1,[r7,#10]
 939 0122 BA89     	 ldrh r2,[r7,#12]
 940 0124 1046     	 mov r0,r2
 941 0126 9847     	 blx r3
 942              	.LVL0:
 113:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 114:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     /*Get the captured value from capture timer */
 115:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   status = (uint8_t)Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue(&capval);
 943              	 .loc 3 115 21
 944 0128 3B1D     	 adds r3,r7,#4
 945 012a 1846     	 mov r0,r3
 946 012c FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue
 947 0130 0346     	 mov r3,r0
 948 0132 7B72     	 strb r3,[r7,#9]
 116:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 117:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_STALL_DETECTION == 1U)
 118:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /* Reset the stall detection count as hall event is detected for timeout*/
 119:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   Motor0_BLDC_SCALAR.stall_detection_counter = 0U;
 120:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #endif
 121:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   /* if valid speed capture value */
 122:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   if (status == (uint8_t)BLDC_SCALAR_SPEED_POS_HALL_STATUS_SUCCESS)
 949              	 .loc 3 122 6
 950 0134 7B7A     	 ldrb r3,[r7,#9]
 951 0136 002B     	 cmp r3,#0
 952 0138 16D1     	 bne .L48
 123:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   {
 124:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     /* speed calculation */
 125:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     Motor0_BLDC_SCALAR_SPEED_POS_HALL_SpeedCalculation(capval, &speed);
 953              	 .loc 3 125 5
 954 013a 7B68     	 ldr r3,[r7,#4]
 955 013c 3A46     	 mov r2,r7
 956 013e 1146     	 mov r1,r2
 957 0140 1846     	 mov r0,r3
 958 0142 FFF75DFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_SpeedCalculation
 126:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 127:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     Motor0_BLDC_SCALAR.actual_motor_direction = Motor0_BLDC_SCALAR.motor_set_direction;
 959              	 .loc 3 127 67
 960 0146 0A4B     	 ldr r3,.L49
 961 0148 9B6F     	 ldr r3,[r3,#120]
 962              	 .loc 3 127 47
 963 014a 094A     	 ldr r2,.L49
 964 014c D367     	 str r3,[r2,#124]
 128:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     Motor0_BLDC_SCALAR.motor_speed = ((Motor0_BLDC_SCALAR.actual_motor_direction * (int32_t)speed *
 965              	 .loc 3 128 58
 966 014e 084B     	 ldr r3,.L49
 967 0150 DB6F     	 ldr r3,[r3,#124]
 968              	 .loc 3 128 84
 969 0152 3A68     	 ldr r2,[r7]
 970              	 .loc 3 128 82
 971 0154 02FB03F3 	 mul r3,r2,r3
 129:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****                                      (int32_t)Motor0_BLDC_SCALAR.speed_mech_scale) >> BLDC_SCALAR_S
 972              	 .loc 3 129 65
 973 0158 054A     	 ldr r2,.L49
 974 015a D2F8BC20 	 ldr r2,[r2,#188]
 128:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     Motor0_BLDC_SCALAR.motor_speed = ((Motor0_BLDC_SCALAR.actual_motor_direction * (int32_t)speed *
 975              	 .loc 3 128 99
 976 015e 02FB03F3 	 mul r3,r2,r3
 977              	 .loc 3 129 84
 978 0162 9B12     	 asrs r3,r3,#10
 128:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     Motor0_BLDC_SCALAR.motor_speed = ((Motor0_BLDC_SCALAR.actual_motor_direction * (int32_t)speed *
 979              	 .loc 3 128 36
 980 0164 024A     	 ldr r2,.L49
 981 0166 D366     	 str r3,[r2,#108]
 982              	.L48:
 130:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 131:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #if (MOTOR0_BLDC_SCALAR_ENABLE_STALL_DETECTION == 1U)
 132:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     /*
 133:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****      * stall_check is used to ignore stall detection for first 6 hall events
 134:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****      */
 135:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     if (Motor0_BLDC_SCALAR.amplitude > Motor0_BLDC_SCALAR.stall_min_amplitude)
 136:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     {
 137:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****       if (Motor0_BLDC_SCALAR.stall_check <= BLDC_SCALAR_STALL_IGNORE_COUNT)
 138:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****       {
 139:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****         Motor0_BLDC_SCALAR.stall_check++;
 140:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****       }
 141:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****     }
 142:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** #endif
 143:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c ****   }
 144:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** 
 145:../MotorLib/Interrupts/bldc_scalar_pattern_shadowtx.c **** }
 983              	 .loc 3 145 1
 984 0168 00BF     	 nop
 985 016a 1037     	 adds r7,r7,#16
 986              	.LCFI80:
 987              	 .cfi_def_cfa_offset 8
 988 016c BD46     	 mov sp,r7
 989              	.LCFI81:
 990              	 .cfi_def_cfa_register 13
 991              	 
 992 016e 80BD     	 pop {r7,pc}
 993              	.L50:
 994              	 .align 2
 995              	.L49:
 996 0170 00000000 	 .word Motor0_BLDC_SCALAR
 997 0174 00000000 	 .word Motor0_BLDC_SCALAR_Hall
 998 0178 00000000 	 .word Motor0_BLDC_SCALAR_CurrentMeasurement
 999 017c 00000000 	 .word Motor0_BLDC_SCALAR_PWM_BC
 1000              	 .cfi_endproc
 1001              	.LFE436:
 1003              	 .text
 1004              	.Letext0:
 1005              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1006              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1007              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1008              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_ccu8.h"
 1009              	 .file 8 "../MotorLib/Interrupts/../ControlModule/../MidSys/../MCUInit/ccu8.h"
 1010              	 .file 9 "../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_pwm_bc.h"
 1011              	 .file 10 "../MotorLib/Interrupts/../ControlModule/../MidSys/bldc_scalar_current_motor.h"
 1012              	 .file 11 "../MotorLib/Interrupts/../ControlModule/bldc_scalar_control_scheme.h"
 1013              	 .file 12 "../MotorLib/Interrupts/../ControlModule/bldc_scalar_control_hall.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bldc_scalar_pattern_shadowtx.c
    {standard input}:17     .text.XMC_POSIF_HSC_GetLastSampledPattern:00000000 $t
    {standard input}:24     .text.XMC_POSIF_HSC_GetLastSampledPattern:00000000 XMC_POSIF_HSC_GetLastSampledPattern
    {standard input}:71     .text.XMC_POSIF_HSC_GetExpectedPattern:00000000 $t
    {standard input}:77     .text.XMC_POSIF_HSC_GetExpectedPattern:00000000 XMC_POSIF_HSC_GetExpectedPattern
    {standard input}:122    .text.XMC_POSIF_HSC_SetHallPatterns:00000000 $t
    {standard input}:128    .text.XMC_POSIF_HSC_SetHallPatterns:00000000 XMC_POSIF_HSC_SetHallPatterns
    {standard input}:172    .text.XMC_POSIF_MCM_SetMultiChannelPattern:00000000 $t
    {standard input}:178    .text.XMC_POSIF_MCM_SetMultiChannelPattern:00000000 XMC_POSIF_MCM_SetMultiChannelPattern
    {standard input}:220    .text.XMC_POSIF_MCM_GetMultiChannelPattern:00000000 $t
    {standard input}:226    .text.XMC_POSIF_MCM_GetMultiChannelPattern:00000000 XMC_POSIF_MCM_GetMultiChannelPattern
    {standard input}:267    .text.XMC_POSIF_MCM_GetShadowMultiChannelPattern:00000000 $t
    {standard input}:273    .text.XMC_POSIF_MCM_GetShadowMultiChannelPattern:00000000 XMC_POSIF_MCM_GetShadowMultiChannelPattern
    {standard input}:314    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue:00000000 $t
    {standard input}:320    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue
    {standard input}:411    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_ReadCaptureValue:00000068 $d
    {standard input}:418    .ram_code:00000000 $t
    {standard input}:424    .ram_code:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_SpeedCalculation
    {standard input}:550    .ram_code:000000a8 $d
    {standard input}:555    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:00000000 $t
    {standard input}:561    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern
    {standard input}:598    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetMultiChannelPattern:0000001c $d
    {standard input}:603    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:00000000 $t
    {standard input}:609    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern
    {standard input}:646    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetMultiChannelPattern:0000001c $d
    {standard input}:651    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:00000000 $t
    {standard input}:657    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern
    {standard input}:694    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetShadowMultiChannelPattern:0000001c $d
    {standard input}:699    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:00000000 $t
    {standard input}:705    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern
    {standard input}:742    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_SetHallPattern:0000001c $d
    {standard input}:747    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:00000000 $t
    {standard input}:753    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern
    {standard input}:790    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetExpectedPattern:0000001c $d
    {standard input}:795    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern:00000000 $t
    {standard input}:801    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern:00000000 Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern
    {standard input}:838    .text.Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetLastHallPattern:0000001c $d
    {standard input}:843    .ram_code:000000ac $t
    {standard input}:850    .ram_code:000000ac POSIF0_1_IRQHandler
    {standard input}:996    .ram_code:00000170 $d

UNDEFINED SYMBOLS
XMC_CCU4_SLICE_GetCaptureRegisterValue
BLDC_SCALAR_SPEED_POS_HALL_Cap_Array
Motor0_BLDC_SCALAR_SPEED_POS_HALL
Motor0_BLDC_SCALAR
Motor0_BLDC_SCALAR_Hall
Motor0_BLDC_SCALAR_CurrentMeasurement
Motor0_BLDC_SCALAR_PWM_BC
