   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc4_flash.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  17              	 .align 1
  18              	 .global XMC_FLASH_lEnterPageModeCommand
  19              	 .arch armv7e-m
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	XMC_FLASH_lEnterPageModeCommand:
  26              	.LFB147:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc4_flash.c"
   1:../Libraries/XMCLib/src/xmc4_flash.c **** /**
   2:../Libraries/XMCLib/src/xmc4_flash.c ****  * @file xmc4_flash.c
   3:../Libraries/XMCLib/src/xmc4_flash.c ****  * @date 2016-01-08
   4:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   5:../Libraries/XMCLib/src/xmc4_flash.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_flash.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc4_flash.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   9:../Libraries/XMCLib/src/xmc4_flash.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_flash.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  12:../Libraries/XMCLib/src/xmc4_flash.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  14:../Libraries/XMCLib/src/xmc4_flash.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc4_flash.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc4_flash.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc4_flash.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc4_flash.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc4_flash.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  21:../Libraries/XMCLib/src/xmc4_flash.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc4_flash.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc4_flash.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc4_flash.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc4_flash.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc4_flash.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  28:../Libraries/XMCLib/src/xmc4_flash.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc4_flash.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc4_flash.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc4_flash.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc4_flash.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc4_flash.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc4_flash.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  36:../Libraries/XMCLib/src/xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc4_flash.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc4_flash.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc4_flash.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  41:../Libraries/XMCLib/src/xmc4_flash.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc4_flash.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  44:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-02-10:
  45:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  47:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  50:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-08-17:
  51:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added the below API's to the public interface.
  52:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_Reset
  53:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ErasePhysicalSector
  54:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_EraseUCB
  55:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_ResumeProtection
  56:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_RepairPhysicalSector
  57:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  58:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2016-01-08:
  59:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Wait until operation is finished for the next functions:
  60:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_InstallProtection
  61:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ConfirmProtection
  62:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_ProgramPage
  63:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_EraseSector
  64:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_ErasePhysicalSector
  65:../Libraries/XMCLib/src/xmc4_flash.c ****  *       6. XMC_FLASH_EraseUCB
  66:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
  67:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  68:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2018-02-08
  69:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added implementation of XMC_FLASH_InstallBMI()
  70:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  71:../Libraries/XMCLib/src/xmc4_flash.c ****  * @endcond
  72:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  73:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  74:../Libraries/XMCLib/src/xmc4_flash.c **** 
  75:../Libraries/XMCLib/src/xmc4_flash.c **** #include "xmc_flash.h"
  76:../Libraries/XMCLib/src/xmc4_flash.c **** 
  77:../Libraries/XMCLib/src/xmc4_flash.c **** #if UC_FAMILY == XMC4
  78:../Libraries/XMCLib/src/xmc4_flash.c **** 
  79:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc4_flash.c ****  * MACROS
  81:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc4_flash.c **** 
  83:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  84:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  85:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_BMI_STRING_WORDS (10UL) /* Used to upadte the assembly buffer during BMI String
  86:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  87:../Libraries/XMCLib/src/xmc4_flash.c **** 
  88:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_OFFSET (512UL) /* Offset address for UCB page */
  89:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_WORDS  (4UL)
  90:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_CODE   (0x8AFE15C3UL)
  91:../Libraries/XMCLib/src/xmc4_flash.c **** 
  92:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  93:../Libraries/XMCLib/src/xmc4_flash.c ****  * LOCAL FUNCTIONS
  94:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  95:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void);
  96:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word);
  97:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address);
  98:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address);
  99:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address);
 100:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 101:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1);
 102:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void);
 103:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address);
 104:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void);
 105:../Libraries/XMCLib/src/xmc4_flash.c **** 
 106:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 107:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used
 108:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 109:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
 110:../Libraries/XMCLib/src/xmc4_flash.c **** {
  28              	 .loc 1 110 1
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
 111:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 112:../Libraries/XMCLib/src/xmc4_flash.c **** 
 113:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
  43              	 .loc 1 113 11
  44 0006 054B     	 ldr r3,.L2
  45 0008 7B60     	 str r3,[r7,#4]
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = (uint32_t)0x50U;
  46              	 .loc 1 114 12
  47 000a 7B68     	 ldr r3,[r7,#4]
  48 000c 5022     	 movs r2,#80
  49 000e 1A60     	 str r2,[r3]
 115:../Libraries/XMCLib/src/xmc4_flash.c **** }
  50              	 .loc 1 115 1
  51 0010 00BF     	 nop
  52 0012 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0014 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 0016 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001a 7047     	 bx lr
  64              	.L3:
  65              	 .align 2
  66              	.L2:
  67 001c 5455000C 	 .word 201348436
  68              	 .cfi_endproc
  69              	.LFE147:
  71              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
  72              	 .align 1
  73              	 .global XMC_FLASH_lLoadPageCommand
  74              	 .syntax unified
  75              	 .thumb
  76              	 .thumb_func
  77              	 .fpu fpv4-sp-d16
  79              	XMC_FLASH_lLoadPageCommand:
  80              	.LFB148:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** 
 117:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 118:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to load the data into the page assembly buffer
 119:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 120:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
 121:../Libraries/XMCLib/src/xmc4_flash.c **** {
  81              	 .loc 1 121 1
  82              	 .cfi_startproc
  83              	 
  84              	 
  85              	 
  86 0000 80B4     	 push {r7}
  87              	.LCFI6:
  88              	 .cfi_def_cfa_offset 4
  89              	 .cfi_offset 7,-4
  90 0002 85B0     	 sub sp,sp,#20
  91              	.LCFI7:
  92              	 .cfi_def_cfa_offset 24
  93 0004 00AF     	 add r7,sp,#0
  94              	.LCFI8:
  95              	 .cfi_def_cfa_register 7
  96 0006 7860     	 str r0,[r7,#4]
  97 0008 3960     	 str r1,[r7]
 122:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 123:../Libraries/XMCLib/src/xmc4_flash.c **** 
 124:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
  98              	 .loc 1 124 11
  99 000a 084B     	 ldr r3,.L5
 100 000c FB60     	 str r3,[r7,#12]
 125:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = low_word;
 101              	 .loc 1 125 12
 102 000e FB68     	 ldr r3,[r7,#12]
 103 0010 7A68     	 ldr r2,[r7,#4]
 104 0012 1A60     	 str r2,[r3]
 126:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 105              	 .loc 1 126 11
 106 0014 064B     	 ldr r3,.L5+4
 107 0016 FB60     	 str r3,[r7,#12]
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = high_word;
 108              	 .loc 1 127 12
 109 0018 FB68     	 ldr r3,[r7,#12]
 110 001a 3A68     	 ldr r2,[r7]
 111 001c 1A60     	 str r2,[r3]
 128:../Libraries/XMCLib/src/xmc4_flash.c **** }
 112              	 .loc 1 128 1
 113 001e 00BF     	 nop
 114 0020 1437     	 adds r7,r7,#20
 115              	.LCFI9:
 116              	 .cfi_def_cfa_offset 4
 117 0022 BD46     	 mov sp,r7
 118              	.LCFI10:
 119              	 .cfi_def_cfa_register 13
 120              	 
 121 0024 5DF8047B 	 ldr r7,[sp],#4
 122              	.LCFI11:
 123              	 .cfi_restore 7
 124              	 .cfi_def_cfa_offset 0
 125 0028 7047     	 bx lr
 126              	.L6:
 127 002a 00BF     	 .align 2
 128              	.L5:
 129 002c F055000C 	 .word 201348592
 130 0030 F455000C 	 .word 201348596
 131              	 .cfi_endproc
 132              	.LFE148:
 134              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
 135              	 .align 1
 136              	 .global XMC_FLASH_lWritePageCommand
 137              	 .syntax unified
 138              	 .thumb
 139              	 .thumb_func
 140              	 .fpu fpv4-sp-d16
 142              	XMC_FLASH_lWritePageCommand:
 143              	.LFB149:
 129:../Libraries/XMCLib/src/xmc4_flash.c **** 
 130:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 131:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 132:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 133:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 134:../Libraries/XMCLib/src/xmc4_flash.c **** {
 144              	 .loc 1 134 1
 145              	 .cfi_startproc
 146              	 
 147              	 
 148              	 
 149 0000 80B4     	 push {r7}
 150              	.LCFI12:
 151              	 .cfi_def_cfa_offset 4
 152              	 .cfi_offset 7,-4
 153 0002 85B0     	 sub sp,sp,#20
 154              	.LCFI13:
 155              	 .cfi_def_cfa_offset 24
 156 0004 00AF     	 add r7,sp,#0
 157              	.LCFI14:
 158              	 .cfi_def_cfa_register 7
 159 0006 7860     	 str r0,[r7,#4]
 135:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 136:../Libraries/XMCLib/src/xmc4_flash.c **** 
 137:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 160              	 .loc 1 137 11
 161 0008 0C4B     	 ldr r3,.L8
 162 000a FB60     	 str r3,[r7,#12]
 138:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 163              	 .loc 1 138 12
 164 000c FB68     	 ldr r3,[r7,#12]
 165 000e AA22     	 movs r2,#170
 166 0010 1A60     	 str r2,[r3]
 139:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 167              	 .loc 1 139 11
 168 0012 0B4B     	 ldr r3,.L8+4
 169 0014 FB60     	 str r3,[r7,#12]
 140:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 170              	 .loc 1 140 12
 171 0016 FB68     	 ldr r3,[r7,#12]
 172 0018 5522     	 movs r2,#85
 173 001a 1A60     	 str r2,[r3]
 141:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 174              	 .loc 1 141 11
 175 001c 074B     	 ldr r3,.L8
 176 001e FB60     	 str r3,[r7,#12]
 142:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xa0U;
 177              	 .loc 1 142 12
 178 0020 FB68     	 ldr r3,[r7,#12]
 179 0022 A022     	 movs r2,#160
 180 0024 1A60     	 str r2,[r3]
 143:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 181              	 .loc 1 143 11
 182 0026 7B68     	 ldr r3,[r7,#4]
 183 0028 FB60     	 str r3,[r7,#12]
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 184              	 .loc 1 144 12
 185 002a FB68     	 ldr r3,[r7,#12]
 186 002c AA22     	 movs r2,#170
 187 002e 1A60     	 str r2,[r3]
 145:../Libraries/XMCLib/src/xmc4_flash.c **** }
 188              	 .loc 1 145 1
 189 0030 00BF     	 nop
 190 0032 1437     	 adds r7,r7,#20
 191              	.LCFI15:
 192              	 .cfi_def_cfa_offset 4
 193 0034 BD46     	 mov sp,r7
 194              	.LCFI16:
 195              	 .cfi_def_cfa_register 13
 196              	 
 197 0036 5DF8047B 	 ldr r7,[sp],#4
 198              	.LCFI17:
 199              	 .cfi_restore 7
 200              	 .cfi_def_cfa_offset 0
 201 003a 7047     	 bx lr
 202              	.L9:
 203              	 .align 2
 204              	.L8:
 205 003c 5455000C 	 .word 201348436
 206 0040 A8AA000C 	 .word 201370280
 207              	 .cfi_endproc
 208              	.LFE149:
 210              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 211              	 .align 1
 212              	 .global XMC_FLASH_lWriteUCBPageCommand
 213              	 .syntax unified
 214              	 .thumb
 215              	 .thumb_func
 216              	 .fpu fpv4-sp-d16
 218              	XMC_FLASH_lWriteUCBPageCommand:
 219              	.LFB150:
 146:../Libraries/XMCLib/src/xmc4_flash.c **** 
 147:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 148:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 149:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 150:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 151:../Libraries/XMCLib/src/xmc4_flash.c **** {
 220              	 .loc 1 151 1
 221              	 .cfi_startproc
 222              	 
 223              	 
 224              	 
 225 0000 80B4     	 push {r7}
 226              	.LCFI18:
 227              	 .cfi_def_cfa_offset 4
 228              	 .cfi_offset 7,-4
 229 0002 85B0     	 sub sp,sp,#20
 230              	.LCFI19:
 231              	 .cfi_def_cfa_offset 24
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI20:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 152:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 153:../Libraries/XMCLib/src/xmc4_flash.c **** 
 154:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 236              	 .loc 1 154 11
 237 0008 0C4B     	 ldr r3,.L11
 238 000a FB60     	 str r3,[r7,#12]
 155:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 239              	 .loc 1 155 12
 240 000c FB68     	 ldr r3,[r7,#12]
 241 000e AA22     	 movs r2,#170
 242 0010 1A60     	 str r2,[r3]
 156:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 243              	 .loc 1 156 11
 244 0012 0B4B     	 ldr r3,.L11+4
 245 0014 FB60     	 str r3,[r7,#12]
 157:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 246              	 .loc 1 157 12
 247 0016 FB68     	 ldr r3,[r7,#12]
 248 0018 5522     	 movs r2,#85
 249 001a 1A60     	 str r2,[r3]
 158:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 250              	 .loc 1 158 11
 251 001c 074B     	 ldr r3,.L11
 252 001e FB60     	 str r3,[r7,#12]
 159:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 253              	 .loc 1 159 12
 254 0020 FB68     	 ldr r3,[r7,#12]
 255 0022 C022     	 movs r2,#192
 256 0024 1A60     	 str r2,[r3]
 160:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 257              	 .loc 1 160 11
 258 0026 7B68     	 ldr r3,[r7,#4]
 259 0028 FB60     	 str r3,[r7,#12]
 161:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 260              	 .loc 1 161 12
 261 002a FB68     	 ldr r3,[r7,#12]
 262 002c AA22     	 movs r2,#170
 263 002e 1A60     	 str r2,[r3]
 162:../Libraries/XMCLib/src/xmc4_flash.c **** }
 264              	 .loc 1 162 1
 265 0030 00BF     	 nop
 266 0032 1437     	 adds r7,r7,#20
 267              	.LCFI21:
 268              	 .cfi_def_cfa_offset 4
 269 0034 BD46     	 mov sp,r7
 270              	.LCFI22:
 271              	 .cfi_def_cfa_register 13
 272              	 
 273 0036 5DF8047B 	 ldr r7,[sp],#4
 274              	.LCFI23:
 275              	 .cfi_restore 7
 276              	 .cfi_def_cfa_offset 0
 277 003a 7047     	 bx lr
 278              	.L12:
 279              	 .align 2
 280              	.L11:
 281 003c 5455000C 	 .word 201348436
 282 0040 A8AA000C 	 .word 201370280
 283              	 .cfi_endproc
 284              	.LFE150:
 286              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 287              	 .align 1
 288              	 .global XMC_FLASH_lEraseSectorCommand
 289              	 .syntax unified
 290              	 .thumb
 291              	 .thumb_func
 292              	 .fpu fpv4-sp-d16
 294              	XMC_FLASH_lEraseSectorCommand:
 295              	.LFB151:
 163:../Libraries/XMCLib/src/xmc4_flash.c **** 
 164:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 165:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 166:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 167:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 168:../Libraries/XMCLib/src/xmc4_flash.c **** {
 296              	 .loc 1 168 1
 297              	 .cfi_startproc
 298              	 
 299              	 
 300              	 
 301 0000 80B4     	 push {r7}
 302              	.LCFI24:
 303              	 .cfi_def_cfa_offset 4
 304              	 .cfi_offset 7,-4
 305 0002 85B0     	 sub sp,sp,#20
 306              	.LCFI25:
 307              	 .cfi_def_cfa_offset 24
 308 0004 00AF     	 add r7,sp,#0
 309              	.LCFI26:
 310              	 .cfi_def_cfa_register 7
 311 0006 7860     	 str r0,[r7,#4]
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 170:../Libraries/XMCLib/src/xmc4_flash.c **** 
 171:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 312              	 .loc 1 171 11
 313 0008 114B     	 ldr r3,.L14
 314 000a FB60     	 str r3,[r7,#12]
 172:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 315              	 .loc 1 172 12
 316 000c FB68     	 ldr r3,[r7,#12]
 317 000e AA22     	 movs r2,#170
 318 0010 1A60     	 str r2,[r3]
 173:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 319              	 .loc 1 173 11
 320 0012 104B     	 ldr r3,.L14+4
 321 0014 FB60     	 str r3,[r7,#12]
 174:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 322              	 .loc 1 174 12
 323 0016 FB68     	 ldr r3,[r7,#12]
 324 0018 5522     	 movs r2,#85
 325 001a 1A60     	 str r2,[r3]
 175:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 326              	 .loc 1 175 11
 327 001c 0C4B     	 ldr r3,.L14
 328 001e FB60     	 str r3,[r7,#12]
 176:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 329              	 .loc 1 176 12
 330 0020 FB68     	 ldr r3,[r7,#12]
 331 0022 8022     	 movs r2,#128
 332 0024 1A60     	 str r2,[r3]
 177:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 333              	 .loc 1 177 11
 334 0026 0A4B     	 ldr r3,.L14
 335 0028 FB60     	 str r3,[r7,#12]
 178:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 336              	 .loc 1 178 12
 337 002a FB68     	 ldr r3,[r7,#12]
 338 002c AA22     	 movs r2,#170
 339 002e 1A60     	 str r2,[r3]
 179:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 340              	 .loc 1 179 11
 341 0030 084B     	 ldr r3,.L14+4
 342 0032 FB60     	 str r3,[r7,#12]
 180:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 343              	 .loc 1 180 12
 344 0034 FB68     	 ldr r3,[r7,#12]
 345 0036 5522     	 movs r2,#85
 346 0038 1A60     	 str r2,[r3]
 181:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 347              	 .loc 1 181 11
 348 003a 7B68     	 ldr r3,[r7,#4]
 349 003c FB60     	 str r3,[r7,#12]
 182:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x30U;
 350              	 .loc 1 182 12
 351 003e FB68     	 ldr r3,[r7,#12]
 352 0040 3022     	 movs r2,#48
 353 0042 1A60     	 str r2,[r3]
 183:../Libraries/XMCLib/src/xmc4_flash.c **** }
 354              	 .loc 1 183 1
 355 0044 00BF     	 nop
 356 0046 1437     	 adds r7,r7,#20
 357              	.LCFI27:
 358              	 .cfi_def_cfa_offset 4
 359 0048 BD46     	 mov sp,r7
 360              	.LCFI28:
 361              	 .cfi_def_cfa_register 13
 362              	 
 363 004a 5DF8047B 	 ldr r7,[sp],#4
 364              	.LCFI29:
 365              	 .cfi_restore 7
 366              	 .cfi_def_cfa_offset 0
 367 004e 7047     	 bx lr
 368              	.L15:
 369              	 .align 2
 370              	.L14:
 371 0050 5455000C 	 .word 201348436
 372 0054 A8AA000C 	 .word 201370280
 373              	 .cfi_endproc
 374              	.LFE151:
 376              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 377              	 .align 1
 378              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 379              	 .syntax unified
 380              	 .thumb
 381              	 .thumb_func
 382              	 .fpu fpv4-sp-d16
 384              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 385              	.LFB152:
 184:../Libraries/XMCLib/src/xmc4_flash.c **** 
 185:../Libraries/XMCLib/src/xmc4_flash.c **** 
 186:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 187:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 188:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 189:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 190:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 191:../Libraries/XMCLib/src/xmc4_flash.c **** {
 386              	 .loc 1 191 1
 387              	 .cfi_startproc
 388              	 
 389              	 
 390              	 
 391 0000 80B4     	 push {r7}
 392              	.LCFI30:
 393              	 .cfi_def_cfa_offset 4
 394              	 .cfi_offset 7,-4
 395 0002 87B0     	 sub sp,sp,#28
 396              	.LCFI31:
 397              	 .cfi_def_cfa_offset 32
 398 0004 00AF     	 add r7,sp,#0
 399              	.LCFI32:
 400              	 .cfi_def_cfa_register 7
 401 0006 F860     	 str r0,[r7,#12]
 402 0008 B960     	 str r1,[r7,#8]
 403 000a 7A60     	 str r2,[r7,#4]
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 193:../Libraries/XMCLib/src/xmc4_flash.c **** 
 194:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 404              	 .loc 1 194 11
 405 000c 114B     	 ldr r3,.L17
 406 000e 7B61     	 str r3,[r7,#20]
 195:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 407              	 .loc 1 195 12
 408 0010 7B69     	 ldr r3,[r7,#20]
 409 0012 AA22     	 movs r2,#170
 410 0014 1A60     	 str r2,[r3]
 196:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 411              	 .loc 1 196 11
 412 0016 104B     	 ldr r3,.L17+4
 413 0018 7B61     	 str r3,[r7,#20]
 197:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 414              	 .loc 1 197 12
 415 001a 7B69     	 ldr r3,[r7,#20]
 416 001c 5522     	 movs r2,#85
 417 001e 1A60     	 str r2,[r3]
 198:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 418              	 .loc 1 198 11
 419 0020 0E4B     	 ldr r3,.L17+8
 420 0022 7B61     	 str r3,[r7,#20]
 199:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = user;
 421              	 .loc 1 199 12
 422 0024 7B69     	 ldr r3,[r7,#20]
 423 0026 FA68     	 ldr r2,[r7,#12]
 424 0028 1A60     	 str r2,[r3]
 200:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 425              	 .loc 1 200 11
 426 002a 0B4B     	 ldr r3,.L17+4
 427 002c 7B61     	 str r3,[r7,#20]
 201:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 428              	 .loc 1 201 12
 429 002e 7B69     	 ldr r3,[r7,#20]
 430 0030 BA68     	 ldr r2,[r7,#8]
 431 0032 1A60     	 str r2,[r3]
 202:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 432              	 .loc 1 202 11
 433 0034 084B     	 ldr r3,.L17+4
 434 0036 7B61     	 str r3,[r7,#20]
 203:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 435              	 .loc 1 203 12
 436 0038 7B69     	 ldr r3,[r7,#20]
 437 003a 7A68     	 ldr r2,[r7,#4]
 438 003c 1A60     	 str r2,[r3]
 204:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 439              	 .loc 1 204 11
 440 003e 084B     	 ldr r3,.L17+12
 441 0040 7B61     	 str r3,[r7,#20]
 205:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x05U;
 442              	 .loc 1 205 12
 443 0042 7B69     	 ldr r3,[r7,#20]
 444 0044 0522     	 movs r2,#5
 445 0046 1A60     	 str r2,[r3]
 206:../Libraries/XMCLib/src/xmc4_flash.c **** }
 446              	 .loc 1 206 1
 447 0048 00BF     	 nop
 448 004a 1C37     	 adds r7,r7,#28
 449              	.LCFI33:
 450              	 .cfi_def_cfa_offset 4
 451 004c BD46     	 mov sp,r7
 452              	.LCFI34:
 453              	 .cfi_def_cfa_register 13
 454              	 
 455 004e 5DF8047B 	 ldr r7,[sp],#4
 456              	.LCFI35:
 457              	 .cfi_restore 7
 458              	 .cfi_def_cfa_offset 0
 459 0052 7047     	 bx lr
 460              	.L18:
 461              	 .align 2
 462              	.L17:
 463 0054 5455000C 	 .word 201348436
 464 0058 A8AA000C 	 .word 201370280
 465 005c 3C55000C 	 .word 201348412
 466 0060 5855000C 	 .word 201348440
 467              	 .cfi_endproc
 468              	.LFE152:
 470              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 471              	 .align 1
 472              	 .global XMC_FLASH_lDisableReadProtectionCommand
 473              	 .syntax unified
 474              	 .thumb
 475              	 .thumb_func
 476              	 .fpu fpv4-sp-d16
 478              	XMC_FLASH_lDisableReadProtectionCommand:
 479              	.LFB153:
 207:../Libraries/XMCLib/src/xmc4_flash.c **** 
 208:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 209:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 210:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 211:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 212:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 213:../Libraries/XMCLib/src/xmc4_flash.c **** {
 480              	 .loc 1 213 1
 481              	 .cfi_startproc
 482              	 
 483              	 
 484              	 
 485 0000 80B4     	 push {r7}
 486              	.LCFI36:
 487              	 .cfi_def_cfa_offset 4
 488              	 .cfi_offset 7,-4
 489 0002 85B0     	 sub sp,sp,#20
 490              	.LCFI37:
 491              	 .cfi_def_cfa_offset 24
 492 0004 00AF     	 add r7,sp,#0
 493              	.LCFI38:
 494              	 .cfi_def_cfa_register 7
 495 0006 7860     	 str r0,[r7,#4]
 496 0008 3960     	 str r1,[r7]
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 215:../Libraries/XMCLib/src/xmc4_flash.c **** 
 216:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 497              	 .loc 1 216 11
 498 000a 124B     	 ldr r3,.L20
 499 000c FB60     	 str r3,[r7,#12]
 217:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 500              	 .loc 1 217 12
 501 000e FB68     	 ldr r3,[r7,#12]
 502 0010 AA22     	 movs r2,#170
 503 0012 1A60     	 str r2,[r3]
 218:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 504              	 .loc 1 218 11
 505 0014 104B     	 ldr r3,.L20+4
 506 0016 FB60     	 str r3,[r7,#12]
 219:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 507              	 .loc 1 219 12
 508 0018 FB68     	 ldr r3,[r7,#12]
 509 001a 5522     	 movs r2,#85
 510 001c 1A60     	 str r2,[r3]
 220:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 511              	 .loc 1 220 11
 512 001e 0F4B     	 ldr r3,.L20+8
 513 0020 FB60     	 str r3,[r7,#12]
 221:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x00U;
 514              	 .loc 1 221 12
 515 0022 FB68     	 ldr r3,[r7,#12]
 516 0024 0022     	 movs r2,#0
 517 0026 1A60     	 str r2,[r3]
 222:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 518              	 .loc 1 222 11
 519 0028 0B4B     	 ldr r3,.L20+4
 520 002a FB60     	 str r3,[r7,#12]
 223:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 521              	 .loc 1 223 12
 522 002c FB68     	 ldr r3,[r7,#12]
 523 002e 7A68     	 ldr r2,[r7,#4]
 524 0030 1A60     	 str r2,[r3]
 224:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 525              	 .loc 1 224 11
 526 0032 094B     	 ldr r3,.L20+4
 527 0034 FB60     	 str r3,[r7,#12]
 225:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 528              	 .loc 1 225 12
 529 0036 FB68     	 ldr r3,[r7,#12]
 530 0038 3A68     	 ldr r2,[r7]
 531 003a 1A60     	 str r2,[r3]
 226:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 532              	 .loc 1 226 11
 533 003c 084B     	 ldr r3,.L20+12
 534 003e FB60     	 str r3,[r7,#12]
 227:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x08U;
 535              	 .loc 1 227 12
 536 0040 FB68     	 ldr r3,[r7,#12]
 537 0042 0822     	 movs r2,#8
 538 0044 1A60     	 str r2,[r3]
 228:../Libraries/XMCLib/src/xmc4_flash.c **** }
 539              	 .loc 1 228 1
 540 0046 00BF     	 nop
 541 0048 1437     	 adds r7,r7,#20
 542              	.LCFI39:
 543              	 .cfi_def_cfa_offset 4
 544 004a BD46     	 mov sp,r7
 545              	.LCFI40:
 546              	 .cfi_def_cfa_register 13
 547              	 
 548 004c 5DF8047B 	 ldr r7,[sp],#4
 549              	.LCFI41:
 550              	 .cfi_restore 7
 551              	 .cfi_def_cfa_offset 0
 552 0050 7047     	 bx lr
 553              	.L21:
 554 0052 00BF     	 .align 2
 555              	.L20:
 556 0054 5455000C 	 .word 201348436
 557 0058 A8AA000C 	 .word 201370280
 558 005c 3C55000C 	 .word 201348412
 559 0060 5855000C 	 .word 201348440
 560              	 .cfi_endproc
 561              	.LFE153:
 563              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 564              	 .align 1
 565              	 .global XMC_FLASH_lClearStatusCommand
 566              	 .syntax unified
 567              	 .thumb
 568              	 .thumb_func
 569              	 .fpu fpv4-sp-d16
 571              	XMC_FLASH_lClearStatusCommand:
 572              	.LFB154:
 229:../Libraries/XMCLib/src/xmc4_flash.c **** 
 230:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 231:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 232:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 233:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 234:../Libraries/XMCLib/src/xmc4_flash.c **** {
 573              	 .loc 1 234 1
 574              	 .cfi_startproc
 575              	 
 576              	 
 577              	 
 578 0000 80B4     	 push {r7}
 579              	.LCFI42:
 580              	 .cfi_def_cfa_offset 4
 581              	 .cfi_offset 7,-4
 582 0002 83B0     	 sub sp,sp,#12
 583              	.LCFI43:
 584              	 .cfi_def_cfa_offset 16
 585 0004 00AF     	 add r7,sp,#0
 586              	.LCFI44:
 587              	 .cfi_def_cfa_register 7
 235:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 236:../Libraries/XMCLib/src/xmc4_flash.c **** 
 237:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 588              	 .loc 1 237 11
 589 0006 054B     	 ldr r3,.L23
 590 0008 7B60     	 str r3,[r7,#4]
 238:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf5U;
 591              	 .loc 1 238 12
 592 000a 7B68     	 ldr r3,[r7,#4]
 593 000c F522     	 movs r2,#245
 594 000e 1A60     	 str r2,[r3]
 239:../Libraries/XMCLib/src/xmc4_flash.c **** }
 595              	 .loc 1 239 1
 596 0010 00BF     	 nop
 597 0012 0C37     	 adds r7,r7,#12
 598              	.LCFI45:
 599              	 .cfi_def_cfa_offset 4
 600 0014 BD46     	 mov sp,r7
 601              	.LCFI46:
 602              	 .cfi_def_cfa_register 13
 603              	 
 604 0016 5DF8047B 	 ldr r7,[sp],#4
 605              	.LCFI47:
 606              	 .cfi_restore 7
 607              	 .cfi_def_cfa_offset 0
 608 001a 7047     	 bx lr
 609              	.L24:
 610              	 .align 2
 611              	.L23:
 612 001c 5455000C 	 .word 201348436
 613              	 .cfi_endproc
 614              	.LFE154:
 616              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 617              	 .align 1
 618              	 .global XMC_FLASH_ClearStatus
 619              	 .syntax unified
 620              	 .thumb
 621              	 .thumb_func
 622              	 .fpu fpv4-sp-d16
 624              	XMC_FLASH_ClearStatus:
 625              	.LFB155:
 240:../Libraries/XMCLib/src/xmc4_flash.c **** 
 241:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
 242:../Libraries/XMCLib/src/xmc4_flash.c ****  * API IMPLEMENTATION
 243:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
 244:../Libraries/XMCLib/src/xmc4_flash.c **** 
 245:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 246:../Libraries/XMCLib/src/xmc4_flash.c **** * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of F
 247:../Libraries/XMCLib/src/xmc4_flash.c **** */
 248:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 249:../Libraries/XMCLib/src/xmc4_flash.c **** {
 626              	 .loc 1 249 1
 627              	 .cfi_startproc
 628              	 
 629              	 
 630 0000 80B5     	 push {r7,lr}
 631              	.LCFI48:
 632              	 .cfi_def_cfa_offset 8
 633              	 .cfi_offset 7,-8
 634              	 .cfi_offset 14,-4
 635 0002 00AF     	 add r7,sp,#0
 636              	.LCFI49:
 637              	 .cfi_def_cfa_register 7
 250:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 638              	 .loc 1 250 3
 639 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 251:../Libraries/XMCLib/src/xmc4_flash.c **** }
 640              	 .loc 1 251 1
 641 0008 00BF     	 nop
 642 000a 80BD     	 pop {r7,pc}
 643              	 .cfi_endproc
 644              	.LFE155:
 646              	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 647              	 .align 1
 648              	 .global XMC_FLASH_GetStatus
 649              	 .syntax unified
 650              	 .thumb
 651              	 .thumb_func
 652              	 .fpu fpv4-sp-d16
 654              	XMC_FLASH_GetStatus:
 655              	.LFB156:
 252:../Libraries/XMCLib/src/xmc4_flash.c **** 
 253:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 254:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API returns the FSR register value
 255:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 256:../Libraries/XMCLib/src/xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 257:../Libraries/XMCLib/src/xmc4_flash.c **** {
 656              	 .loc 1 257 1
 657              	 .cfi_startproc
 658              	 
 659              	 
 660              	 
 661 0000 80B4     	 push {r7}
 662              	.LCFI50:
 663              	 .cfi_def_cfa_offset 4
 664              	 .cfi_offset 7,-4
 665 0002 00AF     	 add r7,sp,#0
 666              	.LCFI51:
 667              	 .cfi_def_cfa_register 7
 258:../Libraries/XMCLib/src/xmc4_flash.c ****   return FLASH0->FSR;
 668              	 .loc 1 258 16
 669 0004 044B     	 ldr r3,.L28
 670 0006 03F58053 	 add r3,r3,#4096
 671 000a 1B69     	 ldr r3,[r3,#16]
 259:../Libraries/XMCLib/src/xmc4_flash.c **** }
 672              	 .loc 1 259 1
 673 000c 1846     	 mov r0,r3
 674 000e BD46     	 mov sp,r7
 675              	.LCFI52:
 676              	 .cfi_def_cfa_register 13
 677              	 
 678 0010 5DF8047B 	 ldr r7,[sp],#4
 679              	.LCFI53:
 680              	 .cfi_restore 7
 681              	 .cfi_def_cfa_offset 0
 682 0014 7047     	 bx lr
 683              	.L29:
 684 0016 00BF     	 .align 2
 685              	.L28:
 686 0018 00100058 	 .word 1476399104
 687              	 .cfi_endproc
 688              	.LFE156:
 690              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 691              	 .align 1
 692              	 .global XMC_FLASH_EnableEvent
 693              	 .syntax unified
 694              	 .thumb
 695              	 .thumb_func
 696              	 .fpu fpv4-sp-d16
 698              	XMC_FLASH_EnableEvent:
 699              	.LFB157:
 260:../Libraries/XMCLib/src/xmc4_flash.c **** 
 261:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 262:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API enables the events which required to trigger the ISR
 263:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 264:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 265:../Libraries/XMCLib/src/xmc4_flash.c **** {
 700              	 .loc 1 265 1
 701              	 .cfi_startproc
 702              	 
 703              	 
 704              	 
 705 0000 80B4     	 push {r7}
 706              	.LCFI54:
 707              	 .cfi_def_cfa_offset 4
 708              	 .cfi_offset 7,-4
 709 0002 83B0     	 sub sp,sp,#12
 710              	.LCFI55:
 711              	 .cfi_def_cfa_offset 16
 712 0004 00AF     	 add r7,sp,#0
 713              	.LCFI56:
 714              	 .cfi_def_cfa_register 7
 715 0006 7860     	 str r0,[r7,#4]
 266:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 716              	 .loc 1 266 16
 717 0008 074B     	 ldr r3,.L31
 718 000a 03F58053 	 add r3,r3,#4096
 719 000e 5A69     	 ldr r2,[r3,#20]
 720 0010 0549     	 ldr r1,.L31
 721 0012 7B68     	 ldr r3,[r7,#4]
 722 0014 1343     	 orrs r3,r3,r2
 723 0016 01F58052 	 add r2,r1,#4096
 724 001a 5361     	 str r3,[r2,#20]
 267:../Libraries/XMCLib/src/xmc4_flash.c **** }
 725              	 .loc 1 267 1
 726 001c 00BF     	 nop
 727 001e 0C37     	 adds r7,r7,#12
 728              	.LCFI57:
 729              	 .cfi_def_cfa_offset 4
 730 0020 BD46     	 mov sp,r7
 731              	.LCFI58:
 732              	 .cfi_def_cfa_register 13
 733              	 
 734 0022 5DF8047B 	 ldr r7,[sp],#4
 735              	.LCFI59:
 736              	 .cfi_restore 7
 737              	 .cfi_def_cfa_offset 0
 738 0026 7047     	 bx lr
 739              	.L32:
 740              	 .align 2
 741              	.L31:
 742 0028 00100058 	 .word 1476399104
 743              	 .cfi_endproc
 744              	.LFE157:
 746              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 747              	 .align 1
 748              	 .global XMC_FLASH_DisableEvent
 749              	 .syntax unified
 750              	 .thumb
 751              	 .thumb_func
 752              	 .fpu fpv4-sp-d16
 754              	XMC_FLASH_DisableEvent:
 755              	.LFB158:
 268:../Libraries/XMCLib/src/xmc4_flash.c **** 
 269:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 270:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API disables the event generation
 271:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 272:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 273:../Libraries/XMCLib/src/xmc4_flash.c **** {
 756              	 .loc 1 273 1
 757              	 .cfi_startproc
 758              	 
 759              	 
 760              	 
 761 0000 80B4     	 push {r7}
 762              	.LCFI60:
 763              	 .cfi_def_cfa_offset 4
 764              	 .cfi_offset 7,-4
 765 0002 83B0     	 sub sp,sp,#12
 766              	.LCFI61:
 767              	 .cfi_def_cfa_offset 16
 768 0004 00AF     	 add r7,sp,#0
 769              	.LCFI62:
 770              	 .cfi_def_cfa_register 7
 771 0006 7860     	 str r0,[r7,#4]
 274:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 772              	 .loc 1 274 16
 773 0008 084B     	 ldr r3,.L34
 774 000a 03F58053 	 add r3,r3,#4096
 775 000e 5A69     	 ldr r2,[r3,#20]
 776              	 .loc 1 274 19
 777 0010 7B68     	 ldr r3,[r7,#4]
 778 0012 DB43     	 mvns r3,r3
 779              	 .loc 1 274 16
 780 0014 0549     	 ldr r1,.L34
 781 0016 1340     	 ands r3,r3,r2
 782 0018 01F58052 	 add r2,r1,#4096
 783 001c 5361     	 str r3,[r2,#20]
 275:../Libraries/XMCLib/src/xmc4_flash.c **** }
 784              	 .loc 1 275 1
 785 001e 00BF     	 nop
 786 0020 0C37     	 adds r7,r7,#12
 787              	.LCFI63:
 788              	 .cfi_def_cfa_offset 4
 789 0022 BD46     	 mov sp,r7
 790              	.LCFI64:
 791              	 .cfi_def_cfa_register 13
 792              	 
 793 0024 5DF8047B 	 ldr r7,[sp],#4
 794              	.LCFI65:
 795              	 .cfi_restore 7
 796              	 .cfi_def_cfa_offset 0
 797 0028 7047     	 bx lr
 798              	.L35:
 799 002a 00BF     	 .align 2
 800              	.L34:
 801 002c 00100058 	 .word 1476399104
 802              	 .cfi_endproc
 803              	.LFE158:
 805              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 806              	 .align 1
 807              	 .global XMC_FLASH_ProgramPage
 808              	 .syntax unified
 809              	 .thumb
 810              	 .thumb_func
 811              	 .fpu fpv4-sp-d16
 813              	XMC_FLASH_ProgramPage:
 814              	.LFB159:
 276:../Libraries/XMCLib/src/xmc4_flash.c **** 
 277:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 278:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API write the PFLASH page
 279:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 280:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 281:../Libraries/XMCLib/src/xmc4_flash.c **** {
 815              	 .loc 1 281 1
 816              	 .cfi_startproc
 817              	 
 818              	 
 819 0000 80B5     	 push {r7,lr}
 820              	.LCFI66:
 821              	 .cfi_def_cfa_offset 8
 822              	 .cfi_offset 7,-8
 823              	 .cfi_offset 14,-4
 824 0002 84B0     	 sub sp,sp,#16
 825              	.LCFI67:
 826              	 .cfi_def_cfa_offset 24
 827 0004 00AF     	 add r7,sp,#0
 828              	.LCFI68:
 829              	 .cfi_def_cfa_register 7
 830 0006 7860     	 str r0,[r7,#4]
 831 0008 3960     	 str r1,[r7]
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 283:../Libraries/XMCLib/src/xmc4_flash.c **** 
 284:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 832              	 .loc 1 284 3
 833 000a FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 285:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 834              	 .loc 1 285 3
 835 000e FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 286:../Libraries/XMCLib/src/xmc4_flash.c **** 
 287:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < XMC_FLASH_WORDS_PER_PAGE; idx += 2U)
 836              	 .loc 1 287 12
 837 0012 0023     	 movs r3,#0
 838 0014 FB60     	 str r3,[r7,#12]
 839              	 .loc 1 287 3
 840 0016 10E0     	 b .L37
 841              	.L38:
 288:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 289:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[idx], data[idx + 1U]);
 842              	 .loc 1 289 36 discriminator 3
 843 0018 FB68     	 ldr r3,[r7,#12]
 844 001a 9B00     	 lsls r3,r3,#2
 845 001c 3A68     	 ldr r2,[r7]
 846 001e 1344     	 add r3,r3,r2
 847              	 .loc 1 289 5 discriminator 3
 848 0020 1868     	 ldr r0,[r3]
 849              	 .loc 1 289 47 discriminator 3
 850 0022 FB68     	 ldr r3,[r7,#12]
 851 0024 0133     	 adds r3,r3,#1
 852 0026 9B00     	 lsls r3,r3,#2
 853 0028 3A68     	 ldr r2,[r7]
 854 002a 1344     	 add r3,r3,r2
 855              	 .loc 1 289 5 discriminator 3
 856 002c 1B68     	 ldr r3,[r3]
 857 002e 1946     	 mov r1,r3
 858 0030 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 287:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 859              	 .loc 1 287 54 discriminator 3
 860 0034 FB68     	 ldr r3,[r7,#12]
 861 0036 0233     	 adds r3,r3,#2
 862 0038 FB60     	 str r3,[r7,#12]
 863              	.L37:
 287:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 864              	 .loc 1 287 3 discriminator 1
 865 003a FB68     	 ldr r3,[r7,#12]
 866 003c 3F2B     	 cmp r3,#63
 867 003e EBD9     	 bls .L38
 290:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 291:../Libraries/XMCLib/src/xmc4_flash.c **** 
 292:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);
 868              	 .loc 1 292 3
 869 0040 7868     	 ldr r0,[r7,#4]
 870 0042 FFF7FEFF 	 bl XMC_FLASH_lWritePageCommand
 293:../Libraries/XMCLib/src/xmc4_flash.c **** 
 294:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 295:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 871              	 .loc 1 295 9
 872 0046 00BF     	 nop
 873              	.L39:
 874              	 .loc 1 295 17 discriminator 1
 875 0048 064B     	 ldr r3,.L40
 876 004a 03F58053 	 add r3,r3,#4096
 877 004e 1B69     	 ldr r3,[r3,#16]
 878              	 .loc 1 295 23 discriminator 1
 879 0050 03F00103 	 and r3,r3,#1
 880              	 .loc 1 295 9 discriminator 1
 881 0054 002B     	 cmp r3,#0
 882 0056 F7D1     	 bne .L39
 296:../Libraries/XMCLib/src/xmc4_flash.c **** }
 883              	 .loc 1 296 1
 884 0058 00BF     	 nop
 885 005a 00BF     	 nop
 886 005c 1037     	 adds r7,r7,#16
 887              	.LCFI69:
 888              	 .cfi_def_cfa_offset 8
 889 005e BD46     	 mov sp,r7
 890              	.LCFI70:
 891              	 .cfi_def_cfa_register 13
 892              	 
 893 0060 80BD     	 pop {r7,pc}
 894              	.L41:
 895 0062 00BF     	 .align 2
 896              	.L40:
 897 0064 00100058 	 .word 1476399104
 898              	 .cfi_endproc
 899              	.LFE159:
 901              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 902              	 .align 1
 903              	 .global XMC_FLASH_EraseSector
 904              	 .syntax unified
 905              	 .thumb
 906              	 .thumb_func
 907              	 .fpu fpv4-sp-d16
 909              	XMC_FLASH_EraseSector:
 910              	.LFB160:
 297:../Libraries/XMCLib/src/xmc4_flash.c **** 
 298:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 299:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API erase the logical sector
 300:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 301:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 302:../Libraries/XMCLib/src/xmc4_flash.c **** {
 911              	 .loc 1 302 1
 912              	 .cfi_startproc
 913              	 
 914              	 
 915 0000 80B5     	 push {r7,lr}
 916              	.LCFI71:
 917              	 .cfi_def_cfa_offset 8
 918              	 .cfi_offset 7,-8
 919              	 .cfi_offset 14,-4
 920 0002 82B0     	 sub sp,sp,#8
 921              	.LCFI72:
 922              	 .cfi_def_cfa_offset 16
 923 0004 00AF     	 add r7,sp,#0
 924              	.LCFI73:
 925              	 .cfi_def_cfa_register 7
 926 0006 7860     	 str r0,[r7,#4]
 303:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 927              	 .loc 1 303 3
 928 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 304:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 929              	 .loc 1 304 3
 930 000c 7868     	 ldr r0,[r7,#4]
 931 000e FFF7FEFF 	 bl XMC_FLASH_lEraseSectorCommand
 305:../Libraries/XMCLib/src/xmc4_flash.c **** 
 306:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 932              	 .loc 1 307 9
 933 0012 00BF     	 nop
 934              	.L43:
 935              	 .loc 1 307 17 discriminator 1
 936 0014 064B     	 ldr r3,.L44
 937 0016 03F58053 	 add r3,r3,#4096
 938 001a 1B69     	 ldr r3,[r3,#16]
 939              	 .loc 1 307 23 discriminator 1
 940 001c 03F00103 	 and r3,r3,#1
 941              	 .loc 1 307 9 discriminator 1
 942 0020 002B     	 cmp r3,#0
 943 0022 F7D1     	 bne .L43
 308:../Libraries/XMCLib/src/xmc4_flash.c **** }
 944              	 .loc 1 308 1
 945 0024 00BF     	 nop
 946 0026 00BF     	 nop
 947 0028 0837     	 adds r7,r7,#8
 948              	.LCFI74:
 949              	 .cfi_def_cfa_offset 8
 950 002a BD46     	 mov sp,r7
 951              	.LCFI75:
 952              	 .cfi_def_cfa_register 13
 953              	 
 954 002c 80BD     	 pop {r7,pc}
 955              	.L45:
 956 002e 00BF     	 .align 2
 957              	.L44:
 958 0030 00100058 	 .word 1476399104
 959              	 .cfi_endproc
 960              	.LFE160:
 962              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 963              	 .align 1
 964              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 965              	 .syntax unified
 966              	 .thumb
 967              	 .thumb_func
 968              	 .fpu fpv4-sp-d16
 970              	XMC_FLASH_lErasePhysicalSectorCommand:
 971              	.LFB161:
 309:../Libraries/XMCLib/src/xmc4_flash.c **** 
 310:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 311:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 312:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 313:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 314:../Libraries/XMCLib/src/xmc4_flash.c **** {
 972              	 .loc 1 314 1
 973              	 .cfi_startproc
 974              	 
 975              	 
 976              	 
 977 0000 80B4     	 push {r7}
 978              	.LCFI76:
 979              	 .cfi_def_cfa_offset 4
 980              	 .cfi_offset 7,-4
 981 0002 85B0     	 sub sp,sp,#20
 982              	.LCFI77:
 983              	 .cfi_def_cfa_offset 24
 984 0004 00AF     	 add r7,sp,#0
 985              	.LCFI78:
 986              	 .cfi_def_cfa_register 7
 987 0006 7860     	 str r0,[r7,#4]
 315:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 316:../Libraries/XMCLib/src/xmc4_flash.c **** 
 317:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 988              	 .loc 1 317 11
 989 0008 114B     	 ldr r3,.L47
 990 000a FB60     	 str r3,[r7,#12]
 318:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 991              	 .loc 1 318 12
 992 000c FB68     	 ldr r3,[r7,#12]
 993 000e AA22     	 movs r2,#170
 994 0010 1A60     	 str r2,[r3]
 319:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 995              	 .loc 1 319 11
 996 0012 104B     	 ldr r3,.L47+4
 997 0014 FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 998              	 .loc 1 320 12
 999 0016 FB68     	 ldr r3,[r7,#12]
 1000 0018 5522     	 movs r2,#85
 1001 001a 1A60     	 str r2,[r3]
 321:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1002              	 .loc 1 321 11
 1003 001c 0C4B     	 ldr r3,.L47
 1004 001e FB60     	 str r3,[r7,#12]
 322:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1005              	 .loc 1 322 12
 1006 0020 FB68     	 ldr r3,[r7,#12]
 1007 0022 8022     	 movs r2,#128
 1008 0024 1A60     	 str r2,[r3]
 323:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1009              	 .loc 1 323 11
 1010 0026 0A4B     	 ldr r3,.L47
 1011 0028 FB60     	 str r3,[r7,#12]
 324:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1012              	 .loc 1 324 12
 1013 002a FB68     	 ldr r3,[r7,#12]
 1014 002c AA22     	 movs r2,#170
 1015 002e 1A60     	 str r2,[r3]
 325:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1016              	 .loc 1 325 11
 1017 0030 084B     	 ldr r3,.L47+4
 1018 0032 FB60     	 str r3,[r7,#12]
 326:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1019              	 .loc 1 326 12
 1020 0034 FB68     	 ldr r3,[r7,#12]
 1021 0036 5522     	 movs r2,#85
 1022 0038 1A60     	 str r2,[r3]
 327:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 1023              	 .loc 1 327 11
 1024 003a 7B68     	 ldr r3,[r7,#4]
 1025 003c FB60     	 str r3,[r7,#12]
 328:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 1026              	 .loc 1 328 12
 1027 003e FB68     	 ldr r3,[r7,#12]
 1028 0040 4022     	 movs r2,#64
 1029 0042 1A60     	 str r2,[r3]
 329:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1030              	 .loc 1 329 1
 1031 0044 00BF     	 nop
 1032 0046 1437     	 adds r7,r7,#20
 1033              	.LCFI79:
 1034              	 .cfi_def_cfa_offset 4
 1035 0048 BD46     	 mov sp,r7
 1036              	.LCFI80:
 1037              	 .cfi_def_cfa_register 13
 1038              	 
 1039 004a 5DF8047B 	 ldr r7,[sp],#4
 1040              	.LCFI81:
 1041              	 .cfi_restore 7
 1042              	 .cfi_def_cfa_offset 0
 1043 004e 7047     	 bx lr
 1044              	.L48:
 1045              	 .align 2
 1046              	.L47:
 1047 0050 5455000C 	 .word 201348436
 1048 0054 A8AA000C 	 .word 201370280
 1049              	 .cfi_endproc
 1050              	.LFE161:
 1052              	 .section .text.XMC_FLASH_lRepairPhysicalSectorCommand,"ax",%progbits
 1053              	 .align 1
 1054              	 .global XMC_FLASH_lRepairPhysicalSectorCommand
 1055              	 .syntax unified
 1056              	 .thumb
 1057              	 .thumb_func
 1058              	 .fpu fpv4-sp-d16
 1060              	XMC_FLASH_lRepairPhysicalSectorCommand:
 1061              	.LFB162:
 330:../Libraries/XMCLib/src/xmc4_flash.c **** 
 331:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 332:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector-4 which is starting with the specified address
 333:../Libraries/XMCLib/src/xmc4_flash.c ****  * This command is only available if PROCON1.PRS = 1.
 334:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 335:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void)
 336:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1062              	 .loc 1 336 1
 1063              	 .cfi_startproc
 1064              	 
 1065              	 
 1066              	 
 1067 0000 80B4     	 push {r7}
 1068              	.LCFI82:
 1069              	 .cfi_def_cfa_offset 4
 1070              	 .cfi_offset 7,-4
 1071 0002 83B0     	 sub sp,sp,#12
 1072              	.LCFI83:
 1073              	 .cfi_def_cfa_offset 16
 1074 0004 00AF     	 add r7,sp,#0
 1075              	.LCFI84:
 1076              	 .cfi_def_cfa_register 7
 337:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 338:../Libraries/XMCLib/src/xmc4_flash.c **** 
 339:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1077              	 .loc 1 339 11
 1078 0006 124B     	 ldr r3,.L50
 1079 0008 7B60     	 str r3,[r7,#4]
 340:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1080              	 .loc 1 340 12
 1081 000a 7B68     	 ldr r3,[r7,#4]
 1082 000c AA22     	 movs r2,#170
 1083 000e 1A60     	 str r2,[r3]
 341:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1084              	 .loc 1 341 11
 1085 0010 104B     	 ldr r3,.L50+4
 1086 0012 7B60     	 str r3,[r7,#4]
 342:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1087              	 .loc 1 342 12
 1088 0014 7B68     	 ldr r3,[r7,#4]
 1089 0016 5522     	 movs r2,#85
 1090 0018 1A60     	 str r2,[r3]
 343:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1091              	 .loc 1 343 11
 1092 001a 0D4B     	 ldr r3,.L50
 1093 001c 7B60     	 str r3,[r7,#4]
 344:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1094              	 .loc 1 344 12
 1095 001e 7B68     	 ldr r3,[r7,#4]
 1096 0020 8022     	 movs r2,#128
 1097 0022 1A60     	 str r2,[r3]
 345:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1098              	 .loc 1 345 11
 1099 0024 0A4B     	 ldr r3,.L50
 1100 0026 7B60     	 str r3,[r7,#4]
 346:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1101              	 .loc 1 346 12
 1102 0028 7B68     	 ldr r3,[r7,#4]
 1103 002a AA22     	 movs r2,#170
 1104 002c 1A60     	 str r2,[r3]
 347:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1105              	 .loc 1 347 11
 1106 002e 094B     	 ldr r3,.L50+4
 1107 0030 7B60     	 str r3,[r7,#4]
 348:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1108              	 .loc 1 348 12
 1109 0032 7B68     	 ldr r3,[r7,#4]
 1110 0034 5522     	 movs r2,#85
 1111 0036 1A60     	 str r2,[r3]
 349:../Libraries/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 1112              	 .loc 1 349 11
 1113 0038 074B     	 ldr r3,.L50+8
 1114 003a 7B60     	 str r3,[r7,#4]
 350:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 1115              	 .loc 1 350 12
 1116 003c 7B68     	 ldr r3,[r7,#4]
 1117 003e 4022     	 movs r2,#64
 1118 0040 1A60     	 str r2,[r3]
 351:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1119              	 .loc 1 351 1
 1120 0042 00BF     	 nop
 1121 0044 0C37     	 adds r7,r7,#12
 1122              	.LCFI85:
 1123              	 .cfi_def_cfa_offset 4
 1124 0046 BD46     	 mov sp,r7
 1125              	.LCFI86:
 1126              	 .cfi_def_cfa_register 13
 1127              	 
 1128 0048 5DF8047B 	 ldr r7,[sp],#4
 1129              	.LCFI87:
 1130              	 .cfi_restore 7
 1131              	 .cfi_def_cfa_offset 0
 1132 004c 7047     	 bx lr
 1133              	.L51:
 1134 004e 00BF     	 .align 2
 1135              	.L50:
 1136 0050 5455000C 	 .word 201348436
 1137 0054 A8AA000C 	 .word 201370280
 1138 0058 0000010C 	 .word 201392128
 1139              	 .cfi_endproc
 1140              	.LFE162:
 1142              	 .section .text.XMC_FLASH_ErasePhysicalSector,"ax",%progbits
 1143              	 .align 1
 1144              	 .global XMC_FLASH_ErasePhysicalSector
 1145              	 .syntax unified
 1146              	 .thumb
 1147              	 .thumb_func
 1148              	 .fpu fpv4-sp-d16
 1150              	XMC_FLASH_ErasePhysicalSector:
 1151              	.LFB163:
 352:../Libraries/XMCLib/src/xmc4_flash.c **** 
 353:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 354:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API erase the physical sector
 355:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 356:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ErasePhysicalSector(uint32_t *address)
 357:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1152              	 .loc 1 357 1
 1153              	 .cfi_startproc
 1154              	 
 1155              	 
 1156 0000 80B5     	 push {r7,lr}
 1157              	.LCFI88:
 1158              	 .cfi_def_cfa_offset 8
 1159              	 .cfi_offset 7,-8
 1160              	 .cfi_offset 14,-4
 1161 0002 82B0     	 sub sp,sp,#8
 1162              	.LCFI89:
 1163              	 .cfi_def_cfa_offset 16
 1164 0004 00AF     	 add r7,sp,#0
 1165              	.LCFI90:
 1166              	 .cfi_def_cfa_register 7
 1167 0006 7860     	 str r0,[r7,#4]
 358:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1168              	 .loc 1 358 3
 1169 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 359:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lErasePhysicalSectorCommand(address);
 1170              	 .loc 1 359 3
 1171 000c 7868     	 ldr r0,[r7,#4]
 1172 000e FFF7FEFF 	 bl XMC_FLASH_lErasePhysicalSectorCommand
 360:../Libraries/XMCLib/src/xmc4_flash.c **** 
 361:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 362:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 1173              	 .loc 1 362 9
 1174 0012 00BF     	 nop
 1175              	.L53:
 1176              	 .loc 1 362 17 discriminator 1
 1177 0014 064B     	 ldr r3,.L54
 1178 0016 03F58053 	 add r3,r3,#4096
 1179 001a 1B69     	 ldr r3,[r3,#16]
 1180              	 .loc 1 362 23 discriminator 1
 1181 001c 03F00103 	 and r3,r3,#1
 1182              	 .loc 1 362 9 discriminator 1
 1183 0020 002B     	 cmp r3,#0
 1184 0022 F7D1     	 bne .L53
 363:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1185              	 .loc 1 363 1
 1186 0024 00BF     	 nop
 1187 0026 00BF     	 nop
 1188 0028 0837     	 adds r7,r7,#8
 1189              	.LCFI91:
 1190              	 .cfi_def_cfa_offset 8
 1191 002a BD46     	 mov sp,r7
 1192              	.LCFI92:
 1193              	 .cfi_def_cfa_register 13
 1194              	 
 1195 002c 80BD     	 pop {r7,pc}
 1196              	.L55:
 1197 002e 00BF     	 .align 2
 1198              	.L54:
 1199 0030 00100058 	 .word 1476399104
 1200              	 .cfi_endproc
 1201              	.LFE163:
 1203              	 .section .text.XMC_FLASH_RepairPhysicalSector,"ax",%progbits
 1204              	 .align 1
 1205              	 .global XMC_FLASH_RepairPhysicalSector
 1206              	 .syntax unified
 1207              	 .thumb
 1208              	 .thumb_func
 1209              	 .fpu fpv4-sp-d16
 1211              	XMC_FLASH_RepairPhysicalSector:
 1212              	.LFB164:
 364:../Libraries/XMCLib/src/xmc4_flash.c **** 
 365:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 366:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API repair the physical sector
 367:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 368:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_RepairPhysicalSector(void)
 369:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1213              	 .loc 1 369 1
 1214              	 .cfi_startproc
 1215              	 
 1216              	 
 1217 0000 80B5     	 push {r7,lr}
 1218              	.LCFI93:
 1219              	 .cfi_def_cfa_offset 8
 1220              	 .cfi_offset 7,-8
 1221              	 .cfi_offset 14,-4
 1222 0002 00AF     	 add r7,sp,#0
 1223              	.LCFI94:
 1224              	 .cfi_def_cfa_register 7
 370:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1225              	 .loc 1 370 3
 1226 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 371:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lRepairPhysicalSectorCommand();
 1227              	 .loc 1 371 3
 1228 0008 FFF7FEFF 	 bl XMC_FLASH_lRepairPhysicalSectorCommand
 372:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1229              	 .loc 1 372 1
 1230 000c 00BF     	 nop
 1231 000e 80BD     	 pop {r7,pc}
 1232              	 .cfi_endproc
 1233              	.LFE164:
 1235              	 .section .text.XMC_FLASH_EraseUCB,"ax",%progbits
 1236              	 .align 1
 1237              	 .global XMC_FLASH_EraseUCB
 1238              	 .syntax unified
 1239              	 .thumb
 1240              	 .thumb_func
 1241              	 .fpu fpv4-sp-d16
 1243              	XMC_FLASH_EraseUCB:
 1244              	.LFB165:
 373:../Libraries/XMCLib/src/xmc4_flash.c **** 
 374:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 375:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 376:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 377:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseUCB(uint32_t *ucb_sector_start_address)
 378:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1245              	 .loc 1 378 1
 1246              	 .cfi_startproc
 1247              	 
 1248              	 
 1249              	 
 1250 0000 80B4     	 push {r7}
 1251              	.LCFI95:
 1252              	 .cfi_def_cfa_offset 4
 1253              	 .cfi_offset 7,-4
 1254 0002 85B0     	 sub sp,sp,#20
 1255              	.LCFI96:
 1256              	 .cfi_def_cfa_offset 24
 1257 0004 00AF     	 add r7,sp,#0
 1258              	.LCFI97:
 1259              	 .cfi_def_cfa_register 7
 1260 0006 7860     	 str r0,[r7,#4]
 379:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 380:../Libraries/XMCLib/src/xmc4_flash.c **** 
 381:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1261              	 .loc 1 381 11
 1262 0008 164B     	 ldr r3,.L59
 1263 000a FB60     	 str r3,[r7,#12]
 382:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1264              	 .loc 1 382 12
 1265 000c FB68     	 ldr r3,[r7,#12]
 1266 000e AA22     	 movs r2,#170
 1267 0010 1A60     	 str r2,[r3]
 383:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1268              	 .loc 1 383 11
 1269 0012 154B     	 ldr r3,.L59+4
 1270 0014 FB60     	 str r3,[r7,#12]
 384:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1271              	 .loc 1 384 12
 1272 0016 FB68     	 ldr r3,[r7,#12]
 1273 0018 5522     	 movs r2,#85
 1274 001a 1A60     	 str r2,[r3]
 385:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1275              	 .loc 1 385 11
 1276 001c 114B     	 ldr r3,.L59
 1277 001e FB60     	 str r3,[r7,#12]
 386:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1278              	 .loc 1 386 12
 1279 0020 FB68     	 ldr r3,[r7,#12]
 1280 0022 8022     	 movs r2,#128
 1281 0024 1A60     	 str r2,[r3]
 387:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1282              	 .loc 1 387 11
 1283 0026 0F4B     	 ldr r3,.L59
 1284 0028 FB60     	 str r3,[r7,#12]
 388:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1285              	 .loc 1 388 12
 1286 002a FB68     	 ldr r3,[r7,#12]
 1287 002c AA22     	 movs r2,#170
 1288 002e 1A60     	 str r2,[r3]
 389:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1289              	 .loc 1 389 11
 1290 0030 0D4B     	 ldr r3,.L59+4
 1291 0032 FB60     	 str r3,[r7,#12]
 390:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1292              	 .loc 1 390 12
 1293 0034 FB68     	 ldr r3,[r7,#12]
 1294 0036 5522     	 movs r2,#85
 1295 0038 1A60     	 str r2,[r3]
 391:../Libraries/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 1296              	 .loc 1 391 11
 1297 003a 7B68     	 ldr r3,[r7,#4]
 1298 003c FB60     	 str r3,[r7,#12]
 392:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 1299              	 .loc 1 392 12
 1300 003e FB68     	 ldr r3,[r7,#12]
 1301 0040 C022     	 movs r2,#192
 1302 0042 1A60     	 str r2,[r3]
 393:../Libraries/XMCLib/src/xmc4_flash.c **** 
 394:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 395:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 1303              	 .loc 1 395 9
 1304 0044 00BF     	 nop
 1305              	.L58:
 1306              	 .loc 1 395 17 discriminator 1
 1307 0046 094B     	 ldr r3,.L59+8
 1308 0048 03F58053 	 add r3,r3,#4096
 1309 004c 1B69     	 ldr r3,[r3,#16]
 1310              	 .loc 1 395 23 discriminator 1
 1311 004e 03F00103 	 and r3,r3,#1
 1312              	 .loc 1 395 9 discriminator 1
 1313 0052 002B     	 cmp r3,#0
 1314 0054 F7D1     	 bne .L58
 396:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1315              	 .loc 1 396 1
 1316 0056 00BF     	 nop
 1317 0058 00BF     	 nop
 1318 005a 1437     	 adds r7,r7,#20
 1319              	.LCFI98:
 1320              	 .cfi_def_cfa_offset 4
 1321 005c BD46     	 mov sp,r7
 1322              	.LCFI99:
 1323              	 .cfi_def_cfa_register 13
 1324              	 
 1325 005e 5DF8047B 	 ldr r7,[sp],#4
 1326              	.LCFI100:
 1327              	 .cfi_restore 7
 1328              	 .cfi_def_cfa_offset 0
 1329 0062 7047     	 bx lr
 1330              	.L60:
 1331              	 .align 2
 1332              	.L59:
 1333 0064 5455000C 	 .word 201348436
 1334 0068 A8AA000C 	 .word 201370280
 1335 006c 00100058 	 .word 1476399104
 1336              	 .cfi_endproc
 1337              	.LFE165:
 1339              	 .section .text.XMC_FLASH_Reset,"ax",%progbits
 1340              	 .align 1
 1341              	 .global XMC_FLASH_Reset
 1342              	 .syntax unified
 1343              	 .thumb
 1344              	 .thumb_func
 1345              	 .fpu fpv4-sp-d16
 1347              	XMC_FLASH_Reset:
 1348              	.LFB166:
 397:../Libraries/XMCLib/src/xmc4_flash.c **** 
 398:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 399:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to reset the status of the PFLASH
 400:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 401:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_Reset(void)
 402:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1349              	 .loc 1 402 1
 1350              	 .cfi_startproc
 1351              	 
 1352              	 
 1353              	 
 1354 0000 80B4     	 push {r7}
 1355              	.LCFI101:
 1356              	 .cfi_def_cfa_offset 4
 1357              	 .cfi_offset 7,-4
 1358 0002 83B0     	 sub sp,sp,#12
 1359              	.LCFI102:
 1360              	 .cfi_def_cfa_offset 16
 1361 0004 00AF     	 add r7,sp,#0
 1362              	.LCFI103:
 1363              	 .cfi_def_cfa_register 7
 403:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 404:../Libraries/XMCLib/src/xmc4_flash.c **** 
 405:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1364              	 .loc 1 405 11
 1365 0006 054B     	 ldr r3,.L62
 1366 0008 7B60     	 str r3,[r7,#4]
 406:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf0U;
 1367              	 .loc 1 406 12
 1368 000a 7B68     	 ldr r3,[r7,#4]
 1369 000c F022     	 movs r2,#240
 1370 000e 1A60     	 str r2,[r3]
 407:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1371              	 .loc 1 407 1
 1372 0010 00BF     	 nop
 1373 0012 0C37     	 adds r7,r7,#12
 1374              	.LCFI104:
 1375              	 .cfi_def_cfa_offset 4
 1376 0014 BD46     	 mov sp,r7
 1377              	.LCFI105:
 1378              	 .cfi_def_cfa_register 13
 1379              	 
 1380 0016 5DF8047B 	 ldr r7,[sp],#4
 1381              	.LCFI106:
 1382              	 .cfi_restore 7
 1383              	 .cfi_def_cfa_offset 0
 1384 001a 7047     	 bx lr
 1385              	.L63:
 1386              	 .align 2
 1387              	.L62:
 1388 001c 5455000C 	 .word 201348436
 1389              	 .cfi_endproc
 1390              	.LFE166:
 1392              	 .section .text.XMC_FLASH_InstallBMI,"ax",%progbits
 1393              	 .align 1
 1394              	 .global XMC_FLASH_InstallBMI
 1395              	 .syntax unified
 1396              	 .thumb
 1397              	 .thumb_func
 1398              	 .fpu fpv4-sp-d16
 1400              	XMC_FLASH_InstallBMI:
 1401              	.LFB167:
 408:../Libraries/XMCLib/src/xmc4_flash.c **** 
 409:../Libraries/XMCLib/src/xmc4_flash.c **** #define BMI_STRING_BYTE_CNT 30
 410:../Libraries/XMCLib/src/xmc4_flash.c **** 
 411:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallBMI(XMC_FLASH_BMI_STRING_t *const bmi_string)
 412:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1402              	 .loc 1 412 1
 1403              	 .cfi_startproc
 1404              	 
 1405              	 
 1406 0000 80B5     	 push {r7,lr}
 1407              	.LCFI107:
 1408              	 .cfi_def_cfa_offset 8
 1409              	 .cfi_offset 7,-8
 1410              	 .cfi_offset 14,-4
 1411 0002 86B0     	 sub sp,sp,#24
 1412              	.LCFI108:
 1413              	 .cfi_def_cfa_offset 32
 1414 0004 00AF     	 add r7,sp,#0
 1415              	.LCFI109:
 1416              	 .cfi_def_cfa_register 7
 1417 0006 7860     	 str r0,[r7,#4]
 413:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t checksum = 0;
 1418              	 .loc 1 413 12
 1419 0008 0023     	 movs r3,#0
 1420 000a 7B61     	 str r3,[r7,#20]
 1421              	.LBB2:
 414:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1422              	 .loc 1 414 12
 1423 000c 0023     	 movs r3,#0
 1424 000e 3B61     	 str r3,[r7,#16]
 1425              	 .loc 1 414 3
 1426 0010 0AE0     	 b .L65
 1427              	.L66:
 415:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 416:../Libraries/XMCLib/src/xmc4_flash.c ****     checksum ^= ((const uint8_t *)bmi_string)[i];
 1428              	 .loc 1 416 46 discriminator 3
 1429 0012 3B69     	 ldr r3,[r7,#16]
 1430 0014 7A68     	 ldr r2,[r7,#4]
 1431 0016 1344     	 add r3,r3,r2
 1432 0018 1B78     	 ldrb r3,[r3]
 1433 001a 1A46     	 mov r2,r3
 1434              	 .loc 1 416 14 discriminator 3
 1435 001c 7B69     	 ldr r3,[r7,#20]
 1436 001e 5340     	 eors r3,r3,r2
 1437 0020 7B61     	 str r3,[r7,#20]
 414:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1438              	 .loc 1 414 44 discriminator 3
 1439 0022 3B69     	 ldr r3,[r7,#16]
 1440 0024 0133     	 adds r3,r3,#1
 1441 0026 3B61     	 str r3,[r7,#16]
 1442              	.L65:
 414:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1443              	 .loc 1 414 3 discriminator 1
 1444 0028 3B69     	 ldr r3,[r7,#16]
 1445 002a 1D2B     	 cmp r3,#29
 1446 002c F1DD     	 ble .L66
 1447              	.LBE2:
 417:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 418:../Libraries/XMCLib/src/xmc4_flash.c **** 
 419:../Libraries/XMCLib/src/xmc4_flash.c ****   bmi_string->reserved = checksum;
 1448              	 .loc 1 419 24
 1449 002e 7B68     	 ldr r3,[r7,#4]
 1450 0030 7A69     	 ldr r2,[r7,#20]
 1451 0032 1A62     	 str r2,[r3,#32]
 420:../Libraries/XMCLib/src/xmc4_flash.c **** 
 421:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1452              	 .loc 1 421 3
 1453 0034 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 422:../Libraries/XMCLib/src/xmc4_flash.c **** 
 423:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[0], ((const uint32_t *)bmi_string)[1]);
 1454              	 .loc 1 423 3
 1455 0038 7B68     	 ldr r3,[r7,#4]
 1456 003a 1A68     	 ldr r2,[r3]
 1457              	 .loc 1 423 95
 1458 003c 7B68     	 ldr r3,[r7,#4]
 1459 003e 0433     	 adds r3,r3,#4
 1460              	 .loc 1 423 3
 1461 0040 1B68     	 ldr r3,[r3]
 1462 0042 1946     	 mov r1,r3
 1463 0044 1046     	 mov r0,r2
 1464 0046 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[2], ((const uint32_t *)bmi_string)[3]);
 1465              	 .loc 1 424 60
 1466 004a 7B68     	 ldr r3,[r7,#4]
 1467 004c 0833     	 adds r3,r3,#8
 1468              	 .loc 1 424 3
 1469 004e 1A68     	 ldr r2,[r3]
 1470              	 .loc 1 424 95
 1471 0050 7B68     	 ldr r3,[r7,#4]
 1472 0052 0C33     	 adds r3,r3,#12
 1473              	 .loc 1 424 3
 1474 0054 1B68     	 ldr r3,[r3]
 1475 0056 1946     	 mov r1,r3
 1476 0058 1046     	 mov r0,r2
 1477 005a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 425:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[4], ((const uint32_t *)bmi_string)[5]);
 1478              	 .loc 1 425 60
 1479 005e 7B68     	 ldr r3,[r7,#4]
 1480 0060 1033     	 adds r3,r3,#16
 1481              	 .loc 1 425 3
 1482 0062 1A68     	 ldr r2,[r3]
 1483              	 .loc 1 425 95
 1484 0064 7B68     	 ldr r3,[r7,#4]
 1485 0066 1433     	 adds r3,r3,#20
 1486              	 .loc 1 425 3
 1487 0068 1B68     	 ldr r3,[r3]
 1488 006a 1946     	 mov r1,r3
 1489 006c 1046     	 mov r0,r2
 1490 006e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 426:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[6], ((const uint32_t *)bmi_string)[7]);
 1491              	 .loc 1 426 60
 1492 0072 7B68     	 ldr r3,[r7,#4]
 1493 0074 1833     	 adds r3,r3,#24
 1494              	 .loc 1 426 3
 1495 0076 1A68     	 ldr r2,[r3]
 1496              	 .loc 1 426 95
 1497 0078 7B68     	 ldr r3,[r7,#4]
 1498 007a 1C33     	 adds r3,r3,#28
 1499              	 .loc 1 426 3
 1500 007c 1B68     	 ldr r3,[r3]
 1501 007e 1946     	 mov r1,r3
 1502 0080 1046     	 mov r0,r2
 1503 0082 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 427:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[8], 0);
 1504              	 .loc 1 427 60
 1505 0086 7B68     	 ldr r3,[r7,#4]
 1506 0088 2033     	 adds r3,r3,#32
 1507              	 .loc 1 427 3
 1508 008a 1B68     	 ldr r3,[r3]
 1509 008c 0021     	 movs r1,#0
 1510 008e 1846     	 mov r0,r3
 1511 0090 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 1512              	.LBB3:
 428:../Libraries/XMCLib/src/xmc4_flash.c **** 
 429:../Libraries/XMCLib/src/xmc4_flash.c ****   for (uint32_t idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_BMI_STRING_WORDS); idx += 2U)
 1513              	 .loc 1 429 17
 1514 0094 0023     	 movs r3,#0
 1515 0096 FB60     	 str r3,[r7,#12]
 1516              	 .loc 1 429 3
 1517 0098 06E0     	 b .L67
 1518              	.L68:
 430:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 431:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1519              	 .loc 1 431 5 discriminator 3
 1520 009a 0021     	 movs r1,#0
 1521 009c 0020     	 movs r0,#0
 1522 009e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 429:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1523              	 .loc 1 429 94 discriminator 3
 1524 00a2 FB68     	 ldr r3,[r7,#12]
 1525 00a4 0233     	 adds r3,r3,#2
 1526 00a6 FB60     	 str r3,[r7,#12]
 1527              	.L67:
 429:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1528              	 .loc 1 429 3 discriminator 1
 1529 00a8 FB68     	 ldr r3,[r7,#12]
 1530 00aa 352B     	 cmp r3,#53
 1531 00ac F5D9     	 bls .L68
 1532              	.LBE3:
 432:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 433:../Libraries/XMCLib/src/xmc4_flash.c **** 
 434:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB2 + XMC_FLASH_BYTES_PER_PAGE))
 1533              	 .loc 1 434 3
 1534 00ae 0848     	 ldr r0,.L70
 1535 00b0 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 435:../Libraries/XMCLib/src/xmc4_flash.c **** 
 436:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 437:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 1536              	 .loc 1 437 9
 1537 00b4 00BF     	 nop
 1538              	.L69:
 1539              	 .loc 1 437 17 discriminator 1
 1540 00b6 074B     	 ldr r3,.L70+4
 1541 00b8 03F58053 	 add r3,r3,#4096
 1542 00bc 1B69     	 ldr r3,[r3,#16]
 1543              	 .loc 1 437 23 discriminator 1
 1544 00be 03F00103 	 and r3,r3,#1
 1545              	 .loc 1 437 9 discriminator 1
 1546 00c2 002B     	 cmp r3,#0
 1547 00c4 F7D1     	 bne .L69
 438:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1548              	 .loc 1 438 1
 1549 00c6 00BF     	 nop
 1550 00c8 00BF     	 nop
 1551 00ca 1837     	 adds r7,r7,#24
 1552              	.LCFI110:
 1553              	 .cfi_def_cfa_offset 8
 1554 00cc BD46     	 mov sp,r7
 1555              	.LCFI111:
 1556              	 .cfi_def_cfa_register 13
 1557              	 
 1558 00ce 80BD     	 pop {r7,pc}
 1559              	.L71:
 1560              	 .align 2
 1561              	.L70:
 1562 00d0 0009000C 	 .word 201328896
 1563 00d4 00100058 	 .word 1476399104
 1564              	 .cfi_endproc
 1565              	.LFE167:
 1567              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1568              	 .align 1
 1569              	 .global XMC_FLASH_InstallProtection
 1570              	 .syntax unified
 1571              	 .thumb
 1572              	 .thumb_func
 1573              	 .fpu fpv4-sp-d16
 1575              	XMC_FLASH_InstallProtection:
 1576              	.LFB168:
 439:../Libraries/XMCLib/src/xmc4_flash.c **** 
 440:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 441:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 442:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 443:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 444:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t protection_mask,
 445:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_0,
 446:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_1)
 447:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1577              	 .loc 1 447 1
 1578              	 .cfi_startproc
 1579              	 
 1580              	 
 1581 0000 80B5     	 push {r7,lr}
 1582              	.LCFI112:
 1583              	 .cfi_def_cfa_offset 8
 1584              	 .cfi_offset 7,-8
 1585              	 .cfi_offset 14,-4
 1586 0002 86B0     	 sub sp,sp,#24
 1587              	.LCFI113:
 1588              	 .cfi_def_cfa_offset 32
 1589 0004 00AF     	 add r7,sp,#0
 1590              	.LCFI114:
 1591              	 .cfi_def_cfa_register 7
 1592 0006 B960     	 str r1,[r7,#8]
 1593 0008 7A60     	 str r2,[r7,#4]
 1594 000a 3B60     	 str r3,[r7]
 1595 000c 0346     	 mov r3,r0
 1596 000e FB73     	 strb r3,[r7,#15]
 448:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 449:../Libraries/XMCLib/src/xmc4_flash.c **** 
 450:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U))
 451:../Libraries/XMCLib/src/xmc4_flash.c **** 
 452:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1597              	 .loc 1 452 3
 1598 0010 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 453:../Libraries/XMCLib/src/xmc4_flash.c **** 
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1599              	 .loc 1 454 3
 1600 0014 0021     	 movs r1,#0
 1601 0016 B868     	 ldr r0,[r7,#8]
 1602 0018 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 455:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1603              	 .loc 1 455 3
 1604 001c 0021     	 movs r1,#0
 1605 001e B868     	 ldr r0,[r7,#8]
 1606 0020 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 456:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1607              	 .loc 1 456 3
 1608 0024 3968     	 ldr r1,[r7]
 1609 0026 7868     	 ldr r0,[r7,#4]
 1610 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 457:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1611              	 .loc 1 457 3
 1612 002c 3968     	 ldr r1,[r7]
 1613 002e 7868     	 ldr r0,[r7,#4]
 1614 0030 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 458:../Libraries/XMCLib/src/xmc4_flash.c **** 
 459:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); idx +
 1615              	 .loc 1 459 12
 1616 0034 0023     	 movs r3,#0
 1617 0036 7B61     	 str r3,[r7,#20]
 1618              	 .loc 1 459 3
 1619 0038 06E0     	 b .L73
 1620              	.L74:
 460:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 461:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1621              	 .loc 1 461 5 discriminator 3
 1622 003a 0021     	 movs r1,#0
 1623 003c 0020     	 movs r0,#0
 1624 003e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 459:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1625              	 .loc 1 459 99 discriminator 3
 1626 0042 7B69     	 ldr r3,[r7,#20]
 1627 0044 0233     	 adds r3,r3,#2
 1628 0046 7B61     	 str r3,[r7,#20]
 1629              	.L73:
 459:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1630              	 .loc 1 459 3 discriminator 1
 1631 0048 7B69     	 ldr r3,[r7,#20]
 1632 004a 372B     	 cmp r3,#55
 1633 004c F5D9     	 bls .L74
 462:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 463:../Libraries/XMCLib/src/xmc4_flash.c **** 
 464:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1634              	 .loc 1 464 72
 1635 004e FB7B     	 ldrb r3,[r7,#15]
 1636 0050 03F54033 	 add r3,r3,#196608
 1637 0054 9B02     	 lsls r3,r3,#10
 1638              	 .loc 1 464 3
 1639 0056 1846     	 mov r0,r3
 1640 0058 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 465:../Libraries/XMCLib/src/xmc4_flash.c **** 
 466:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 467:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 1641              	 .loc 1 467 9
 1642 005c 00BF     	 nop
 1643              	.L75:
 1644              	 .loc 1 467 17 discriminator 1
 1645 005e 064B     	 ldr r3,.L76
 1646 0060 03F58053 	 add r3,r3,#4096
 1647 0064 1B69     	 ldr r3,[r3,#16]
 1648              	 .loc 1 467 23 discriminator 1
 1649 0066 03F00103 	 and r3,r3,#1
 1650              	 .loc 1 467 9 discriminator 1
 1651 006a 002B     	 cmp r3,#0
 1652 006c F7D1     	 bne .L75
 468:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1653              	 .loc 1 468 1
 1654 006e 00BF     	 nop
 1655 0070 00BF     	 nop
 1656 0072 1837     	 adds r7,r7,#24
 1657              	.LCFI115:
 1658              	 .cfi_def_cfa_offset 8
 1659 0074 BD46     	 mov sp,r7
 1660              	.LCFI116:
 1661              	 .cfi_def_cfa_register 13
 1662              	 
 1663 0076 80BD     	 pop {r7,pc}
 1664              	.L77:
 1665              	 .align 2
 1666              	.L76:
 1667 0078 00100058 	 .word 1476399104
 1668              	 .cfi_endproc
 1669              	.LFE168:
 1671              	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1672              	 .align 1
 1673              	 .global XMC_FLASH_ConfirmProtection
 1674              	 .syntax unified
 1675              	 .thumb
 1676              	 .thumb_func
 1677              	 .fpu fpv4-sp-d16
 1679              	XMC_FLASH_ConfirmProtection:
 1680              	.LFB169:
 469:../Libraries/XMCLib/src/xmc4_flash.c **** 
 470:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 471:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 472:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 473:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 474:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1681              	 .loc 1 474 1
 1682              	 .cfi_startproc
 1683              	 
 1684              	 
 1685 0000 80B5     	 push {r7,lr}
 1686              	.LCFI117:
 1687              	 .cfi_def_cfa_offset 8
 1688              	 .cfi_offset 7,-8
 1689              	 .cfi_offset 14,-4
 1690 0002 84B0     	 sub sp,sp,#16
 1691              	.LCFI118:
 1692              	 .cfi_def_cfa_offset 24
 1693 0004 00AF     	 add r7,sp,#0
 1694              	.LCFI119:
 1695              	 .cfi_def_cfa_register 7
 1696 0006 0346     	 mov r3,r0
 1697 0008 FB71     	 strb r3,[r7,#7]
 475:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 476:../Libraries/XMCLib/src/xmc4_flash.c **** 
 477:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U))
 478:../Libraries/XMCLib/src/xmc4_flash.c **** 
 479:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1698              	 .loc 1 479 3
 1699 000a FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 480:../Libraries/XMCLib/src/xmc4_flash.c **** 
 481:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1700              	 .loc 1 481 3
 1701 000e 0021     	 movs r1,#0
 1702 0010 1548     	 ldr r0,.L82
 1703 0012 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 482:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1704              	 .loc 1 482 3
 1705 0016 0021     	 movs r1,#0
 1706 0018 1348     	 ldr r0,.L82
 1707 001a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 483:../Libraries/XMCLib/src/xmc4_flash.c **** 
 484:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 485:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0UL; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROT_CONFIRM_WORDS); idx += 2U)
 1708              	 .loc 1 485 12
 1709 001e 0023     	 movs r3,#0
 1710 0020 FB60     	 str r3,[r7,#12]
 1711              	 .loc 1 485 3
 1712 0022 06E0     	 b .L79
 1713              	.L80:
 486:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 487:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1714              	 .loc 1 487 5 discriminator 3
 1715 0024 0021     	 movs r1,#0
 1716 0026 0020     	 movs r0,#0
 1717 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 485:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1718              	 .loc 1 485 88 discriminator 3
 1719 002c FB68     	 ldr r3,[r7,#12]
 1720 002e 0233     	 adds r3,r3,#2
 1721 0030 FB60     	 str r3,[r7,#12]
 1722              	.L79:
 485:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1723              	 .loc 1 485 3 discriminator 1
 1724 0032 FB68     	 ldr r3,[r7,#12]
 1725 0034 3B2B     	 cmp r3,#59
 1726 0036 F5D9     	 bls .L80
 488:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 489:../Libraries/XMCLib/src/xmc4_flash.c **** 
 490:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 +
 1727              	 .loc 1 490 72
 1728 0038 FB79     	 ldrb r3,[r7,#7]
 1729 003a 03F54033 	 add r3,r3,#196608
 1730 003e 9B02     	 lsls r3,r3,#10
 491:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1731              	 .loc 1 491 67
 1732 0040 03F50073 	 add r3,r3,#512
 490:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1733              	 .loc 1 490 3
 1734 0044 1846     	 mov r0,r3
 1735 0046 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 492:../Libraries/XMCLib/src/xmc4_flash.c **** 
 493:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 494:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U) {}
 1736              	 .loc 1 494 9
 1737 004a 00BF     	 nop
 1738              	.L81:
 1739              	 .loc 1 494 17 discriminator 1
 1740 004c 074B     	 ldr r3,.L82+4
 1741 004e 03F58053 	 add r3,r3,#4096
 1742 0052 1B69     	 ldr r3,[r3,#16]
 1743              	 .loc 1 494 23 discriminator 1
 1744 0054 03F00103 	 and r3,r3,#1
 1745              	 .loc 1 494 9 discriminator 1
 1746 0058 002B     	 cmp r3,#0
 1747 005a F7D1     	 bne .L81
 495:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1748              	 .loc 1 495 1
 1749 005c 00BF     	 nop
 1750 005e 00BF     	 nop
 1751 0060 1037     	 adds r7,r7,#16
 1752              	.LCFI120:
 1753              	 .cfi_def_cfa_offset 8
 1754 0062 BD46     	 mov sp,r7
 1755              	.LCFI121:
 1756              	 .cfi_def_cfa_register 13
 1757              	 
 1758 0064 80BD     	 pop {r7,pc}
 1759              	.L83:
 1760 0066 00BF     	 .align 2
 1761              	.L82:
 1762 0068 C315FE8A 	 .word -1963059773
 1763 006c 00100058 	 .word 1476399104
 1764              	 .cfi_endproc
 1765              	.LFE169:
 1767              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1768              	 .align 1
 1769              	 .global XMC_FLASH_VerifyReadProtection
 1770              	 .syntax unified
 1771              	 .thumb
 1772              	 .thumb_func
 1773              	 .fpu fpv4-sp-d16
 1775              	XMC_FLASH_VerifyReadProtection:
 1776              	.LFB170:
 496:../Libraries/XMCLib/src/xmc4_flash.c **** 
 497:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 498:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 499:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 500:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 501:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1777              	 .loc 1 501 1
 1778              	 .cfi_startproc
 1779              	 
 1780              	 
 1781 0000 80B5     	 push {r7,lr}
 1782              	.LCFI122:
 1783              	 .cfi_def_cfa_offset 8
 1784              	 .cfi_offset 7,-8
 1785              	 .cfi_offset 14,-4
 1786 0002 84B0     	 sub sp,sp,#16
 1787              	.LCFI123:
 1788              	 .cfi_def_cfa_offset 24
 1789 0004 00AF     	 add r7,sp,#0
 1790              	.LCFI124:
 1791              	 .cfi_def_cfa_register 7
 1792 0006 7860     	 str r0,[r7,#4]
 1793 0008 3960     	 str r1,[r7]
 502:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1794              	 .loc 1 502 8
 1795 000a 0023     	 movs r3,#0
 1796 000c FB73     	 strb r3,[r7,#15]
 503:../Libraries/XMCLib/src/xmc4_flash.c **** 
 504:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if read protection is installed */
 505:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) != 0U)
 1797              	 .loc 1 505 8
 1798 000e FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1799 0012 0346     	 mov r3,r0
 1800              	 .loc 1 505 30
 1801 0014 03F48023 	 and r3,r3,#262144
 1802              	 .loc 1 505 6
 1803 0018 002B     	 cmp r3,#0
 1804 001a 0FD0     	 beq .L85
 506:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 507:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1805              	 .loc 1 507 5
 1806 001c FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 508:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 1807              	 .loc 1 508 5
 1808 0020 3968     	 ldr r1,[r7]
 1809 0022 7868     	 ldr r0,[r7,#4]
 1810 0024 FFF7FEFF 	 bl XMC_FLASH_lDisableReadProtectionCommand
 509:../Libraries/XMCLib/src/xmc4_flash.c **** 
 510:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)(XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STA
 1811              	 .loc 1 510 21
 1812 0028 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1813 002c 0346     	 mov r3,r0
 1814              	 .loc 1 510 43
 1815 002e 03F40023 	 and r3,r3,#524288
 1816              	 .loc 1 510 12
 1817 0032 002B     	 cmp r3,#0
 1818 0034 14BF     	 ite ne
 1819 0036 0123     	 movne r3,#1
 1820 0038 0023     	 moveq r3,#0
 1821 003a FB73     	 strb r3,[r7,#15]
 1822              	.L85:
 511:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 512:../Libraries/XMCLib/src/xmc4_flash.c **** 
 513:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 1823              	 .loc 1 513 10
 1824 003c FB7B     	 ldrb r3,[r7,#15]
 514:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1825              	 .loc 1 514 1
 1826 003e 1846     	 mov r0,r3
 1827 0040 1037     	 adds r7,r7,#16
 1828              	.LCFI125:
 1829              	 .cfi_def_cfa_offset 8
 1830 0042 BD46     	 mov sp,r7
 1831              	.LCFI126:
 1832              	 .cfi_def_cfa_register 13
 1833              	 
 1834 0044 80BD     	 pop {r7,pc}
 1835              	 .cfi_endproc
 1836              	.LFE170:
 1838              	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1839              	 .align 1
 1840              	 .global XMC_FLASH_VerifyWriteProtection
 1841              	 .syntax unified
 1842              	 .thumb
 1843              	 .thumb_func
 1844              	 .fpu fpv4-sp-d16
 1846              	XMC_FLASH_VerifyWriteProtection:
 1847              	.LFB171:
 515:../Libraries/XMCLib/src/xmc4_flash.c **** 
 516:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 517:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 518:../Libraries/XMCLib/src/xmc4_flash.c ****  * specified user.
 519:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 520:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 521:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t protection_mask,
 522:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_0,
 523:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_1)
 524:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1848              	 .loc 1 524 1
 1849              	 .cfi_startproc
 1850              	 
 1851              	 
 1852 0000 80B5     	 push {r7,lr}
 1853              	.LCFI127:
 1854              	 .cfi_def_cfa_offset 8
 1855              	 .cfi_offset 7,-8
 1856              	 .cfi_offset 14,-4
 1857 0002 86B0     	 sub sp,sp,#24
 1858              	.LCFI128:
 1859              	 .cfi_def_cfa_offset 32
 1860 0004 00AF     	 add r7,sp,#0
 1861              	.LCFI129:
 1862              	 .cfi_def_cfa_register 7
 1863 0006 F860     	 str r0,[r7,#12]
 1864 0008 B960     	 str r1,[r7,#8]
 1865 000a 7A60     	 str r2,[r7,#4]
 1866 000c 3B60     	 str r3,[r7]
 525:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1867              	 .loc 1 525 8
 1868 000e 0023     	 movs r3,#0
 1869 0010 FB75     	 strb r3,[r7,#23]
 526:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void *)(&(FLASH0->PROCON0) + user);
 1870              	 .loc 1 526 72
 1871 0012 FB68     	 ldr r3,[r7,#12]
 1872 0014 9A00     	 lsls r2,r3,#2
 1873              	 .loc 1 526 13
 1874 0016 1A4B     	 ldr r3,.L92
 1875 0018 1344     	 add r3,r3,r2
 1876 001a 3B61     	 str r3,[r7,#16]
 527:../Libraries/XMCLib/src/xmc4_flash.c **** 
 528:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 2U))
 529:../Libraries/XMCLib/src/xmc4_flash.c **** 
 530:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if write protection for selected user is installed */
 531:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_FSR_WPROIN0_Po
 1877              	 .loc 1 531 8
 1878 001c FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1879 0020 0246     	 mov r2,r0
 1880              	 .loc 1 531 59
 1881 0022 FB68     	 ldr r3,[r7,#12]
 1882 0024 1533     	 adds r3,r3,#21
 1883              	 .loc 1 531 112
 1884 0026 22FA03F3 	 lsr r3,r2,r3
 1885 002a 03F00103 	 and r3,r3,#1
 1886              	 .loc 1 531 6
 1887 002e 002B     	 cmp r3,#0
 1888 0030 20D0     	 beq .L88
 532:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 533:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1889              	 .loc 1 533 5
 1890 0032 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 534:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 1891              	 .loc 1 534 5
 1892 0036 3A68     	 ldr r2,[r7]
 1893 0038 7968     	 ldr r1,[r7,#4]
 1894 003a F868     	 ldr r0,[r7,#12]
 1895 003c FFF7FEFF 	 bl XMC_FLASH_lDisableSectorWriteProtectionCommand
 535:../Libraries/XMCLib/src/xmc4_flash.c **** 
 536:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_
 1896              	 .loc 1 536 22
 1897 0040 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1898 0044 0246     	 mov r2,r0
 1899              	 .loc 1 536 73
 1900 0046 FB68     	 ldr r3,[r7,#12]
 1901 0048 1933     	 adds r3,r3,#25
 1902              	 .loc 1 536 14
 1903 004a 22FA03F3 	 lsr r3,r2,r3
 1904 004e 03F00103 	 and r3,r3,#1
 1905              	 .loc 1 536 128
 1906 0052 002B     	 cmp r3,#0
 1907 0054 08D0     	 beq .L89
 537:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1908              	 .loc 1 537 15 discriminator 1
 1909 0056 3B69     	 ldr r3,[r7,#16]
 1910 0058 1A68     	 ldr r2,[r3]
 1911              	 .loc 1 537 53 discriminator 1
 1912 005a BB68     	 ldr r3,[r7,#8]
 1913 005c 23F40043 	 bic r3,r3,#32768
 536:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1914              	 .loc 1 536 128 discriminator 1
 1915 0060 9A42     	 cmp r2,r3
 1916 0062 01D1     	 bne .L89
 536:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1917              	 .loc 1 536 128 is_stmt 0 discriminator 3
 1918 0064 0123     	 movs r3,#1
 1919 0066 00E0     	 b .L90
 1920              	.L89:
 536:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1921              	 .loc 1 536 128 discriminator 4
 1922 0068 0023     	 movs r3,#0
 1923              	.L90:
 536:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1924              	 .loc 1 536 12 is_stmt 1 discriminator 6
 1925 006a FB75     	 strb r3,[r7,#23]
 1926 006c FB7D     	 ldrb r3,[r7,#23]
 1927 006e 03F00103 	 and r3,r3,#1
 1928 0072 FB75     	 strb r3,[r7,#23]
 1929              	.L88:
 538:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 539:../Libraries/XMCLib/src/xmc4_flash.c **** 
 540:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 1930              	 .loc 1 540 10
 1931 0074 FB7D     	 ldrb r3,[r7,#23]
 541:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1932              	 .loc 1 541 1
 1933 0076 1846     	 mov r0,r3
 1934 0078 1837     	 adds r7,r7,#24
 1935              	.LCFI130:
 1936              	 .cfi_def_cfa_offset 8
 1937 007a BD46     	 mov sp,r7
 1938              	.LCFI131:
 1939              	 .cfi_def_cfa_register 13
 1940              	 
 1941 007c 80BD     	 pop {r7,pc}
 1942              	.L93:
 1943 007e 00BF     	 .align 2
 1944              	.L92:
 1945 0080 20200058 	 .word 1476403232
 1946              	 .cfi_endproc
 1947              	.LFE171:
 1949              	 .section .text.XMC_FLASH_ResumeProtection,"ax",%progbits
 1950              	 .align 1
 1951              	 .global XMC_FLASH_ResumeProtection
 1952              	 .syntax unified
 1953              	 .thumb
 1954              	 .thumb_func
 1955              	 .fpu fpv4-sp-d16
 1957              	XMC_FLASH_ResumeProtection:
 1958              	.LFB172:
 542:../Libraries/XMCLib/src/xmc4_flash.c **** 
 543:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 544:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to enables the protection as it was configured
 545:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 546:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ResumeProtection(void)
 547:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1959              	 .loc 1 547 1
 1960              	 .cfi_startproc
 1961              	 
 1962              	 
 1963              	 
 1964 0000 80B4     	 push {r7}
 1965              	.LCFI132:
 1966              	 .cfi_def_cfa_offset 4
 1967              	 .cfi_offset 7,-4
 1968 0002 83B0     	 sub sp,sp,#12
 1969              	.LCFI133:
 1970              	 .cfi_def_cfa_offset 16
 1971 0004 00AF     	 add r7,sp,#0
 1972              	.LCFI134:
 1973              	 .cfi_def_cfa_register 7
 548:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 549:../Libraries/XMCLib/src/xmc4_flash.c **** 
 550:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1974              	 .loc 1 550 11
 1975 0006 054B     	 ldr r3,.L95
 1976 0008 7B60     	 str r3,[r7,#4]
 551:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x5eU;
 1977              	 .loc 1 551 12
 1978 000a 7B68     	 ldr r3,[r7,#4]
 1979 000c 5E22     	 movs r2,#94
 1980 000e 1A60     	 str r2,[r3]
 552:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1981              	 .loc 1 552 1
 1982 0010 00BF     	 nop
 1983 0012 0C37     	 adds r7,r7,#12
 1984              	.LCFI135:
 1985              	 .cfi_def_cfa_offset 4
 1986 0014 BD46     	 mov sp,r7
 1987              	.LCFI136:
 1988              	 .cfi_def_cfa_register 13
 1989              	 
 1990 0016 5DF8047B 	 ldr r7,[sp],#4
 1991              	.LCFI137:
 1992              	 .cfi_restore 7
 1993              	 .cfi_def_cfa_offset 0
 1994 001a 7047     	 bx lr
 1995              	.L96:
 1996              	 .align 2
 1997              	.L95:
 1998 001c 5455000C 	 .word 201348436
 1999              	 .cfi_endproc
 2000              	.LFE172:
 2002              	 .text
 2003              	.Letext0:
 2004              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 2005              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 2006              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2007              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc4_flash.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:17     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:25     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:67     .text.XMC_FLASH_lEnterPageModeCommand:0000001c $d
    {standard input}:72     .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:79     .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:129    .text.XMC_FLASH_lLoadPageCommand:0000002c $d
    {standard input}:135    .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:142    .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:205    .text.XMC_FLASH_lWritePageCommand:0000003c $d
    {standard input}:211    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:218    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:281    .text.XMC_FLASH_lWriteUCBPageCommand:0000003c $d
    {standard input}:287    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:294    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:371    .text.XMC_FLASH_lEraseSectorCommand:00000050 $d
    {standard input}:377    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:384    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:463    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000054 $d
    {standard input}:471    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:478    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:556    .text.XMC_FLASH_lDisableReadProtectionCommand:00000054 $d
    {standard input}:564    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:571    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:612    .text.XMC_FLASH_lClearStatusCommand:0000001c $d
    {standard input}:617    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:624    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:647    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:654    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:686    .text.XMC_FLASH_GetStatus:00000018 $d
    {standard input}:691    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:698    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:742    .text.XMC_FLASH_EnableEvent:00000028 $d
    {standard input}:747    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:754    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:801    .text.XMC_FLASH_DisableEvent:0000002c $d
    {standard input}:806    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:813    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:897    .text.XMC_FLASH_ProgramPage:00000064 $d
    {standard input}:902    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:909    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:958    .text.XMC_FLASH_EraseSector:00000030 $d
    {standard input}:963    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:970    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:1047   .text.XMC_FLASH_lErasePhysicalSectorCommand:00000050 $d
    {standard input}:1053   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 $t
    {standard input}:1060   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 XMC_FLASH_lRepairPhysicalSectorCommand
    {standard input}:1136   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000050 $d
    {standard input}:1143   .text.XMC_FLASH_ErasePhysicalSector:00000000 $t
    {standard input}:1150   .text.XMC_FLASH_ErasePhysicalSector:00000000 XMC_FLASH_ErasePhysicalSector
    {standard input}:1199   .text.XMC_FLASH_ErasePhysicalSector:00000030 $d
    {standard input}:1204   .text.XMC_FLASH_RepairPhysicalSector:00000000 $t
    {standard input}:1211   .text.XMC_FLASH_RepairPhysicalSector:00000000 XMC_FLASH_RepairPhysicalSector
    {standard input}:1236   .text.XMC_FLASH_EraseUCB:00000000 $t
    {standard input}:1243   .text.XMC_FLASH_EraseUCB:00000000 XMC_FLASH_EraseUCB
    {standard input}:1333   .text.XMC_FLASH_EraseUCB:00000064 $d
    {standard input}:1340   .text.XMC_FLASH_Reset:00000000 $t
    {standard input}:1347   .text.XMC_FLASH_Reset:00000000 XMC_FLASH_Reset
    {standard input}:1388   .text.XMC_FLASH_Reset:0000001c $d
    {standard input}:1393   .text.XMC_FLASH_InstallBMI:00000000 $t
    {standard input}:1400   .text.XMC_FLASH_InstallBMI:00000000 XMC_FLASH_InstallBMI
    {standard input}:1562   .text.XMC_FLASH_InstallBMI:000000d0 $d
    {standard input}:1568   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1575   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1667   .text.XMC_FLASH_InstallProtection:00000078 $d
    {standard input}:1672   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1679   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1762   .text.XMC_FLASH_ConfirmProtection:00000068 $d
    {standard input}:1768   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1775   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1839   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1846   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1945   .text.XMC_FLASH_VerifyWriteProtection:00000080 $d
    {standard input}:1950   .text.XMC_FLASH_ResumeProtection:00000000 $t
    {standard input}:1957   .text.XMC_FLASH_ResumeProtection:00000000 XMC_FLASH_ResumeProtection
    {standard input}:1998   .text.XMC_FLASH_ResumeProtection:0000001c $d

NO UNDEFINED SYMBOLS
