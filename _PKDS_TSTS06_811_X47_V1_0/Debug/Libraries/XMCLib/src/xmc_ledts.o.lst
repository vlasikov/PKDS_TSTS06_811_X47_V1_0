   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc_ledts.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  17              	 .align 1
  18              	 .global XMC_LEDTS_InitGlobal
  19              	 .arch armv7e-m
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB173:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  54:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2019-12-16:
  55:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  57:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  58:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  59:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  60:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  61:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  62:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  63:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  64:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  65:../Libraries/XMCLib/src/xmc_ledts.c **** 
  66:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  68:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_ledts.h"
  70:../Libraries/XMCLib/src/xmc_ledts.c **** 
  71:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  72:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  73:../Libraries/XMCLib/src/xmc_ledts.c **** 
  74:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  76:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  78:../Libraries/XMCLib/src/xmc_ledts.c **** 
  79:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_ledts.c **** 
  83:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ledts.c **** 
  87:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  89:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_ledts.c **** 
  91:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  92:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  93:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  94:../Libraries/XMCLib/src/xmc_ledts.c **** 
  95:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  96:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  97:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_ledts.c **** 
  99:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 100:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
 101:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 102:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
 103:../Libraries/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 103 1
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
 104:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 105:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
 106:../Libraries/XMCLib/src/xmc_ledts.c **** 
 107:../Libraries/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  45              	 .loc 1 107 6
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 0C4A     	 ldr r2,.L5
  48 000e 9342     	 cmp r3,r2
  49 0010 05D1     	 bne .L2
 108:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 109:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
  50              	 .loc 1 110 5
  51 0012 0C48     	 ldr r0,.L5+4
  52 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 112:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 113:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  53              	 .loc 1 113 5
  54 0018 0A48     	 ldr r0,.L5+4
  55 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  56              	.L2:
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 115:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 117:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
 118:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 119:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 120:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 121:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 124:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 125:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 126:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 128:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
 129:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 130:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 131:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 132:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 133:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 135:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 137:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   else
 139:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 140:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 141:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 142:../Libraries/XMCLib/src/xmc_ledts.c **** 
 143:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  57              	 .loc 1 143 13
  58 001e 7B68     	 ldr r3,[r7,#4]
  59 0020 5B68     	 ldr r3,[r3,#4]
  60              	 .loc 1 143 23
  61 0022 1B0C     	 lsrs r3,r3,#16
  62 0024 1B04     	 lsls r3,r3,#16
  63              	 .loc 1 143 6
  64 0026 002B     	 cmp r3,#0
  65 0028 01D0     	 beq .L3
 144:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 145:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  66              	 .loc 1 145 12
  67 002a 0123     	 movs r3,#1
  68 002c 04E0     	 b .L4
  69              	.L3:
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 147:../Libraries/XMCLib/src/xmc_ledts.c **** 
 148:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  70              	 .loc 1 148 26
  71 002e 3B68     	 ldr r3,[r7]
  72 0030 1A68     	 ldr r2,[r3]
  73              	 .loc 1 148 18
  74 0032 7B68     	 ldr r3,[r7,#4]
  75 0034 5A60     	 str r2,[r3,#4]
 149:../Libraries/XMCLib/src/xmc_ledts.c **** 
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  76              	 .loc 1 150 10
  77 0036 0023     	 movs r3,#0
  78              	.L4:
 151:../Libraries/XMCLib/src/xmc_ledts.c **** }
  79              	 .loc 1 151 1
  80 0038 1846     	 mov r0,r3
  81 003a 0837     	 adds r7,r7,#8
  82              	.LCFI3:
  83              	 .cfi_def_cfa_offset 8
  84 003c BD46     	 mov sp,r7
  85              	.LCFI4:
  86              	 .cfi_def_cfa_register 13
  87              	 
  88 003e 80BD     	 pop {r7,pc}
  89              	.L6:
  90              	 .align 2
  91              	.L5:
  92 0040 00000148 	 .word 1208025088
  93 0044 08000010 	 .word 268435464
  94              	 .cfi_endproc
  95              	.LFE173:
  97              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  98              	 .align 1
  99              	 .global XMC_LEDTS_InitLED
 100              	 .syntax unified
 101              	 .thumb
 102              	 .thumb_func
 103              	 .fpu fpv4-sp-d16
 105              	XMC_LEDTS_InitLED:
 106              	.LFB174:
 152:../Libraries/XMCLib/src/xmc_ledts.c **** 
 153:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 155:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 156:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 157:../Libraries/XMCLib/src/xmc_ledts.c **** {
 107              	 .loc 1 157 1
 108              	 .cfi_startproc
 109              	 
 110              	 
 111              	 
 112 0000 80B4     	 push {r7}
 113              	.LCFI5:
 114              	 .cfi_def_cfa_offset 4
 115              	 .cfi_offset 7,-4
 116 0002 83B0     	 sub sp,sp,#12
 117              	.LCFI6:
 118              	 .cfi_def_cfa_offset 16
 119 0004 00AF     	 add r7,sp,#0
 120              	.LCFI7:
 121              	 .cfi_def_cfa_register 7
 122 0006 7860     	 str r0,[r7,#4]
 123 0008 3960     	 str r1,[r7]
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 160:../Libraries/XMCLib/src/xmc_ledts.c **** 
 161:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 124              	 .loc 1 161 13
 125 000a 7B68     	 ldr r3,[r7,#4]
 126 000c 5B68     	 ldr r3,[r3,#4]
 127              	 .loc 1 161 23
 128 000e 1B0C     	 lsrs r3,r3,#16
 129 0010 1B04     	 lsls r3,r3,#16
 130              	 .loc 1 161 6
 131 0012 002B     	 cmp r3,#0
 132 0014 01D0     	 beq .L8
 162:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 163:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 133              	 .loc 1 163 12
 134 0016 0123     	 movs r3,#1
 135 0018 13E0     	 b .L9
 136              	.L8:
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 165:../Libraries/XMCLib/src/xmc_ledts.c **** 
 166:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 137              	 .loc 1 166 16
 138 001a 7B68     	 ldr r3,[r7,#4]
 139 001c 9B68     	 ldr r3,[r3,#8]
 140 001e 23F07042 	 bic r2,r3,#-268435456
 141 0022 7B68     	 ldr r3,[r7,#4]
 142 0024 9A60     	 str r2,[r3,#8]
 167:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 143              	 .loc 1 167 16
 144 0026 7B68     	 ldr r3,[r7,#4]
 145 0028 9A68     	 ldr r2,[r3,#8]
 146              	 .loc 1 167 26
 147 002a 3B68     	 ldr r3,[r7]
 148 002c 1B68     	 ldr r3,[r3]
 149              	 .loc 1 167 16
 150 002e 1A43     	 orrs r2,r2,r3
 151 0030 7B68     	 ldr r3,[r7,#4]
 152 0032 9A60     	 str r2,[r3,#8]
 168:../Libraries/XMCLib/src/xmc_ledts.c **** 
 169:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 170:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 153              	 .loc 1 170 18
 154 0034 7B68     	 ldr r3,[r7,#4]
 155 0036 5B68     	 ldr r3,[r3,#4]
 156 0038 43F00202 	 orr r2,r3,#2
 157 003c 7B68     	 ldr r3,[r7,#4]
 158 003e 5A60     	 str r2,[r3,#4]
 171:../Libraries/XMCLib/src/xmc_ledts.c **** 
 172:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 159              	 .loc 1 172 10
 160 0040 0023     	 movs r3,#0
 161              	.L9:
 173:../Libraries/XMCLib/src/xmc_ledts.c **** }
 162              	 .loc 1 173 1
 163 0042 1846     	 mov r0,r3
 164 0044 0C37     	 adds r7,r7,#12
 165              	.LCFI8:
 166              	 .cfi_def_cfa_offset 4
 167 0046 BD46     	 mov sp,r7
 168              	.LCFI9:
 169              	 .cfi_def_cfa_register 13
 170              	 
 171 0048 5DF8047B 	 ldr r7,[sp],#4
 172              	.LCFI10:
 173              	 .cfi_restore 7
 174              	 .cfi_def_cfa_offset 0
 175 004c 7047     	 bx lr
 176              	 .cfi_endproc
 177              	.LFE174:
 179              	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 180              	 .align 1
 181              	 .global XMC_LEDTS_InitTSBasic
 182              	 .syntax unified
 183              	 .thumb
 184              	 .thumb_func
 185              	 .fpu fpv4-sp-d16
 187              	XMC_LEDTS_InitTSBasic:
 188              	.LFB175:
 174:../Libraries/XMCLib/src/xmc_ledts.c **** 
 175:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 176:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 178:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 179:../Libraries/XMCLib/src/xmc_ledts.c **** {
 189              	 .loc 1 179 1
 190              	 .cfi_startproc
 191              	 
 192              	 
 193              	 
 194 0000 80B4     	 push {r7}
 195              	.LCFI11:
 196              	 .cfi_def_cfa_offset 4
 197              	 .cfi_offset 7,-4
 198 0002 85B0     	 sub sp,sp,#20
 199              	.LCFI12:
 200              	 .cfi_def_cfa_offset 24
 201 0004 00AF     	 add r7,sp,#0
 202              	.LCFI13:
 203              	 .cfi_def_cfa_register 7
 204 0006 7860     	 str r0,[r7,#4]
 205 0008 3960     	 str r1,[r7]
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 181:../Libraries/XMCLib/src/xmc_ledts.c **** 
 182:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 183:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 184:../Libraries/XMCLib/src/xmc_ledts.c **** 
 185:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 206              	 .loc 1 185 13
 207 000a 7B68     	 ldr r3,[r7,#4]
 208 000c 5B68     	 ldr r3,[r3,#4]
 209              	 .loc 1 185 23
 210 000e 1B0C     	 lsrs r3,r3,#16
 211 0010 1B04     	 lsls r3,r3,#16
 212              	 .loc 1 185 6
 213 0012 002B     	 cmp r3,#0
 214 0014 01D0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 187:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 215              	 .loc 1 187 12
 216 0016 0123     	 movs r3,#1
 217 0018 15E0     	 b .L12
 218              	.L11:
 188:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 189:../Libraries/XMCLib/src/xmc_ledts.c **** 
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 219              	 .loc 1 190 7
 220 001a 0E4B     	 ldr r3,.L13
 221 001c FB60     	 str r3,[r7,#12]
 191:../Libraries/XMCLib/src/xmc_ledts.c ****           LEDTS_FNCTL_NR_TSIN_Msk);
 192:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 222              	 .loc 1 192 16
 223 001e 7B68     	 ldr r3,[r7,#4]
 224 0020 9A68     	 ldr r2,[r3,#8]
 225 0022 FB68     	 ldr r3,[r7,#12]
 226 0024 1A40     	 ands r2,r2,r3
 227 0026 7B68     	 ldr r3,[r7,#4]
 228 0028 9A60     	 str r2,[r3,#8]
 193:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 229              	 .loc 1 193 16
 230 002a 7B68     	 ldr r3,[r7,#4]
 231 002c 9A68     	 ldr r2,[r3,#8]
 232              	 .loc 1 193 26
 233 002e 3B68     	 ldr r3,[r7]
 234 0030 1B68     	 ldr r3,[r3]
 235              	 .loc 1 193 16
 236 0032 1A43     	 orrs r2,r2,r3
 237 0034 7B68     	 ldr r3,[r7,#4]
 238 0036 9A60     	 str r2,[r3,#8]
 194:../Libraries/XMCLib/src/xmc_ledts.c **** 
 195:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 196:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 239              	 .loc 1 196 18
 240 0038 7B68     	 ldr r3,[r7,#4]
 241 003a 5B68     	 ldr r3,[r3,#4]
 242 003c 43F00102 	 orr r2,r3,#1
 243 0040 7B68     	 ldr r3,[r7,#4]
 244 0042 5A60     	 str r2,[r3,#4]
 197:../Libraries/XMCLib/src/xmc_ledts.c **** 
 198:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 245              	 .loc 1 198 10
 246 0044 0023     	 movs r3,#0
 247              	.L12:
 199:../Libraries/XMCLib/src/xmc_ledts.c **** }
 248              	 .loc 1 199 1
 249 0046 1846     	 mov r0,r3
 250 0048 1437     	 adds r7,r7,#20
 251              	.LCFI14:
 252              	 .cfi_def_cfa_offset 4
 253 004a BD46     	 mov sp,r7
 254              	.LCFI15:
 255              	 .cfi_def_cfa_register 13
 256              	 
 257 004c 5DF8047B 	 ldr r7,[sp],#4
 258              	.LCFI16:
 259              	 .cfi_restore 7
 260              	 .cfi_def_cfa_offset 0
 261 0050 7047     	 bx lr
 262              	.L14:
 263 0052 00BF     	 .align 2
 264              	.L13:
 265 0054 FFFF60F0 	 .word -262078465
 266              	 .cfi_endproc
 267              	.LFE175:
 269              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 270              	 .align 1
 271              	 .global XMC_LEDTS_InitTSAdvanced
 272              	 .syntax unified
 273              	 .thumb
 274              	 .thumb_func
 275              	 .fpu fpv4-sp-d16
 277              	XMC_LEDTS_InitTSAdvanced:
 278              	.LFB176:
 200:../Libraries/XMCLib/src/xmc_ledts.c **** 
 201:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 202:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 204:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 205:../Libraries/XMCLib/src/xmc_ledts.c **** {
 279              	 .loc 1 205 1
 280              	 .cfi_startproc
 281              	 
 282              	 
 283              	 
 284 0000 80B4     	 push {r7}
 285              	.LCFI17:
 286              	 .cfi_def_cfa_offset 4
 287              	 .cfi_offset 7,-4
 288 0002 85B0     	 sub sp,sp,#20
 289              	.LCFI18:
 290              	 .cfi_def_cfa_offset 24
 291 0004 00AF     	 add r7,sp,#0
 292              	.LCFI19:
 293              	 .cfi_def_cfa_register 7
 294 0006 7860     	 str r0,[r7,#4]
 295 0008 3960     	 str r1,[r7]
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 210:../Libraries/XMCLib/src/xmc_ledts.c **** 
 211:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 296              	 .loc 1 211 13
 297 000a 7B68     	 ldr r3,[r7,#4]
 298 000c 5B68     	 ldr r3,[r3,#4]
 299              	 .loc 1 211 23
 300 000e 1B0C     	 lsrs r3,r3,#16
 301 0010 1B04     	 lsls r3,r3,#16
 302              	 .loc 1 211 6
 303 0012 002B     	 cmp r3,#0
 304 0014 01D0     	 beq .L16
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 213:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 305              	 .loc 1 213 12
 306 0016 0123     	 movs r3,#1
 307 0018 1FE0     	 b .L17
 308              	.L16:
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 215:../Libraries/XMCLib/src/xmc_ledts.c **** 
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 309              	 .loc 1 216 7
 310 001a 6FF4F053 	 mvn r3,#7680
 311 001e FB60     	 str r3,[r7,#12]
 217:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 312              	 .loc 1 217 18
 313 0020 7B68     	 ldr r3,[r7,#4]
 314 0022 5A68     	 ldr r2,[r3,#4]
 315 0024 FB68     	 ldr r3,[r7,#12]
 316 0026 1A40     	 ands r2,r2,r3
 317 0028 7B68     	 ldr r3,[r7,#4]
 318 002a 5A60     	 str r2,[r3,#4]
 218:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 319              	 .loc 1 218 18
 320 002c 7B68     	 ldr r3,[r7,#4]
 321 002e 5A68     	 ldr r2,[r3,#4]
 322              	 .loc 1 218 28
 323 0030 3B68     	 ldr r3,[r7]
 324 0032 1B68     	 ldr r3,[r3]
 325              	 .loc 1 218 18
 326 0034 1A43     	 orrs r2,r2,r3
 327 0036 7B68     	 ldr r3,[r7,#4]
 328 0038 5A60     	 str r2,[r3,#4]
 219:../Libraries/XMCLib/src/xmc_ledts.c **** 
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 329              	 .loc 1 220 7
 330 003a 0B4B     	 ldr r3,.L18
 331 003c FB60     	 str r3,[r7,#12]
 221:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 332              	 .loc 1 221 16
 333 003e 7B68     	 ldr r3,[r7,#4]
 334 0040 9A68     	 ldr r2,[r3,#8]
 335 0042 FB68     	 ldr r3,[r7,#12]
 336 0044 1A40     	 ands r2,r2,r3
 337 0046 7B68     	 ldr r3,[r7,#4]
 338 0048 9A60     	 str r2,[r3,#8]
 222:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 339              	 .loc 1 222 16
 340 004a 7B68     	 ldr r3,[r7,#4]
 341 004c 9A68     	 ldr r2,[r3,#8]
 342              	 .loc 1 222 26
 343 004e 3B68     	 ldr r3,[r7]
 344 0050 5B68     	 ldr r3,[r3,#4]
 345              	 .loc 1 222 16
 346 0052 1A43     	 orrs r2,r2,r3
 347 0054 7B68     	 ldr r3,[r7,#4]
 348 0056 9A60     	 str r2,[r3,#8]
 223:../Libraries/XMCLib/src/xmc_ledts.c **** 
 224:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 349              	 .loc 1 224 10
 350 0058 0023     	 movs r3,#0
 351              	.L17:
 225:../Libraries/XMCLib/src/xmc_ledts.c **** }
 352              	 .loc 1 225 1
 353 005a 1846     	 mov r0,r3
 354 005c 1437     	 adds r7,r7,#20
 355              	.LCFI20:
 356              	 .cfi_def_cfa_offset 4
 357 005e BD46     	 mov sp,r7
 358              	.LCFI21:
 359              	 .cfi_def_cfa_register 13
 360              	 
 361 0060 5DF8047B 	 ldr r7,[sp],#4
 362              	.LCFI22:
 363              	 .cfi_restore 7
 364              	 .cfi_def_cfa_offset 0
 365 0064 7047     	 bx lr
 366              	.L19:
 367 0066 00BF     	 .align 2
 368              	.L18:
 369 0068 E0FF9FFF 	 .word -6291488
 370              	 .cfi_endproc
 371              	.LFE176:
 373              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 374              	 .align 1
 375              	 .global XMC_LEDTS_StartCounter
 376              	 .syntax unified
 377              	 .thumb
 378              	 .thumb_func
 379              	 .fpu fpv4-sp-d16
 381              	XMC_LEDTS_StartCounter:
 382              	.LFB177:
 226:../Libraries/XMCLib/src/xmc_ledts.c **** 
 227:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 228:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 229:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 230:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 231:../Libraries/XMCLib/src/xmc_ledts.c **** {
 383              	 .loc 1 231 1
 384              	 .cfi_startproc
 385              	 
 386              	 
 387              	 
 388 0000 80B4     	 push {r7}
 389              	.LCFI23:
 390              	 .cfi_def_cfa_offset 4
 391              	 .cfi_offset 7,-4
 392 0002 83B0     	 sub sp,sp,#12
 393              	.LCFI24:
 394              	 .cfi_def_cfa_offset 16
 395 0004 00AF     	 add r7,sp,#0
 396              	.LCFI25:
 397              	 .cfi_def_cfa_register 7
 398 0006 7860     	 str r0,[r7,#4]
 399 0008 0B46     	 mov r3,r1
 400 000a 7B80     	 strh r3,[r7,#2]
 232:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 233:../Libraries/XMCLib/src/xmc_ledts.c **** 
 234:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler << 16U;
 401              	 .loc 1 234 18
 402 000c 7B68     	 ldr r3,[r7,#4]
 403 000e 5B68     	 ldr r3,[r3,#4]
 404              	 .loc 1 234 31
 405 0010 7A88     	 ldrh r2,[r7,#2]
 406 0012 1204     	 lsls r2,r2,#16
 407              	 .loc 1 234 18
 408 0014 1A43     	 orrs r2,r2,r3
 409 0016 7B68     	 ldr r3,[r7,#4]
 410 0018 5A60     	 str r2,[r3,#4]
 235:../Libraries/XMCLib/src/xmc_ledts.c **** }
 411              	 .loc 1 235 1
 412 001a 00BF     	 nop
 413 001c 0C37     	 adds r7,r7,#12
 414              	.LCFI26:
 415              	 .cfi_def_cfa_offset 4
 416 001e BD46     	 mov sp,r7
 417              	.LCFI27:
 418              	 .cfi_def_cfa_register 13
 419              	 
 420 0020 5DF8047B 	 ldr r7,[sp],#4
 421              	.LCFI28:
 422              	 .cfi_restore 7
 423              	 .cfi_def_cfa_offset 0
 424 0024 7047     	 bx lr
 425              	 .cfi_endproc
 426              	.LFE177:
 428              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 429              	 .align 1
 430              	 .global XMC_LEDTS_StopCounter
 431              	 .syntax unified
 432              	 .thumb
 433              	 .thumb_func
 434              	 .fpu fpv4-sp-d16
 436              	XMC_LEDTS_StopCounter:
 437              	.LFB178:
 236:../Libraries/XMCLib/src/xmc_ledts.c **** 
 237:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 238:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 239:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 240:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 241:../Libraries/XMCLib/src/xmc_ledts.c **** {
 438              	 .loc 1 241 1
 439              	 .cfi_startproc
 440              	 
 441              	 
 442              	 
 443 0000 80B4     	 push {r7}
 444              	.LCFI29:
 445              	 .cfi_def_cfa_offset 4
 446              	 .cfi_offset 7,-4
 447 0002 83B0     	 sub sp,sp,#12
 448              	.LCFI30:
 449              	 .cfi_def_cfa_offset 16
 450 0004 00AF     	 add r7,sp,#0
 451              	.LCFI31:
 452              	 .cfi_def_cfa_register 7
 453 0006 7860     	 str r0,[r7,#4]
 242:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 243:../Libraries/XMCLib/src/xmc_ledts.c **** 
 244:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 454              	 .loc 1 244 18
 455 0008 7B68     	 ldr r3,[r7,#4]
 456 000a 5B68     	 ldr r3,[r3,#4]
 457 000c 9AB2     	 uxth r2,r3
 458 000e 7B68     	 ldr r3,[r7,#4]
 459 0010 5A60     	 str r2,[r3,#4]
 245:../Libraries/XMCLib/src/xmc_ledts.c **** }
 460              	 .loc 1 245 1
 461 0012 00BF     	 nop
 462 0014 0C37     	 adds r7,r7,#12
 463              	.LCFI32:
 464              	 .cfi_def_cfa_offset 4
 465 0016 BD46     	 mov sp,r7
 466              	.LCFI33:
 467              	 .cfi_def_cfa_register 13
 468              	 
 469 0018 5DF8047B 	 ldr r7,[sp],#4
 470              	.LCFI34:
 471              	 .cfi_restore 7
 472              	 .cfi_def_cfa_offset 0
 473 001c 7047     	 bx lr
 474              	 .cfi_endproc
 475              	.LFE178:
 477              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 478              	 .align 1
 479              	 .global XMC_LEDTS_ReadInterruptFlag
 480              	 .syntax unified
 481              	 .thumb
 482              	 .thumb_func
 483              	 .fpu fpv4-sp-d16
 485              	XMC_LEDTS_ReadInterruptFlag:
 486              	.LFB179:
 246:../Libraries/XMCLib/src/xmc_ledts.c **** 
 247:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 248:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 249:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 250:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 251:../Libraries/XMCLib/src/xmc_ledts.c **** {
 487              	 .loc 1 251 1
 488              	 .cfi_startproc
 489              	 
 490              	 
 491              	 
 492 0000 80B4     	 push {r7}
 493              	.LCFI35:
 494              	 .cfi_def_cfa_offset 4
 495              	 .cfi_offset 7,-4
 496 0002 83B0     	 sub sp,sp,#12
 497              	.LCFI36:
 498              	 .cfi_def_cfa_offset 16
 499 0004 00AF     	 add r7,sp,#0
 500              	.LCFI37:
 501              	 .cfi_def_cfa_register 7
 502 0006 7860     	 str r0,[r7,#4]
 252:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 253:../Libraries/XMCLib/src/xmc_ledts.c **** 
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 503              	 .loc 1 254 16
 504 0008 7B68     	 ldr r3,[r7,#4]
 505 000a DB68     	 ldr r3,[r3,#12]
 506              	 .loc 1 254 23
 507 000c 03F00F03 	 and r3,r3,#15
 255:../Libraries/XMCLib/src/xmc_ledts.c **** }
 508              	 .loc 1 255 1
 509 0010 1846     	 mov r0,r3
 510 0012 0C37     	 adds r7,r7,#12
 511              	.LCFI38:
 512              	 .cfi_def_cfa_offset 4
 513 0014 BD46     	 mov sp,r7
 514              	.LCFI39:
 515              	 .cfi_def_cfa_register 13
 516              	 
 517 0016 5DF8047B 	 ldr r7,[sp],#4
 518              	.LCFI40:
 519              	 .cfi_restore 7
 520              	 .cfi_def_cfa_offset 0
 521 001a 7047     	 bx lr
 522              	 .cfi_endproc
 523              	.LFE179:
 525              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 526              	 .align 1
 527              	 .global XMC_LEDTS_SetActivePADNo
 528              	 .syntax unified
 529              	 .thumb
 530              	 .thumb_func
 531              	 .fpu fpv4-sp-d16
 533              	XMC_LEDTS_SetActivePADNo:
 534              	.LFB180:
 256:../Libraries/XMCLib/src/xmc_ledts.c **** 
 257:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 260:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 261:../Libraries/XMCLib/src/xmc_ledts.c **** {
 535              	 .loc 1 261 1
 536              	 .cfi_startproc
 537              	 
 538              	 
 539              	 
 540 0000 80B4     	 push {r7}
 541              	.LCFI41:
 542              	 .cfi_def_cfa_offset 4
 543              	 .cfi_offset 7,-4
 544 0002 85B0     	 sub sp,sp,#20
 545              	.LCFI42:
 546              	 .cfi_def_cfa_offset 24
 547 0004 00AF     	 add r7,sp,#0
 548              	.LCFI43:
 549              	 .cfi_def_cfa_register 7
 550 0006 7860     	 str r0,[r7,#4]
 551 0008 0B46     	 mov r3,r1
 552 000a FB70     	 strb r3,[r7,#3]
 262:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 263:../Libraries/XMCLib/src/xmc_ledts.c **** 
 264:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 265:../Libraries/XMCLib/src/xmc_ledts.c **** 
 266:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 553              	 .loc 1 266 7
 554 000c 7B68     	 ldr r3,[r7,#4]
 555 000e 9B68     	 ldr r3,[r3,#8]
 556 0010 FB60     	 str r3,[r7,#12]
 267:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 557              	 .loc 1 267 7
 558 0012 FB68     	 ldr r3,[r7,#12]
 559 0014 23F00703 	 bic r3,r3,#7
 560 0018 FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 561              	 .loc 1 268 10
 562 001a FB78     	 ldrb r3,[r7,#3]
 563              	 .loc 1 268 7
 564 001c FA68     	 ldr r2,[r7,#12]
 565 001e 1343     	 orrs r3,r3,r2
 566 0020 FB60     	 str r3,[r7,#12]
 269:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 567              	 .loc 1 269 16
 568 0022 7B68     	 ldr r3,[r7,#4]
 569 0024 FA68     	 ldr r2,[r7,#12]
 570 0026 9A60     	 str r2,[r3,#8]
 270:../Libraries/XMCLib/src/xmc_ledts.c **** }
 571              	 .loc 1 270 1
 572 0028 00BF     	 nop
 573 002a 1437     	 adds r7,r7,#20
 574              	.LCFI44:
 575              	 .cfi_def_cfa_offset 4
 576 002c BD46     	 mov sp,r7
 577              	.LCFI45:
 578              	 .cfi_def_cfa_register 13
 579              	 
 580 002e 5DF8047B 	 ldr r7,[sp],#4
 581              	.LCFI46:
 582              	 .cfi_restore 7
 583              	 .cfi_def_cfa_offset 0
 584 0032 7047     	 bx lr
 585              	 .cfi_endproc
 586              	.LFE180:
 588              	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 589              	 .align 1
 590              	 .global XMC_LEDTS_ClearInterruptFlag
 591              	 .syntax unified
 592              	 .thumb
 593              	 .thumb_func
 594              	 .fpu fpv4-sp-d16
 596              	XMC_LEDTS_ClearInterruptFlag:
 597              	.LFB181:
 271:../Libraries/XMCLib/src/xmc_ledts.c **** 
 272:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 273:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 274:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 275:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 276:../Libraries/XMCLib/src/xmc_ledts.c **** {
 598              	 .loc 1 276 1
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	 
 603 0000 80B4     	 push {r7}
 604              	.LCFI47:
 605              	 .cfi_def_cfa_offset 4
 606              	 .cfi_offset 7,-4
 607 0002 83B0     	 sub sp,sp,#12
 608              	.LCFI48:
 609              	 .cfi_def_cfa_offset 16
 610 0004 00AF     	 add r7,sp,#0
 611              	.LCFI49:
 612              	 .cfi_def_cfa_register 7
 613 0006 7860     	 str r0,[r7,#4]
 614 0008 3960     	 str r1,[r7]
 277:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 278:../Libraries/XMCLib/src/xmc_ledts.c **** 
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 615              	 .loc 1 279 33
 616 000a 3B68     	 ldr r3,[r7]
 617 000c 1A04     	 lsls r2,r3,#16
 618              	 .loc 1 279 15
 619 000e 7B68     	 ldr r3,[r7,#4]
 620 0010 DA60     	 str r2,[r3,#12]
 280:../Libraries/XMCLib/src/xmc_ledts.c **** }
 621              	 .loc 1 280 1
 622 0012 00BF     	 nop
 623 0014 0C37     	 adds r7,r7,#12
 624              	.LCFI50:
 625              	 .cfi_def_cfa_offset 4
 626 0016 BD46     	 mov sp,r7
 627              	.LCFI51:
 628              	 .cfi_def_cfa_register 13
 629              	 
 630 0018 5DF8047B 	 ldr r7,[sp],#4
 631              	.LCFI52:
 632              	 .cfi_restore 7
 633              	 .cfi_def_cfa_offset 0
 634 001c 7047     	 bx lr
 635              	 .cfi_endproc
 636              	.LFE181:
 638              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 639              	 .align 1
 640              	 .global XMC_LEDTS_SetLEDLinePattern
 641              	 .syntax unified
 642              	 .thumb
 643              	 .thumb_func
 644              	 .fpu fpv4-sp-d16
 646              	XMC_LEDTS_SetLEDLinePattern:
 647              	.LFB182:
 281:../Libraries/XMCLib/src/xmc_ledts.c **** 
 282:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 284:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 285:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 286:../Libraries/XMCLib/src/xmc_ledts.c **** {
 648              	 .loc 1 286 1
 649              	 .cfi_startproc
 650              	 
 651              	 
 652              	 
 653 0000 80B4     	 push {r7}
 654              	.LCFI53:
 655              	 .cfi_def_cfa_offset 4
 656              	 .cfi_offset 7,-4
 657 0002 85B0     	 sub sp,sp,#20
 658              	.LCFI54:
 659              	 .cfi_def_cfa_offset 24
 660 0004 00AF     	 add r7,sp,#0
 661              	.LCFI55:
 662              	 .cfi_def_cfa_register 7
 663 0006 7860     	 str r0,[r7,#4]
 664 0008 0B46     	 mov r3,r1
 665 000a FB70     	 strb r3,[r7,#3]
 666 000c 1346     	 mov r3,r2
 667 000e BB70     	 strb r3,[r7,#2]
 287:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 288:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 668              	 .loc 1 288 11
 669 0010 FB78     	 ldrb r3,[r7,#3]
 670 0012 9B08     	 lsrs r3,r3,#2
 671 0014 FB73     	 strb r3,[r7,#15]
 289:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 672              	 .loc 1 289 11
 673 0016 FB78     	 ldrb r3,[r7,#3]
 674 0018 03F00303 	 and r3,r3,#3
 675 001c DBB2     	 uxtb r3,r3
 676 001e DB00     	 lsls r3,r3,#3
 677 0020 BB73     	 strb r3,[r7,#14]
 290:../Libraries/XMCLib/src/xmc_ledts.c **** 
 291:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 292:../Libraries/XMCLib/src/xmc_ledts.c **** 
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 678              	 .loc 1 293 20
 679 0022 FB7B     	 ldrb r3,[r7,#15]
 680              	 .loc 1 293 7
 681 0024 7A68     	 ldr r2,[r7,#4]
 682 0026 0433     	 adds r3,r3,#4
 683 0028 9B00     	 lsls r3,r3,#2
 684 002a 1344     	 add r3,r3,r2
 685 002c 5B68     	 ldr r3,[r3,#4]
 686 002e BB60     	 str r3,[r7,#8]
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 687              	 .loc 1 294 18
 688 0030 BB7B     	 ldrb r3,[r7,#14]
 689 0032 FF22     	 movs r2,#255
 690 0034 02FA03F3 	 lsl r3,r2,r3
 691              	 .loc 1 294 11
 692 0038 DB43     	 mvns r3,r3
 693 003a 1A46     	 mov r2,r3
 694              	 .loc 1 294 7
 695 003c BB68     	 ldr r3,[r7,#8]
 696 003e 1340     	 ands r3,r3,r2
 697 0040 BB60     	 str r3,[r7,#8]
 295:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 698              	 .loc 1 295 18
 699 0042 BA78     	 ldrb r2,[r7,#2]
 700 0044 BB7B     	 ldrb r3,[r7,#14]
 701 0046 02FA03F3 	 lsl r3,r2,r3
 702 004a 1A46     	 mov r2,r3
 703              	 .loc 1 295 7
 704 004c BB68     	 ldr r3,[r7,#8]
 705 004e 1343     	 orrs r3,r3,r2
 706 0050 BB60     	 str r3,[r7,#8]
 296:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 707              	 .loc 1 296 14
 708 0052 FB7B     	 ldrb r3,[r7,#15]
 709              	 .loc 1 296 26
 710 0054 7A68     	 ldr r2,[r7,#4]
 711 0056 0433     	 adds r3,r3,#4
 712 0058 9B00     	 lsls r3,r3,#2
 713 005a 1344     	 add r3,r3,r2
 714 005c BA68     	 ldr r2,[r7,#8]
 715 005e 5A60     	 str r2,[r3,#4]
 297:../Libraries/XMCLib/src/xmc_ledts.c **** 
 298:../Libraries/XMCLib/src/xmc_ledts.c **** }
 716              	 .loc 1 298 1
 717 0060 00BF     	 nop
 718 0062 1437     	 adds r7,r7,#20
 719              	.LCFI56:
 720              	 .cfi_def_cfa_offset 4
 721 0064 BD46     	 mov sp,r7
 722              	.LCFI57:
 723              	 .cfi_def_cfa_register 13
 724              	 
 725 0066 5DF8047B 	 ldr r7,[sp],#4
 726              	.LCFI58:
 727              	 .cfi_restore 7
 728              	 .cfi_def_cfa_offset 0
 729 006a 7047     	 bx lr
 730              	 .cfi_endproc
 731              	.LFE182:
 733              	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 734              	 .align 1
 735              	 .global XMC_LEDTS_SetColumnBrightness
 736              	 .syntax unified
 737              	 .thumb
 738              	 .thumb_func
 739              	 .fpu fpv4-sp-d16
 741              	XMC_LEDTS_SetColumnBrightness:
 742              	.LFB183:
 299:../Libraries/XMCLib/src/xmc_ledts.c **** 
 300:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 301:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 302:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 303:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 304:../Libraries/XMCLib/src/xmc_ledts.c **** {
 743              	 .loc 1 304 1
 744              	 .cfi_startproc
 745              	 
 746              	 
 747              	 
 748 0000 80B4     	 push {r7}
 749              	.LCFI59:
 750              	 .cfi_def_cfa_offset 4
 751              	 .cfi_offset 7,-4
 752 0002 85B0     	 sub sp,sp,#20
 753              	.LCFI60:
 754              	 .cfi_def_cfa_offset 24
 755 0004 00AF     	 add r7,sp,#0
 756              	.LCFI61:
 757              	 .cfi_def_cfa_register 7
 758 0006 7860     	 str r0,[r7,#4]
 759 0008 0B46     	 mov r3,r1
 760 000a FB70     	 strb r3,[r7,#3]
 761 000c 1346     	 mov r3,r2
 762 000e BB70     	 strb r3,[r7,#2]
 305:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 306:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 763              	 .loc 1 306 11
 764 0010 FB78     	 ldrb r3,[r7,#3]
 765 0012 9B08     	 lsrs r3,r3,#2
 766 0014 FB73     	 strb r3,[r7,#15]
 307:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 767              	 .loc 1 307 11
 768 0016 FB78     	 ldrb r3,[r7,#3]
 769 0018 03F00303 	 and r3,r3,#3
 770 001c DBB2     	 uxtb r3,r3
 771 001e DB00     	 lsls r3,r3,#3
 772 0020 BB73     	 strb r3,[r7,#14]
 308:../Libraries/XMCLib/src/xmc_ledts.c **** 
 309:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 310:../Libraries/XMCLib/src/xmc_ledts.c **** 
 311:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[reg_index];
 773              	 .loc 1 311 21
 774 0022 FB7B     	 ldrb r3,[r7,#15]
 775              	 .loc 1 311 7
 776 0024 7A68     	 ldr r2,[r7,#4]
 777 0026 0633     	 adds r3,r3,#6
 778 0028 9B00     	 lsls r3,r3,#2
 779 002a 1344     	 add r3,r3,r2
 780 002c 5B68     	 ldr r3,[r3,#4]
 781 002e BB60     	 str r3,[r7,#8]
 312:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 782              	 .loc 1 312 18
 783 0030 BB7B     	 ldrb r3,[r7,#14]
 784 0032 FF22     	 movs r2,#255
 785 0034 02FA03F3 	 lsl r3,r2,r3
 786              	 .loc 1 312 11
 787 0038 DB43     	 mvns r3,r3
 788 003a 1A46     	 mov r2,r3
 789              	 .loc 1 312 7
 790 003c BB68     	 ldr r3,[r7,#8]
 791 003e 1340     	 ands r3,r3,r2
 792 0040 BB60     	 str r3,[r7,#8]
 313:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= brightness << bit_shift_count;
 793              	 .loc 1 313 21
 794 0042 BA78     	 ldrb r2,[r7,#2]
 795 0044 BB7B     	 ldrb r3,[r7,#14]
 796 0046 02FA03F3 	 lsl r3,r2,r3
 797 004a 1A46     	 mov r2,r3
 798              	 .loc 1 313 7
 799 004c BB68     	 ldr r3,[r7,#8]
 800 004e 1343     	 orrs r3,r3,r2
 801 0050 BB60     	 str r3,[r7,#8]
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[reg_index] = reg;
 802              	 .loc 1 314 15
 803 0052 FB7B     	 ldrb r3,[r7,#15]
 804              	 .loc 1 314 27
 805 0054 7A68     	 ldr r2,[r7,#4]
 806 0056 0633     	 adds r3,r3,#6
 807 0058 9B00     	 lsls r3,r3,#2
 808 005a 1344     	 add r3,r3,r2
 809 005c BA68     	 ldr r2,[r7,#8]
 810 005e 5A60     	 str r2,[r3,#4]
 315:../Libraries/XMCLib/src/xmc_ledts.c **** }
 811              	 .loc 1 315 1
 812 0060 00BF     	 nop
 813 0062 1437     	 adds r7,r7,#20
 814              	.LCFI62:
 815              	 .cfi_def_cfa_offset 4
 816 0064 BD46     	 mov sp,r7
 817              	.LCFI63:
 818              	 .cfi_def_cfa_register 13
 819              	 
 820 0066 5DF8047B 	 ldr r7,[sp],#4
 821              	.LCFI64:
 822              	 .cfi_restore 7
 823              	 .cfi_def_cfa_offset 0
 824 006a 7047     	 bx lr
 825              	 .cfi_endproc
 826              	.LFE183:
 828              	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 829              	 .align 1
 830              	 .global XMC_LEDTS_SetCommonOscillationWindow
 831              	 .syntax unified
 832              	 .thumb
 833              	 .thumb_func
 834              	 .fpu fpv4-sp-d16
 836              	XMC_LEDTS_SetCommonOscillationWindow:
 837              	.LFB184:
 316:../Libraries/XMCLib/src/xmc_ledts.c **** 
 317:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 318:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 320:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 321:../Libraries/XMCLib/src/xmc_ledts.c **** {
 838              	 .loc 1 321 1
 839              	 .cfi_startproc
 840              	 
 841              	 
 842              	 
 843 0000 80B4     	 push {r7}
 844              	.LCFI65:
 845              	 .cfi_def_cfa_offset 4
 846              	 .cfi_offset 7,-4
 847 0002 85B0     	 sub sp,sp,#20
 848              	.LCFI66:
 849              	 .cfi_def_cfa_offset 24
 850 0004 00AF     	 add r7,sp,#0
 851              	.LCFI67:
 852              	 .cfi_def_cfa_register 7
 853 0006 7860     	 str r0,[r7,#4]
 854 0008 0B46     	 mov r3,r1
 855 000a FB70     	 strb r3,[r7,#3]
 322:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 323:../Libraries/XMCLib/src/xmc_ledts.c **** 
 324:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 325:../Libraries/XMCLib/src/xmc_ledts.c **** 
 326:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 856              	 .loc 1 326 7
 857 000c 7B68     	 ldr r3,[r7,#4]
 858 000e 1B6A     	 ldr r3,[r3,#32]
 859 0010 FB60     	 str r3,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 860              	 .loc 1 327 7
 861 0012 FB68     	 ldr r3,[r7,#12]
 862 0014 23F07F43 	 bic r3,r3,#-16777216
 863 0018 FB60     	 str r3,[r7,#12]
 328:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 864              	 .loc 1 328 23
 865 001a FB78     	 ldrb r3,[r7,#3]
 866 001c 1B06     	 lsls r3,r3,#24
 867 001e 1A46     	 mov r2,r3
 868              	 .loc 1 328 7
 869 0020 FB68     	 ldr r3,[r7,#12]
 870 0022 1343     	 orrs r3,r3,r2
 871 0024 FB60     	 str r3,[r7,#12]
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 872              	 .loc 1 329 19
 873 0026 7B68     	 ldr r3,[r7,#4]
 874 0028 FA68     	 ldr r2,[r7,#12]
 875 002a 1A62     	 str r2,[r3,#32]
 330:../Libraries/XMCLib/src/xmc_ledts.c **** }
 876              	 .loc 1 330 1
 877 002c 00BF     	 nop
 878 002e 1437     	 adds r7,r7,#20
 879              	.LCFI68:
 880              	 .cfi_def_cfa_offset 4
 881 0030 BD46     	 mov sp,r7
 882              	.LCFI69:
 883              	 .cfi_def_cfa_register 13
 884              	 
 885 0032 5DF8047B 	 ldr r7,[sp],#4
 886              	.LCFI70:
 887              	 .cfi_restore 7
 888              	 .cfi_def_cfa_offset 0
 889 0036 7047     	 bx lr
 890              	 .cfi_endproc
 891              	.LFE184:
 893              	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 894              	 .align 1
 895              	 .global XMC_LEDTS_ReadFNCOL
 896              	 .syntax unified
 897              	 .thumb
 898              	 .thumb_func
 899              	 .fpu fpv4-sp-d16
 901              	XMC_LEDTS_ReadFNCOL:
 902              	.LFB185:
 331:../Libraries/XMCLib/src/xmc_ledts.c **** 
 332:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 335:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 336:../Libraries/XMCLib/src/xmc_ledts.c **** {
 903              	 .loc 1 336 1
 904              	 .cfi_startproc
 905              	 
 906              	 
 907              	 
 908 0000 80B4     	 push {r7}
 909              	.LCFI71:
 910              	 .cfi_def_cfa_offset 4
 911              	 .cfi_offset 7,-4
 912 0002 85B0     	 sub sp,sp,#20
 913              	.LCFI72:
 914              	 .cfi_def_cfa_offset 24
 915 0004 00AF     	 add r7,sp,#0
 916              	.LCFI73:
 917              	 .cfi_def_cfa_register 7
 918 0006 7860     	 str r0,[r7,#4]
 337:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 338:../Libraries/XMCLib/src/xmc_ledts.c **** 
 339:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 340:../Libraries/XMCLib/src/xmc_ledts.c **** 
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 919              	 .loc 1 341 21
 920 0008 7B68     	 ldr r3,[r7,#4]
 921 000a 9B68     	 ldr r3,[r3,#8]
 922              	 .loc 1 341 14
 923 000c 03F0E003 	 and r3,r3,#224
 924 0010 FB60     	 str r3,[r7,#12]
 342:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 925              	 .loc 1 342 14
 926 0012 FB68     	 ldr r3,[r7,#12]
 927 0014 5B09     	 lsrs r3,r3,#5
 928 0016 FB60     	 str r3,[r7,#12]
 343:../Libraries/XMCLib/src/xmc_ledts.c **** 
 344:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 929              	 .loc 1 344 10
 930 0018 FB68     	 ldr r3,[r7,#12]
 345:../Libraries/XMCLib/src/xmc_ledts.c **** }
 931              	 .loc 1 345 1
 932 001a 1846     	 mov r0,r3
 933 001c 1437     	 adds r7,r7,#20
 934              	.LCFI74:
 935              	 .cfi_def_cfa_offset 4
 936 001e BD46     	 mov sp,r7
 937              	.LCFI75:
 938              	 .cfi_def_cfa_register 13
 939              	 
 940 0020 5DF8047B 	 ldr r7,[sp],#4
 941              	.LCFI76:
 942              	 .cfi_restore 7
 943              	 .cfi_def_cfa_offset 0
 944 0024 7047     	 bx lr
 945              	 .cfi_endproc
 946              	.LFE185:
 948              	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 949              	 .align 1
 950              	 .global XMC_LEDTS_SetNumOfLEDColumns
 951              	 .syntax unified
 952              	 .thumb
 953              	 .thumb_func
 954              	 .fpu fpv4-sp-d16
 956              	XMC_LEDTS_SetNumOfLEDColumns:
 957              	.LFB186:
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 349:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 350:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 351:../Libraries/XMCLib/src/xmc_ledts.c **** {
 958              	 .loc 1 351 1
 959              	 .cfi_startproc
 960              	 
 961              	 
 962              	 
 963 0000 80B4     	 push {r7}
 964              	.LCFI77:
 965              	 .cfi_def_cfa_offset 4
 966              	 .cfi_offset 7,-4
 967 0002 83B0     	 sub sp,sp,#12
 968              	.LCFI78:
 969              	 .cfi_def_cfa_offset 16
 970 0004 00AF     	 add r7,sp,#0
 971              	.LCFI79:
 972              	 .cfi_def_cfa_register 7
 973 0006 7860     	 str r0,[r7,#4]
 974 0008 0B46     	 mov r3,r1
 975 000a FB70     	 strb r3,[r7,#3]
 352:../Libraries/XMCLib/src/xmc_ledts.c **** 
 353:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 354:../Libraries/XMCLib/src/xmc_ledts.c **** 
 355:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 976              	 .loc 1 355 16
 977 000c 7B68     	 ldr r3,[r7,#4]
 978 000e 9B68     	 ldr r3,[r3,#8]
 979 0010 23F06042 	 bic r2,r3,#-536870912
 980 0014 7B68     	 ldr r3,[r7,#4]
 981 0016 9A60     	 str r2,[r3,#8]
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 982              	 .loc 1 356 16
 983 0018 7B68     	 ldr r3,[r7,#4]
 984 001a 9B68     	 ldr r3,[r3,#8]
 985              	 .loc 1 356 26
 986 001c FA78     	 ldrb r2,[r7,#3]
 987 001e 5207     	 lsls r2,r2,#29
 988              	 .loc 1 356 16
 989 0020 1A43     	 orrs r2,r2,r3
 990 0022 7B68     	 ldr r3,[r7,#4]
 991 0024 9A60     	 str r2,[r3,#8]
 357:../Libraries/XMCLib/src/xmc_ledts.c **** }
 992              	 .loc 1 357 1
 993 0026 00BF     	 nop
 994 0028 0C37     	 adds r7,r7,#12
 995              	.LCFI80:
 996              	 .cfi_def_cfa_offset 4
 997 002a BD46     	 mov sp,r7
 998              	.LCFI81:
 999              	 .cfi_def_cfa_register 13
 1000              	 
 1001 002c 5DF8047B 	 ldr r7,[sp],#4
 1002              	.LCFI82:
 1003              	 .cfi_restore 7
 1004              	 .cfi_def_cfa_offset 0
 1005 0030 7047     	 bx lr
 1006              	 .cfi_endproc
 1007              	.LFE186:
 1009              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 1010              	 .align 1
 1011              	 .global XMC_LEDTS_ReadTSVAL
 1012              	 .syntax unified
 1013              	 .thumb
 1014              	 .thumb_func
 1015              	 .fpu fpv4-sp-d16
 1017              	XMC_LEDTS_ReadTSVAL:
 1018              	.LFB187:
 358:../Libraries/XMCLib/src/xmc_ledts.c **** 
 359:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 360:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 361:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 362:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 363:../Libraries/XMCLib/src/xmc_ledts.c **** {
 1019              	 .loc 1 363 1
 1020              	 .cfi_startproc
 1021              	 
 1022              	 
 1023              	 
 1024 0000 80B4     	 push {r7}
 1025              	.LCFI83:
 1026              	 .cfi_def_cfa_offset 4
 1027              	 .cfi_offset 7,-4
 1028 0002 85B0     	 sub sp,sp,#20
 1029              	.LCFI84:
 1030              	 .cfi_def_cfa_offset 24
 1031 0004 00AF     	 add r7,sp,#0
 1032              	.LCFI85:
 1033              	 .cfi_def_cfa_register 7
 1034 0006 7860     	 str r0,[r7,#4]
 364:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 365:../Libraries/XMCLib/src/xmc_ledts.c **** 
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 367:../Libraries/XMCLib/src/xmc_ledts.c **** 
 368:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 1035              	 .loc 1 368 30
 1036 0008 7B68     	 ldr r3,[r7,#4]
 1037 000a 1B69     	 ldr r3,[r3,#16]
 1038              	 .loc 1 368 22
 1039 000c FB81     	 strh r3,[r7,#14]
 369:../Libraries/XMCLib/src/xmc_ledts.c **** 
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 1040              	 .loc 1 370 10
 1041 000e FB89     	 ldrh r3,[r7,#14]
 371:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1042              	 .loc 1 371 1
 1043 0010 1846     	 mov r0,r3
 1044 0012 1437     	 adds r7,r7,#20
 1045              	.LCFI86:
 1046              	 .cfi_def_cfa_offset 4
 1047 0014 BD46     	 mov sp,r7
 1048              	.LCFI87:
 1049              	 .cfi_def_cfa_register 13
 1050              	 
 1051 0016 5DF8047B 	 ldr r7,[sp],#4
 1052              	.LCFI88:
 1053              	 .cfi_restore 7
 1054              	 .cfi_def_cfa_offset 0
 1055 001a 7047     	 bx lr
 1056              	 .cfi_endproc
 1057              	.LFE187:
 1059              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 1060              	 .align 1
 1061              	 .global XMC_LEDTS_SetOscillationWindow
 1062              	 .syntax unified
 1063              	 .thumb
 1064              	 .thumb_func
 1065              	 .fpu fpv4-sp-d16
 1067              	XMC_LEDTS_SetOscillationWindow:
 1068              	.LFB188:
 372:../Libraries/XMCLib/src/xmc_ledts.c **** 
 373:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 374:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 375:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 376:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 377:../Libraries/XMCLib/src/xmc_ledts.c **** {
 1069              	 .loc 1 377 1
 1070              	 .cfi_startproc
 1071              	 
 1072              	 
 1073              	 
 1074 0000 80B4     	 push {r7}
 1075              	.LCFI89:
 1076              	 .cfi_def_cfa_offset 4
 1077              	 .cfi_offset 7,-4
 1078 0002 85B0     	 sub sp,sp,#20
 1079              	.LCFI90:
 1080              	 .cfi_def_cfa_offset 24
 1081 0004 00AF     	 add r7,sp,#0
 1082              	.LCFI91:
 1083              	 .cfi_def_cfa_register 7
 1084 0006 7860     	 str r0,[r7,#4]
 1085 0008 0B46     	 mov r3,r1
 1086 000a FB70     	 strb r3,[r7,#3]
 1087 000c 1346     	 mov r3,r2
 1088 000e BB70     	 strb r3,[r7,#2]
 378:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 379:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 1089              	 .loc 1 379 11
 1090 0010 FB78     	 ldrb r3,[r7,#3]
 1091 0012 9B08     	 lsrs r3,r3,#2
 1092 0014 FB73     	 strb r3,[r7,#15]
 380:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 1093              	 .loc 1 380 11
 1094 0016 FB78     	 ldrb r3,[r7,#3]
 1095 0018 03F00303 	 and r3,r3,#3
 1096 001c DBB2     	 uxtb r3,r3
 1097 001e DB00     	 lsls r3,r3,#3
 1098 0020 BB73     	 strb r3,[r7,#14]
 381:../Libraries/XMCLib/src/xmc_ledts.c **** 
 382:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 383:../Libraries/XMCLib/src/xmc_ledts.c **** 
 384:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->TSCMP[reg_index];
 1099              	 .loc 1 384 21
 1100 0022 FB7B     	 ldrb r3,[r7,#15]
 1101              	 .loc 1 384 7
 1102 0024 7A68     	 ldr r2,[r7,#4]
 1103 0026 0833     	 adds r3,r3,#8
 1104 0028 9B00     	 lsls r3,r3,#2
 1105 002a 1344     	 add r3,r3,r2
 1106 002c 5B68     	 ldr r3,[r3,#4]
 1107 002e BB60     	 str r3,[r7,#8]
 385:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 1108              	 .loc 1 385 18
 1109 0030 BB7B     	 ldrb r3,[r7,#14]
 1110 0032 FF22     	 movs r2,#255
 1111 0034 02FA03F3 	 lsl r3,r2,r3
 1112              	 .loc 1 385 11
 1113 0038 DB43     	 mvns r3,r3
 1114 003a 1A46     	 mov r2,r3
 1115              	 .loc 1 385 7
 1116 003c BB68     	 ldr r3,[r7,#8]
 1117 003e 1340     	 ands r3,r3,r2
 1118 0040 BB60     	 str r3,[r7,#8]
 386:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= size << bit_shift_count;
 1119              	 .loc 1 386 15
 1120 0042 BA78     	 ldrb r2,[r7,#2]
 1121 0044 BB7B     	 ldrb r3,[r7,#14]
 1122 0046 02FA03F3 	 lsl r3,r2,r3
 1123 004a 1A46     	 mov r2,r3
 1124              	 .loc 1 386 7
 1125 004c BB68     	 ldr r3,[r7,#8]
 1126 004e 1343     	 orrs r3,r3,r2
 1127 0050 BB60     	 str r3,[r7,#8]
 387:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->TSCMP[reg_index] = reg;
 1128              	 .loc 1 387 15
 1129 0052 FB7B     	 ldrb r3,[r7,#15]
 1130              	 .loc 1 387 27
 1131 0054 7A68     	 ldr r2,[r7,#4]
 1132 0056 0833     	 adds r3,r3,#8
 1133 0058 9B00     	 lsls r3,r3,#2
 1134 005a 1344     	 add r3,r3,r2
 1135 005c BA68     	 ldr r2,[r7,#8]
 1136 005e 5A60     	 str r2,[r3,#4]
 388:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1137              	 .loc 1 388 1
 1138 0060 00BF     	 nop
 1139 0062 1437     	 adds r7,r7,#20
 1140              	.LCFI92:
 1141              	 .cfi_def_cfa_offset 4
 1142 0064 BD46     	 mov sp,r7
 1143              	.LCFI93:
 1144              	 .cfi_def_cfa_register 13
 1145              	 
 1146 0066 5DF8047B 	 ldr r7,[sp],#4
 1147              	.LCFI94:
 1148              	 .cfi_restore 7
 1149              	 .cfi_def_cfa_offset 0
 1150 006a 7047     	 bx lr
 1151              	 .cfi_endproc
 1152              	.LFE188:
 1154              	 .text
 1155              	.Letext0:
 1156              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1157              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1158              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1159              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc4_scu.h"
 1160              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_ledts.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:17     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:92     .text.XMC_LEDTS_InitGlobal:00000040 $d
    {standard input}:98     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:105    .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:180    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:187    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:265    .text.XMC_LEDTS_InitTSBasic:00000054 $d
    {standard input}:270    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:277    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:369    .text.XMC_LEDTS_InitTSAdvanced:00000068 $d
    {standard input}:374    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:381    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:429    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:436    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:478    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:485    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:526    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:533    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:589    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:596    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:639    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:646    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:734    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:741    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:829    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:836    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:894    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:901    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:949    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:956    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:1010   .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:1017   .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:1060   .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:1067   .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
