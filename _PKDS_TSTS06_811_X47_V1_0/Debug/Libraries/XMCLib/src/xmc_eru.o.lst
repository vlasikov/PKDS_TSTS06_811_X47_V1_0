   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc_eru.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_ERU_ETL_Init,"ax",%progbits
  17              	 .align 1
  18              	 .global XMC_ERU_ETL_Init
  19              	 .arch armv7e-m
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	XMC_ERU_ETL_Init:
  26              	.LFB137:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_eru.c"
   1:../Libraries/XMCLib/src/xmc_eru.c **** /**
   2:../Libraries/XMCLib/src/xmc_eru.c ****  * @file xmc_eru.c
   3:../Libraries/XMCLib/src/xmc_eru.c ****  * @date 2016-03-10
   4:../Libraries/XMCLib/src/xmc_eru.c ****  *
   5:../Libraries/XMCLib/src/xmc_eru.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_eru.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_eru.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_eru.c ****  *
   9:../Libraries/XMCLib/src/xmc_eru.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_eru.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_eru.c ****  *
  12:../Libraries/XMCLib/src/xmc_eru.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_eru.c ****  *
  14:../Libraries/XMCLib/src/xmc_eru.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_eru.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_eru.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_eru.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_eru.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_eru.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_eru.c ****  *
  21:../Libraries/XMCLib/src/xmc_eru.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_eru.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_eru.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_eru.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_eru.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_eru.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_eru.c ****  *
  28:../Libraries/XMCLib/src/xmc_eru.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_eru.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_eru.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_eru.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_eru.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_eru.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_eru.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_eru.c ****  *
  36:../Libraries/XMCLib/src/xmc_eru.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_eru.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_eru.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_eru.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_eru.c ****  *
  41:../Libraries/XMCLib/src/xmc_eru.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_eru.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_eru.c ****  *
  44:../Libraries/XMCLib/src/xmc_eru.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_eru.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_eru.c ****  *
  47:../Libraries/XMCLib/src/xmc_eru.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_eru.c ****  *     - Removed definition of GetDriverVersion API <br>
  49:../Libraries/XMCLib/src/xmc_eru.c ****  *
  50:../Libraries/XMCLib/src/xmc_eru.c ****  * 2016-03-10:
  51:../Libraries/XMCLib/src/xmc_eru.c ****  *     - XMC_ERU_ETL_GetEdgeDetection() API is added to get the configured edge for event generatio
  52:../Libraries/XMCLib/src/xmc_eru.c ****  *
  53:../Libraries/XMCLib/src/xmc_eru.c ****  * @endcond
  54:../Libraries/XMCLib/src/xmc_eru.c ****  */
  55:../Libraries/XMCLib/src/xmc_eru.c **** 
  56:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
  57:../Libraries/XMCLib/src/xmc_eru.c ****  * HEADER FILES
  58:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  59:../Libraries/XMCLib/src/xmc_eru.c **** 
  60:../Libraries/XMCLib/src/xmc_eru.c **** #include "xmc_eru.h"
  61:../Libraries/XMCLib/src/xmc_eru.c **** 
  62:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
  63:../Libraries/XMCLib/src/xmc_eru.c ****  * MACROS
  64:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  65:../Libraries/XMCLib/src/xmc_eru.c **** 
  66:../Libraries/XMCLib/src/xmc_eru.c **** #define ERU_EXISEL_BITSIZE (4UL) /* Used to set the input for path A and path B based on the channe
  67:../Libraries/XMCLib/src/xmc_eru.c **** #define ERU_EXISEL_INPUT_BITSIZE (2UL)
  68:../Libraries/XMCLib/src/xmc_eru.c **** 
  69:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_A(input) \
  70:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_A0) || \
  71:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A1) || \
  72:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A2) || \
  73:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A3))
  74:../Libraries/XMCLib/src/xmc_eru.c **** 
  75:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_B(input) \
  76:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_B0) || \
  77:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B1) || \
  78:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B2) || \
  79:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B3))
  80:../Libraries/XMCLib/src/xmc_eru.c **** 
  81:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_STATUS_FLAG_MODE(mode) \
  82:../Libraries/XMCLib/src/xmc_eru.c ****     ((mode == XMC_ERU_ETL_STATUS_FLAG_MODE_SWCTRL) || \
  83:../Libraries/XMCLib/src/xmc_eru.c ****      (mode == XMC_ERU_ETL_STATUS_FLAG_MODE_HWCTRL))
  84:../Libraries/XMCLib/src/xmc_eru.c **** 
  85:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_EVENT_SOURCE(source) \
  86:../Libraries/XMCLib/src/xmc_eru.c ****     ((source == XMC_ERU_ETL_SOURCE_A)              || \
  87:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_B)              || \
  88:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_B)         || \
  89:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_B)        || \
  90:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A)          || \
  91:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_B)     || \
  92:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_B)    || \
  93:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_B)          || \
  94:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_NOT_B)     || \
  95:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_NOT_B)    || \
  96:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_NOT_B) || \
  97:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_NOT_B))
  98:../Libraries/XMCLib/src/xmc_eru.c **** 
  99:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_EDGE(edge) \
 100:../Libraries/XMCLib/src/xmc_eru.c ****     ((edge == XMC_ERU_ETL_EDGE_DETECTION_DISABLED) || \
 101:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_RISING) || \
 102:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_FALLING) || \
 103:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_BOTH))
 104:../Libraries/XMCLib/src/xmc_eru.c **** 
 105:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_CHANNEL(channel) \
 106:../Libraries/XMCLib/src/xmc_eru.c ****     ((channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL0) || \
 107:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL1) || \
 108:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL2) || \
 109:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL3))
 110:../Libraries/XMCLib/src/xmc_eru.c **** 
 111:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PATTERN_INPUT(input) \
 112:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT0) || \
 113:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT1) || \
 114:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT2) || \
 115:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT3))
 116:../Libraries/XMCLib/src/xmc_eru.c **** 
 117:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(trigger) \
 118:../Libraries/XMCLib/src/xmc_eru.c ****     ((trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER1) || \
 119:../Libraries/XMCLib/src/xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER2) || \
 120:../Libraries/XMCLib/src/xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER3))
 121:../Libraries/XMCLib/src/xmc_eru.c **** 
 122:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_SERIVCE_REQUEST(service) \
 123:../Libraries/XMCLib/src/xmc_eru.c ****     ((service == XMC_ERU_OGU_SERVICE_REQUEST_DISABLED) || \
 124:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER) || \
 125:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MATCH) || \
 126:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MISMATCH))
 127:../Libraries/XMCLib/src/xmc_eru.c **** 
 128:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
 129:../Libraries/XMCLib/src/xmc_eru.c ****  * API IMPLEMENTATION
 130:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
 131:../Libraries/XMCLib/src/xmc_eru.c **** /* Initializes the selected ERU_ETLx channel with the config structure.  */
 132:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_Init(XMC_ERU_t *const eru,
 133:../Libraries/XMCLib/src/xmc_eru.c ****                       const uint8_t channel,
 134:../Libraries/XMCLib/src/xmc_eru.c ****                       const XMC_ERU_ETL_CONFIG_t *const config)
 135:../Libraries/XMCLib/src/xmc_eru.c **** {
  28              	 .loc 1 135 1
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 84B0     	 sub sp,sp,#16
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 24
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 0B46     	 mov r3,r1
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c FB72     	 strb r3,[r7,#11]
 136:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 137:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Channel Number", (channel < 4U));
 138:../Libraries/XMCLib/src/xmc_eru.c **** 
 139:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ERU_Enable(eru);
  47              	 .loc 1 139 3
  48 000e F868     	 ldr r0,[r7,#12]
  49 0010 FFF7FEFF 	 bl XMC_ERU_Enable
 140:../Libraries/XMCLib/src/xmc_eru.c **** 
 141:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXISEL = (eru->EXISEL &
  50              	 .loc 1 141 21
  51 0014 FB68     	 ldr r3,[r7,#12]
  52 0016 1A68     	 ldr r2,[r3]
 142:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  53              	 .loc 1 142 88
  54 0018 FB7A     	 ldrb r3,[r7,#11]
  55 001a 9B00     	 lsls r3,r3,#2
  56              	 .loc 1 142 76
  57 001c 0F21     	 movs r1,#15
  58 001e 01FA03F3 	 lsl r3,r1,r3
  59              	 .loc 1 142 18
  60 0022 DB43     	 mvns r3,r3
 141:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  61              	 .loc 1 141 30
  62 0024 1A40     	 ands r2,r2,r3
 143:../Libraries/XMCLib/src/xmc_eru.c ****                 (config->input << (channel * (uint32_t)ERU_EXISEL_BITSIZE));
  63              	 .loc 1 143 24
  64 0026 7B68     	 ldr r3,[r7,#4]
  65 0028 1968     	 ldr r1,[r3]
  66              	 .loc 1 143 44
  67 002a FB7A     	 ldrb r3,[r7,#11]
  68 002c 9B00     	 lsls r3,r3,#2
  69              	 .loc 1 143 32
  70 002e 01FA03F3 	 lsl r3,r1,r3
 142:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  71              	 .loc 1 142 112
  72 0032 1A43     	 orrs r2,r2,r3
 141:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  73              	 .loc 1 141 15
  74 0034 FB68     	 ldr r3,[r7,#12]
  75 0036 1A60     	 str r2,[r3]
 144:../Libraries/XMCLib/src/xmc_eru.c **** 
 145:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON[channel] = config->raw;
  76              	 .loc 1 145 14
  77 0038 FA7A     	 ldrb r2,[r7,#11]
  78              	 .loc 1 145 32
  79 003a 7B68     	 ldr r3,[r7,#4]
  80 003c 5968     	 ldr r1,[r3,#4]
  81              	 .loc 1 145 24
  82 003e FB68     	 ldr r3,[r7,#12]
  83 0040 0432     	 adds r2,r2,#4
  84 0042 43F82210 	 str r1,[r3,r2,lsl#2]
 146:../Libraries/XMCLib/src/xmc_eru.c **** }
  85              	 .loc 1 146 1
  86 0046 00BF     	 nop
  87 0048 1037     	 adds r7,r7,#16
  88              	.LCFI3:
  89              	 .cfi_def_cfa_offset 8
  90 004a BD46     	 mov sp,r7
  91              	.LCFI4:
  92              	 .cfi_def_cfa_register 13
  93              	 
  94 004c 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE137:
  98              	 .section .text.XMC_ERU_OGU_Init,"ax",%progbits
  99              	 .align 1
 100              	 .global XMC_ERU_OGU_Init
 101              	 .syntax unified
 102              	 .thumb
 103              	 .thumb_func
 104              	 .fpu fpv4-sp-d16
 106              	XMC_ERU_OGU_Init:
 107              	.LFB138:
 147:../Libraries/XMCLib/src/xmc_eru.c **** 
 148:../Libraries/XMCLib/src/xmc_eru.c **** /* Initializes the selected ERU_OGUy channel with the config structure.  */
 149:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_Init(XMC_ERU_t *const eru,
 150:../Libraries/XMCLib/src/xmc_eru.c ****                       const uint8_t channel,
 151:../Libraries/XMCLib/src/xmc_eru.c ****                       const XMC_ERU_OGU_CONFIG_t *const config)
 152:../Libraries/XMCLib/src/xmc_eru.c **** {
 108              	 .loc 1 152 1
 109              	 .cfi_startproc
 110              	 
 111              	 
 112 0000 80B5     	 push {r7,lr}
 113              	.LCFI5:
 114              	 .cfi_def_cfa_offset 8
 115              	 .cfi_offset 7,-8
 116              	 .cfi_offset 14,-4
 117 0002 84B0     	 sub sp,sp,#16
 118              	.LCFI6:
 119              	 .cfi_def_cfa_offset 24
 120 0004 00AF     	 add r7,sp,#0
 121              	.LCFI7:
 122              	 .cfi_def_cfa_register 7
 123 0006 F860     	 str r0,[r7,#12]
 124 0008 0B46     	 mov r3,r1
 125 000a 7A60     	 str r2,[r7,#4]
 126 000c FB72     	 strb r3,[r7,#11]
 153:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 154:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Channel Number", (channel < 4U));
 155:../Libraries/XMCLib/src/xmc_eru.c **** 
 156:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ERU_Enable(eru);
 127              	 .loc 1 156 3
 128 000e F868     	 ldr r0,[r7,#12]
 129 0010 FFF7FEFF 	 bl XMC_ERU_Enable
 157:../Libraries/XMCLib/src/xmc_eru.c **** 
 158:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON[channel] = config->raw;
 130              	 .loc 1 158 14
 131 0014 FA7A     	 ldrb r2,[r7,#11]
 132              	 .loc 1 158 32
 133 0016 7B68     	 ldr r3,[r7,#4]
 134 0018 1968     	 ldr r1,[r3]
 135              	 .loc 1 158 24
 136 001a FB68     	 ldr r3,[r7,#12]
 137 001c 0832     	 adds r2,r2,#8
 138 001e 43F82210 	 str r1,[r3,r2,lsl#2]
 159:../Libraries/XMCLib/src/xmc_eru.c **** }
 139              	 .loc 1 159 1
 140 0022 00BF     	 nop
 141 0024 1037     	 adds r7,r7,#16
 142              	.LCFI8:
 143              	 .cfi_def_cfa_offset 8
 144 0026 BD46     	 mov sp,r7
 145              	.LCFI9:
 146              	 .cfi_def_cfa_register 13
 147              	 
 148 0028 80BD     	 pop {r7,pc}
 149              	 .cfi_endproc
 150              	.LFE138:
 152              	 .section .text.XMC_ERU_ETL_SetInput,"ax",%progbits
 153              	 .align 1
 154              	 .global XMC_ERU_ETL_SetInput
 155              	 .syntax unified
 156              	 .thumb
 157              	 .thumb_func
 158              	 .fpu fpv4-sp-d16
 160              	XMC_ERU_ETL_SetInput:
 161              	.LFB139:
 160:../Libraries/XMCLib/src/xmc_eru.c **** 
 161:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures the event source for path A and path B, with selected input_a and input_b respectivel
 162:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetInput(XMC_ERU_t *const eru,
 163:../Libraries/XMCLib/src/xmc_eru.c ****                           const uint8_t channel,
 164:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_A_t input_a,
 165:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_B_t input_b)
 166:../Libraries/XMCLib/src/xmc_eru.c **** {
 162              	 .loc 1 166 1
 163              	 .cfi_startproc
 164              	 
 165              	 
 166              	 
 167 0000 80B4     	 push {r7}
 168              	.LCFI10:
 169              	 .cfi_def_cfa_offset 4
 170              	 .cfi_offset 7,-4
 171 0002 83B0     	 sub sp,sp,#12
 172              	.LCFI11:
 173              	 .cfi_def_cfa_offset 16
 174 0004 00AF     	 add r7,sp,#0
 175              	.LCFI12:
 176              	 .cfi_def_cfa_register 7
 177 0006 7860     	 str r0,[r7,#4]
 178 0008 0846     	 mov r0,r1
 179 000a 1146     	 mov r1,r2
 180 000c 1A46     	 mov r2,r3
 181 000e 0346     	 mov r3,r0
 182 0010 FB70     	 strb r3,[r7,#3]
 183 0012 0B46     	 mov r3,r1
 184 0014 BB70     	 strb r3,[r7,#2]
 185 0016 1346     	 mov r3,r2
 186 0018 7B70     	 strb r3,[r7,#1]
 167:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 168:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Channel Number", (channel < 4U));
 169:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid A", XMC_ERU_ETL_CHECK_INPUT_A(input_a));
 170:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid B", XMC_ERU_ETL_CHECK_INPUT_B(input_b));
 171:../Libraries/XMCLib/src/xmc_eru.c **** 
 172:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channe
 187              	 .loc 1 172 21
 188 001a 7B68     	 ldr r3,[r7,#4]
 189 001c 1A68     	 ldr r2,[r3]
 190              	 .loc 1 172 102
 191 001e FB78     	 ldrb r3,[r7,#3]
 192 0020 9B00     	 lsls r3,r3,#2
 193              	 .loc 1 172 90
 194 0022 0F21     	 movs r1,#15
 195 0024 01FA03F3 	 lsl r3,r1,r3
 196              	 .loc 1 172 32
 197 0028 DB43     	 mvns r3,r3
 198              	 .loc 1 172 30
 199 002a 1A40     	 ands r2,r2,r3
 173:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 200              	 .loc 1 173 19
 201 002c BB78     	 ldrb r3,[r7,#2]
 202              	 .loc 1 173 58
 203 002e 7978     	 ldrb r1,[r7,#1]
 204 0030 8900     	 lsls r1,r1,#2
 205              	 .loc 1 173 37
 206 0032 1943     	 orrs r1,r1,r3
 207              	 .loc 1 173 101
 208 0034 FB78     	 ldrb r3,[r7,#3]
 209 0036 9B00     	 lsls r3,r3,#2
 210              	 .loc 1 173 89
 211 0038 01FA03F3 	 lsl r3,r1,r3
 172:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 212              	 .loc 1 172 126
 213 003c 1A43     	 orrs r2,r2,r3
 172:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 214              	 .loc 1 172 15
 215 003e 7B68     	 ldr r3,[r7,#4]
 216 0040 1A60     	 str r2,[r3]
 174:../Libraries/XMCLib/src/xmc_eru.c **** }
 217              	 .loc 1 174 1
 218 0042 00BF     	 nop
 219 0044 0C37     	 adds r7,r7,#12
 220              	.LCFI13:
 221              	 .cfi_def_cfa_offset 4
 222 0046 BD46     	 mov sp,r7
 223              	.LCFI14:
 224              	 .cfi_def_cfa_register 13
 225              	 
 226 0048 5DF8047B 	 ldr r7,[sp],#4
 227              	.LCFI15:
 228              	 .cfi_restore 7
 229              	 .cfi_def_cfa_offset 0
 230 004c 7047     	 bx lr
 231              	 .cfi_endproc
 232              	.LFE139:
 234              	 .section .text.XMC_ERU_ETL_SetSource,"ax",%progbits
 235              	 .align 1
 236              	 .global XMC_ERU_ETL_SetSource
 237              	 .syntax unified
 238              	 .thumb
 239              	 .thumb_func
 240              	 .fpu fpv4-sp-d16
 242              	XMC_ERU_ETL_SetSource:
 243              	.LFB140:
 175:../Libraries/XMCLib/src/xmc_eru.c **** 
 176:../Libraries/XMCLib/src/xmc_eru.c **** /* Select input path combination along with polarity for event generation by setting (SS, NA, NB) b
 177:../Libraries/XMCLib/src/xmc_eru.c ****    EXICONx(x = [0 to 3]) register */
 178:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetSource(XMC_ERU_t *const eru,
 179:../Libraries/XMCLib/src/xmc_eru.c ****                            const uint8_t channel,
 180:../Libraries/XMCLib/src/xmc_eru.c ****                            const XMC_ERU_ETL_SOURCE_t source)
 181:../Libraries/XMCLib/src/xmc_eru.c **** {
 244              	 .loc 1 181 1
 245              	 .cfi_startproc
 246              	 
 247              	 
 248              	 
 249 0000 80B4     	 push {r7}
 250              	.LCFI16:
 251              	 .cfi_def_cfa_offset 4
 252              	 .cfi_offset 7,-4
 253 0002 83B0     	 sub sp,sp,#12
 254              	.LCFI17:
 255              	 .cfi_def_cfa_offset 16
 256 0004 00AF     	 add r7,sp,#0
 257              	.LCFI18:
 258              	 .cfi_def_cfa_register 7
 259 0006 7860     	 str r0,[r7,#4]
 260 0008 0B46     	 mov r3,r1
 261 000a FB70     	 strb r3,[r7,#3]
 262 000c 1346     	 mov r3,r2
 263 000e BB70     	 strb r3,[r7,#2]
 182:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 183:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Channel Number", (channel < 4U));
 184:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Source", XMC_ERU_ETL_CHECK_EVENT_SOURCE(source));
 185:../Libraries/XMCLib/src/xmc_eru.c **** 
 186:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].SS = (uint8_t)source;
 264              	 .loc 1 186 25
 265 0010 FB78     	 ldrb r3,[r7,#3]
 266              	 .loc 1 186 31
 267 0012 BA78     	 ldrb r2,[r7,#2]
 268 0014 02F00F02 	 and r2,r2,#15
 269 0018 D0B2     	 uxtb r0,r2
 270              	 .loc 1 186 29
 271 001a 7A68     	 ldr r2,[r7,#4]
 272 001c 191D     	 adds r1,r3,#4
 273 001e 52F82130 	 ldr r3,[r2,r1,lsl#2]
 274 0022 60F30B23 	 bfi r3,r0,#8,#4
 275 0026 42F82130 	 str r3,[r2,r1,lsl#2]
 187:../Libraries/XMCLib/src/xmc_eru.c **** }
 276              	 .loc 1 187 1
 277 002a 00BF     	 nop
 278 002c 0C37     	 adds r7,r7,#12
 279              	.LCFI19:
 280              	 .cfi_def_cfa_offset 4
 281 002e BD46     	 mov sp,r7
 282              	.LCFI20:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0030 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI21:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0034 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE140:
 293              	 .section .text.XMC_ERU_ETL_SetEdgeDetection,"ax",%progbits
 294              	 .align 1
 295              	 .global XMC_ERU_ETL_SetEdgeDetection
 296              	 .syntax unified
 297              	 .thumb
 298              	 .thumb_func
 299              	 .fpu fpv4-sp-d16
 301              	XMC_ERU_ETL_SetEdgeDetection:
 302              	.LFB141:
 188:../Libraries/XMCLib/src/xmc_eru.c **** 
 189:../Libraries/XMCLib/src/xmc_eru.c **** /* Configure event trigger edge/s by setting (RE, FE) bits of EXICONx(x = [0 to 3]) register.*/
 190:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetEdgeDetection(XMC_ERU_t *const eru,
 191:../Libraries/XMCLib/src/xmc_eru.c ****                                   const uint8_t channel,
 192:../Libraries/XMCLib/src/xmc_eru.c ****                                   const XMC_ERU_ETL_EDGE_DETECTION_t edge_detection)
 193:../Libraries/XMCLib/src/xmc_eru.c **** {
 303              	 .loc 1 193 1
 304              	 .cfi_startproc
 305              	 
 306              	 
 307              	 
 308 0000 80B4     	 push {r7}
 309              	.LCFI22:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 7,-4
 312 0002 83B0     	 sub sp,sp,#12
 313              	.LCFI23:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI24:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 319 0008 0B46     	 mov r3,r1
 320 000a FB70     	 strb r3,[r7,#3]
 321 000c 1346     	 mov r3,r2
 322 000e BB70     	 strb r3,[r7,#2]
 194:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 195:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Channel Number", (channel < 4U));
 196:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Trigger Edge", XMC_ERU_ETL_CHECK_TRIGGER_EDGE(ed
 197:../Libraries/XMCLib/src/xmc_eru.c **** 
 198:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].ED = (uint8_t)edge_detection;
 323              	 .loc 1 198 25
 324 0010 FB78     	 ldrb r3,[r7,#3]
 325              	 .loc 1 198 31
 326 0012 BA78     	 ldrb r2,[r7,#2]
 327 0014 02F00302 	 and r2,r2,#3
 328 0018 D0B2     	 uxtb r0,r2
 329              	 .loc 1 198 29
 330 001a 7A68     	 ldr r2,[r7,#4]
 331 001c 191D     	 adds r1,r3,#4
 332 001e 52F82130 	 ldr r3,[r2,r1,lsl#2]
 333 0022 60F38303 	 bfi r3,r0,#2,#2
 334 0026 42F82130 	 str r3,[r2,r1,lsl#2]
 199:../Libraries/XMCLib/src/xmc_eru.c **** }
 335              	 .loc 1 199 1
 336 002a 00BF     	 nop
 337 002c 0C37     	 adds r7,r7,#12
 338              	.LCFI25:
 339              	 .cfi_def_cfa_offset 4
 340 002e BD46     	 mov sp,r7
 341              	.LCFI26:
 342              	 .cfi_def_cfa_register 13
 343              	 
 344 0030 5DF8047B 	 ldr r7,[sp],#4
 345              	.LCFI27:
 346              	 .cfi_restore 7
 347              	 .cfi_def_cfa_offset 0
 348 0034 7047     	 bx lr
 349              	 .cfi_endproc
 350              	.LFE141:
 352              	 .section .text.XMC_ERU_ETL_GetEdgeDetection,"ax",%progbits
 353              	 .align 1
 354              	 .global XMC_ERU_ETL_GetEdgeDetection
 355              	 .syntax unified
 356              	 .thumb
 357              	 .thumb_func
 358              	 .fpu fpv4-sp-d16
 360              	XMC_ERU_ETL_GetEdgeDetection:
 361              	.LFB142:
 200:../Libraries/XMCLib/src/xmc_eru.c **** 
 201:../Libraries/XMCLib/src/xmc_eru.c **** /* Returns the configured event trigger edge/s by reading (RE, FE) bits of EXICONx(x = [0 to 3]) re
 202:../Libraries/XMCLib/src/xmc_eru.c **** XMC_ERU_ETL_EDGE_DETECTION_t XMC_ERU_ETL_GetEdgeDetection(XMC_ERU_t *const eru, const uint8_t chann
 203:../Libraries/XMCLib/src/xmc_eru.c **** {
 362              	 .loc 1 203 1
 363              	 .cfi_startproc
 364              	 
 365              	 
 366              	 
 367 0000 80B4     	 push {r7}
 368              	.LCFI28:
 369              	 .cfi_def_cfa_offset 4
 370              	 .cfi_offset 7,-4
 371 0002 83B0     	 sub sp,sp,#12
 372              	.LCFI29:
 373              	 .cfi_def_cfa_offset 16
 374 0004 00AF     	 add r7,sp,#0
 375              	.LCFI30:
 376              	 .cfi_def_cfa_register 7
 377 0006 7860     	 str r0,[r7,#4]
 378 0008 0B46     	 mov r3,r1
 379 000a FB70     	 strb r3,[r7,#3]
 204:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_GetEdgeDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 205:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_GetEdgeDetection:Invalid Channel Number", (channel < 4U));
 206:../Libraries/XMCLib/src/xmc_eru.c ****   return ((XMC_ERU_ETL_EDGE_DETECTION_t)(eru->EXICON_b[channel].ED));
 380              	 .loc 1 206 64
 381 000c FA78     	 ldrb r2,[r7,#3]
 382 000e 7B68     	 ldr r3,[r7,#4]
 383 0010 0432     	 adds r2,r2,#4
 384 0012 53F82230 	 ldr r3,[r3,r2,lsl#2]
 385 0016 C3F38103 	 ubfx r3,r3,#2,#2
 386 001a DBB2     	 uxtb r3,r3
 207:../Libraries/XMCLib/src/xmc_eru.c **** }
 387              	 .loc 1 207 1
 388 001c 1846     	 mov r0,r3
 389 001e 0C37     	 adds r7,r7,#12
 390              	.LCFI31:
 391              	 .cfi_def_cfa_offset 4
 392 0020 BD46     	 mov sp,r7
 393              	.LCFI32:
 394              	 .cfi_def_cfa_register 13
 395              	 
 396 0022 5DF8047B 	 ldr r7,[sp],#4
 397              	.LCFI33:
 398              	 .cfi_restore 7
 399              	 .cfi_def_cfa_offset 0
 400 0026 7047     	 bx lr
 401              	 .cfi_endproc
 402              	.LFE142:
 404              	 .section .text.XMC_ERU_ETL_SetStatusFlagMode,"ax",%progbits
 405              	 .align 1
 406              	 .global XMC_ERU_ETL_SetStatusFlagMode
 407              	 .syntax unified
 408              	 .thumb
 409              	 .thumb_func
 410              	 .fpu fpv4-sp-d16
 412              	XMC_ERU_ETL_SetStatusFlagMode:
 413              	.LFB143:
 208:../Libraries/XMCLib/src/xmc_eru.c **** 
 209:../Libraries/XMCLib/src/xmc_eru.c **** /* Set the status flag bit(FL) in EXICONx(x = [0 to 3]). */
 210:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetStatusFlagMode(XMC_ERU_t *const eru,
 211:../Libraries/XMCLib/src/xmc_eru.c ****                                    const uint8_t channel,
 212:../Libraries/XMCLib/src/xmc_eru.c ****                                    const XMC_ERU_ETL_STATUS_FLAG_MODE_t mode)
 213:../Libraries/XMCLib/src/xmc_eru.c **** {
 414              	 .loc 1 213 1
 415              	 .cfi_startproc
 416              	 
 417              	 
 418              	 
 419 0000 80B4     	 push {r7}
 420              	.LCFI34:
 421              	 .cfi_def_cfa_offset 4
 422              	 .cfi_offset 7,-4
 423 0002 83B0     	 sub sp,sp,#12
 424              	.LCFI35:
 425              	 .cfi_def_cfa_offset 16
 426 0004 00AF     	 add r7,sp,#0
 427              	.LCFI36:
 428              	 .cfi_def_cfa_register 7
 429 0006 7860     	 str r0,[r7,#4]
 430 0008 0B46     	 mov r3,r1
 431 000a FB70     	 strb r3,[r7,#3]
 432 000c 1346     	 mov r3,r2
 433 000e BB70     	 strb r3,[r7,#2]
 214:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru))
 215:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Channel Number", (channel < 4U));
 216:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Status Flag Mode", XMC_ERU_ETL_CHECK_STATUS_FLA
 217:../Libraries/XMCLib/src/xmc_eru.c **** 
 218:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].LD = (uint8_t)mode;
 434              	 .loc 1 218 25
 435 0010 FB78     	 ldrb r3,[r7,#3]
 436              	 .loc 1 218 31
 437 0012 BA78     	 ldrb r2,[r7,#2]
 438 0014 02F00102 	 and r2,r2,#1
 439 0018 D0B2     	 uxtb r0,r2
 440              	 .loc 1 218 29
 441 001a 7A68     	 ldr r2,[r7,#4]
 442 001c 191D     	 adds r1,r3,#4
 443 001e 52F82130 	 ldr r3,[r2,r1,lsl#2]
 444 0022 60F34103 	 bfi r3,r0,#1,#1
 445 0026 42F82130 	 str r3,[r2,r1,lsl#2]
 219:../Libraries/XMCLib/src/xmc_eru.c **** }
 446              	 .loc 1 219 1
 447 002a 00BF     	 nop
 448 002c 0C37     	 adds r7,r7,#12
 449              	.LCFI37:
 450              	 .cfi_def_cfa_offset 4
 451 002e BD46     	 mov sp,r7
 452              	.LCFI38:
 453              	 .cfi_def_cfa_register 13
 454              	 
 455 0030 5DF8047B 	 ldr r7,[sp],#4
 456              	.LCFI39:
 457              	 .cfi_restore 7
 458              	 .cfi_def_cfa_offset 0
 459 0034 7047     	 bx lr
 460              	 .cfi_endproc
 461              	.LFE143:
 463              	 .section .text.XMC_ERU_ETL_EnableOutputTrigger,"ax",%progbits
 464              	 .align 1
 465              	 .global XMC_ERU_ETL_EnableOutputTrigger
 466              	 .syntax unified
 467              	 .thumb
 468              	 .thumb_func
 469              	 .fpu fpv4-sp-d16
 471              	XMC_ERU_ETL_EnableOutputTrigger:
 472              	.LFB144:
 220:../Libraries/XMCLib/src/xmc_eru.c **** 
 221:../Libraries/XMCLib/src/xmc_eru.c **** /* Configure which Channel of OGUy(Output gating unit y = [0 to 3]) to be mapped by the trigger pul
 222:../Libraries/XMCLib/src/xmc_eru.c ****  * ETLx(Event Trigger Logic, x = [0 to 3]) by setting (OCS and PE) bit fields. */
 223:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_EnableOutputTrigger(XMC_ERU_t *const eru,
 224:../Libraries/XMCLib/src/xmc_eru.c ****                                      const uint8_t channel,
 225:../Libraries/XMCLib/src/xmc_eru.c ****                                      const XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL_t trigger)
 226:../Libraries/XMCLib/src/xmc_eru.c **** {
 473              	 .loc 1 226 1
 474              	 .cfi_startproc
 475              	 
 476              	 
 477              	 
 478 0000 80B4     	 push {r7}
 479              	.LCFI40:
 480              	 .cfi_def_cfa_offset 4
 481              	 .cfi_offset 7,-4
 482 0002 83B0     	 sub sp,sp,#12
 483              	.LCFI41:
 484              	 .cfi_def_cfa_offset 16
 485 0004 00AF     	 add r7,sp,#0
 486              	.LCFI42:
 487              	 .cfi_def_cfa_register 7
 488 0006 7860     	 str r0,[r7,#4]
 489 0008 0B46     	 mov r3,r1
 490 000a FB70     	 strb r3,[r7,#3]
 491 000c 1346     	 mov r3,r2
 492 000e BB70     	 strb r3,[r7,#2]
 227:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru
 228:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Channel Number", (channel < 4U));
 229:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Output Channel", XMC_ERU_ETL_CHECK_TRIGGER_CH
 230:../Libraries/XMCLib/src/xmc_eru.c **** 
 231:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].OCS = (uint8_t)trigger;
 493              	 .loc 1 231 25
 494 0010 FB78     	 ldrb r3,[r7,#3]
 495              	 .loc 1 231 32
 496 0012 BA78     	 ldrb r2,[r7,#2]
 497 0014 02F00702 	 and r2,r2,#7
 498 0018 D0B2     	 uxtb r0,r2
 499              	 .loc 1 231 30
 500 001a 7A68     	 ldr r2,[r7,#4]
 501 001c 191D     	 adds r1,r3,#4
 502 001e 52F82130 	 ldr r3,[r2,r1,lsl#2]
 503 0022 60F30613 	 bfi r3,r0,#4,#3
 504 0026 42F82130 	 str r3,[r2,r1,lsl#2]
 232:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].PE = (uint8_t)true;
 505              	 .loc 1 232 25
 506 002a FB78     	 ldrb r3,[r7,#3]
 507              	 .loc 1 232 29
 508 002c 7A68     	 ldr r2,[r7,#4]
 509 002e 191D     	 adds r1,r3,#4
 510 0030 52F82130 	 ldr r3,[r2,r1,lsl#2]
 511 0034 43F00103 	 orr r3,r3,#1
 512 0038 42F82130 	 str r3,[r2,r1,lsl#2]
 233:../Libraries/XMCLib/src/xmc_eru.c **** }
 513              	 .loc 1 233 1
 514 003c 00BF     	 nop
 515 003e 0C37     	 adds r7,r7,#12
 516              	.LCFI43:
 517              	 .cfi_def_cfa_offset 4
 518 0040 BD46     	 mov sp,r7
 519              	.LCFI44:
 520              	 .cfi_def_cfa_register 13
 521              	 
 522 0042 5DF8047B 	 ldr r7,[sp],#4
 523              	.LCFI45:
 524              	 .cfi_restore 7
 525              	 .cfi_def_cfa_offset 0
 526 0046 7047     	 bx lr
 527              	 .cfi_endproc
 528              	.LFE144:
 530              	 .section .text.XMC_ERU_ETL_DisableOutputTrigger,"ax",%progbits
 531              	 .align 1
 532              	 .global XMC_ERU_ETL_DisableOutputTrigger
 533              	 .syntax unified
 534              	 .thumb
 535              	 .thumb_func
 536              	 .fpu fpv4-sp-d16
 538              	XMC_ERU_ETL_DisableOutputTrigger:
 539              	.LFB145:
 234:../Libraries/XMCLib/src/xmc_eru.c **** 
 235:../Libraries/XMCLib/src/xmc_eru.c **** /* Disables the trigger pulse generation by clearing the (PE) of the EXICONx(x = [0 to 3]). */
 236:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_DisableOutputTrigger(XMC_ERU_t *const eru, const uint8_t channel)
 237:../Libraries/XMCLib/src/xmc_eru.c **** {
 540              	 .loc 1 237 1
 541              	 .cfi_startproc
 542              	 
 543              	 
 544              	 
 545 0000 80B4     	 push {r7}
 546              	.LCFI46:
 547              	 .cfi_def_cfa_offset 4
 548              	 .cfi_offset 7,-4
 549 0002 83B0     	 sub sp,sp,#12
 550              	.LCFI47:
 551              	 .cfi_def_cfa_offset 16
 552 0004 00AF     	 add r7,sp,#0
 553              	.LCFI48:
 554              	 .cfi_def_cfa_register 7
 555 0006 7860     	 str r0,[r7,#4]
 556 0008 0B46     	 mov r3,r1
 557 000a FB70     	 strb r3,[r7,#3]
 238:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(er
 239:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Channel Number", (channel < 4U));
 240:../Libraries/XMCLib/src/xmc_eru.c **** 
 241:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].PE = false;
 558              	 .loc 1 241 25
 559 000c FB78     	 ldrb r3,[r7,#3]
 560              	 .loc 1 241 29
 561 000e 7A68     	 ldr r2,[r7,#4]
 562 0010 191D     	 adds r1,r3,#4
 563 0012 52F82130 	 ldr r3,[r2,r1,lsl#2]
 564 0016 6FF30003 	 bfc r3,#0,#1
 565 001a 42F82130 	 str r3,[r2,r1,lsl#2]
 242:../Libraries/XMCLib/src/xmc_eru.c **** }
 566              	 .loc 1 242 1
 567 001e 00BF     	 nop
 568 0020 0C37     	 adds r7,r7,#12
 569              	.LCFI49:
 570              	 .cfi_def_cfa_offset 4
 571 0022 BD46     	 mov sp,r7
 572              	.LCFI50:
 573              	 .cfi_def_cfa_register 13
 574              	 
 575 0024 5DF8047B 	 ldr r7,[sp],#4
 576              	.LCFI51:
 577              	 .cfi_restore 7
 578              	 .cfi_def_cfa_offset 0
 579 0028 7047     	 bx lr
 580              	 .cfi_endproc
 581              	.LFE145:
 583              	 .section .text.XMC_ERU_OGU_EnablePatternDetection,"ax",%progbits
 584              	 .align 1
 585              	 .global XMC_ERU_OGU_EnablePatternDetection
 586              	 .syntax unified
 587              	 .thumb
 588              	 .thumb_func
 589              	 .fpu fpv4-sp-d16
 591              	XMC_ERU_OGU_EnablePatternDetection:
 592              	.LFB146:
 243:../Libraries/XMCLib/src/xmc_eru.c **** 
 244:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures ERU_ETLx(x = [0 to 3]) for pattern match detection by setting IPENx(x = [0 to 3) and 
 245:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_EnablePatternDetection(XMC_ERU_t *const eru,
 246:../Libraries/XMCLib/src/xmc_eru.c ****                                         const uint8_t channel,
 247:../Libraries/XMCLib/src/xmc_eru.c ****                                         const XMC_ERU_OGU_PATTERN_DETECTION_INPUT_t input)
 248:../Libraries/XMCLib/src/xmc_eru.c **** {
 593              	 .loc 1 248 1
 594              	 .cfi_startproc
 595              	 
 596              	 
 597              	 
 598 0000 80B4     	 push {r7}
 599              	.LCFI52:
 600              	 .cfi_def_cfa_offset 4
 601              	 .cfi_offset 7,-4
 602 0002 83B0     	 sub sp,sp,#12
 603              	.LCFI53:
 604              	 .cfi_def_cfa_offset 16
 605 0004 00AF     	 add r7,sp,#0
 606              	.LCFI54:
 607              	 .cfi_def_cfa_register 7
 608 0006 7860     	 str r0,[r7,#4]
 609 0008 0B46     	 mov r3,r1
 610 000a FB70     	 strb r3,[r7,#3]
 611 000c 1346     	 mov r3,r2
 612 000e BB70     	 strb r3,[r7,#2]
 249:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(
 250:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Channel Number", (channel < 4U));
 251:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Pattern input", XMC_ERU_OGU_CHECK_PATTERN_
 252:../Libraries/XMCLib/src/xmc_eru.c **** 
 253:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].IPEN = (uint8_t)input;
 613              	 .loc 1 253 25
 614 0010 FB78     	 ldrb r3,[r7,#3]
 615              	 .loc 1 253 33
 616 0012 BA78     	 ldrb r2,[r7,#2]
 617 0014 02F00F02 	 and r2,r2,#15
 618 0018 D0B2     	 uxtb r0,r2
 619              	 .loc 1 253 31
 620 001a 7A68     	 ldr r2,[r7,#4]
 621 001c 03F10801 	 add r1,r3,#8
 622 0020 52F82130 	 ldr r3,[r2,r1,lsl#2]
 623 0024 60F30F33 	 bfi r3,r0,#12,#4
 624 0028 42F82130 	 str r3,[r2,r1,lsl#2]
 254:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = true;
 625              	 .loc 1 254 25
 626 002c FB78     	 ldrb r3,[r7,#3]
 627              	 .loc 1 254 31
 628 002e 7A68     	 ldr r2,[r7,#4]
 629 0030 03F10801 	 add r1,r3,#8
 630 0034 52F82130 	 ldr r3,[r2,r1,lsl#2]
 631 0038 43F00403 	 orr r3,r3,#4
 632 003c 42F82130 	 str r3,[r2,r1,lsl#2]
 255:../Libraries/XMCLib/src/xmc_eru.c **** }
 633              	 .loc 1 255 1
 634 0040 00BF     	 nop
 635 0042 0C37     	 adds r7,r7,#12
 636              	.LCFI55:
 637              	 .cfi_def_cfa_offset 4
 638 0044 BD46     	 mov sp,r7
 639              	.LCFI56:
 640              	 .cfi_def_cfa_register 13
 641              	 
 642 0046 5DF8047B 	 ldr r7,[sp],#4
 643              	.LCFI57:
 644              	 .cfi_restore 7
 645              	 .cfi_def_cfa_offset 0
 646 004a 7047     	 bx lr
 647              	 .cfi_endproc
 648              	.LFE146:
 650              	 .section .text.XMC_ERU_OGU_DisablePatternDetection,"ax",%progbits
 651              	 .align 1
 652              	 .global XMC_ERU_OGU_DisablePatternDetection
 653              	 .syntax unified
 654              	 .thumb
 655              	 .thumb_func
 656              	 .fpu fpv4-sp-d16
 658              	XMC_ERU_OGU_DisablePatternDetection:
 659              	.LFB147:
 256:../Libraries/XMCLib/src/xmc_eru.c **** 
 257:../Libraries/XMCLib/src/xmc_eru.c **** /* Disable the pattern detection by clearing (GEEN) bit. */
 258:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_DisablePatternDetection(XMC_ERU_t *const eru, const uint8_t channel)
 259:../Libraries/XMCLib/src/xmc_eru.c **** {
 660              	 .loc 1 259 1
 661              	 .cfi_startproc
 662              	 
 663              	 
 664              	 
 665 0000 80B4     	 push {r7}
 666              	.LCFI58:
 667              	 .cfi_def_cfa_offset 4
 668              	 .cfi_offset 7,-4
 669 0002 83B0     	 sub sp,sp,#12
 670              	.LCFI59:
 671              	 .cfi_def_cfa_offset 16
 672 0004 00AF     	 add r7,sp,#0
 673              	.LCFI60:
 674              	 .cfi_def_cfa_register 7
 675 0006 7860     	 str r0,[r7,#4]
 676 0008 0B46     	 mov r3,r1
 677 000a FB70     	 strb r3,[r7,#3]
 260:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 261:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Channel Number", (channel < 4U));
 262:../Libraries/XMCLib/src/xmc_eru.c **** 
 263:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = false;
 678              	 .loc 1 263 25
 679 000c FB78     	 ldrb r3,[r7,#3]
 680              	 .loc 1 263 31
 681 000e 7A68     	 ldr r2,[r7,#4]
 682 0010 03F10801 	 add r1,r3,#8
 683 0014 52F82130 	 ldr r3,[r2,r1,lsl#2]
 684 0018 6FF38203 	 bfc r3,#2,#1
 685 001c 42F82130 	 str r3,[r2,r1,lsl#2]
 264:../Libraries/XMCLib/src/xmc_eru.c **** }
 686              	 .loc 1 264 1
 687 0020 00BF     	 nop
 688 0022 0C37     	 adds r7,r7,#12
 689              	.LCFI61:
 690              	 .cfi_def_cfa_offset 4
 691 0024 BD46     	 mov sp,r7
 692              	.LCFI62:
 693              	 .cfi_def_cfa_register 13
 694              	 
 695 0026 5DF8047B 	 ldr r7,[sp],#4
 696              	.LCFI63:
 697              	 .cfi_restore 7
 698              	 .cfi_def_cfa_offset 0
 699 002a 7047     	 bx lr
 700              	 .cfi_endproc
 701              	.LFE147:
 703              	 .section .text.XMC_ERU_OGU_EnablePeripheralTrigger,"ax",%progbits
 704              	 .align 1
 705              	 .global XMC_ERU_OGU_EnablePeripheralTrigger
 706              	 .syntax unified
 707              	 .thumb
 708              	 .thumb_func
 709              	 .fpu fpv4-sp-d16
 711              	XMC_ERU_OGU_EnablePeripheralTrigger:
 712              	.LFB148:
 265:../Libraries/XMCLib/src/xmc_eru.c **** 
 266:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures peripheral trigger input, by setting (ISS) bit. */
 267:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_EnablePeripheralTrigger(XMC_ERU_t *const eru,
 268:../Libraries/XMCLib/src/xmc_eru.c ****     const uint8_t channel,
 269:../Libraries/XMCLib/src/xmc_eru.c ****     const XMC_ERU_OGU_PERIPHERAL_TRIGGER_t peripheral_trigger)
 270:../Libraries/XMCLib/src/xmc_eru.c **** {
 713              	 .loc 1 270 1
 714              	 .cfi_startproc
 715              	 
 716              	 
 717              	 
 718 0000 80B4     	 push {r7}
 719              	.LCFI64:
 720              	 .cfi_def_cfa_offset 4
 721              	 .cfi_offset 7,-4
 722 0002 83B0     	 sub sp,sp,#12
 723              	.LCFI65:
 724              	 .cfi_def_cfa_offset 16
 725 0004 00AF     	 add r7,sp,#0
 726              	.LCFI66:
 727              	 .cfi_def_cfa_register 7
 728 0006 7860     	 str r0,[r7,#4]
 729 0008 0B46     	 mov r3,r1
 730 000a FB70     	 strb r3,[r7,#3]
 731 000c 1346     	 mov r3,r2
 732 000e BB70     	 strb r3,[r7,#2]
 271:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 272:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 273:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Peripheral Trigger Input",
 274:../Libraries/XMCLib/src/xmc_eru.c ****              XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(peripheral_trigger));
 275:../Libraries/XMCLib/src/xmc_eru.c **** 
 276:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)peripheral_trigger;
 733              	 .loc 1 276 25
 734 0010 FB78     	 ldrb r3,[r7,#3]
 735              	 .loc 1 276 32
 736 0012 BA78     	 ldrb r2,[r7,#2]
 737 0014 02F00302 	 and r2,r2,#3
 738 0018 D0B2     	 uxtb r0,r2
 739              	 .loc 1 276 30
 740 001a 7A68     	 ldr r2,[r7,#4]
 741 001c 03F10801 	 add r1,r3,#8
 742 0020 52F82130 	 ldr r3,[r2,r1,lsl#2]
 743 0024 60F30103 	 bfi r3,r0,#0,#2
 744 0028 42F82130 	 str r3,[r2,r1,lsl#2]
 277:../Libraries/XMCLib/src/xmc_eru.c **** }
 745              	 .loc 1 277 1
 746 002c 00BF     	 nop
 747 002e 0C37     	 adds r7,r7,#12
 748              	.LCFI67:
 749              	 .cfi_def_cfa_offset 4
 750 0030 BD46     	 mov sp,r7
 751              	.LCFI68:
 752              	 .cfi_def_cfa_register 13
 753              	 
 754 0032 5DF8047B 	 ldr r7,[sp],#4
 755              	.LCFI69:
 756              	 .cfi_restore 7
 757              	 .cfi_def_cfa_offset 0
 758 0036 7047     	 bx lr
 759              	 .cfi_endproc
 760              	.LFE148:
 762              	 .section .text.XMC_ERU_OGU_DisablePeripheralTrigger,"ax",%progbits
 763              	 .align 1
 764              	 .global XMC_ERU_OGU_DisablePeripheralTrigger
 765              	 .syntax unified
 766              	 .thumb
 767              	 .thumb_func
 768              	 .fpu fpv4-sp-d16
 770              	XMC_ERU_OGU_DisablePeripheralTrigger:
 771              	.LFB149:
 278:../Libraries/XMCLib/src/xmc_eru.c **** 
 279:../Libraries/XMCLib/src/xmc_eru.c **** /* Disables event generation based on peripheral trigger by clearing (ISS) bit. */
 280:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_DisablePeripheralTrigger(XMC_ERU_t *const eru,
 281:../Libraries/XMCLib/src/xmc_eru.c ****     const uint8_t channel)
 282:../Libraries/XMCLib/src/xmc_eru.c **** {
 772              	 .loc 1 282 1
 773              	 .cfi_startproc
 774              	 
 775              	 
 776              	 
 777 0000 80B4     	 push {r7}
 778              	.LCFI70:
 779              	 .cfi_def_cfa_offset 4
 780              	 .cfi_offset 7,-4
 781 0002 83B0     	 sub sp,sp,#12
 782              	.LCFI71:
 783              	 .cfi_def_cfa_offset 16
 784 0004 00AF     	 add r7,sp,#0
 785              	.LCFI72:
 786              	 .cfi_def_cfa_register 7
 787 0006 7860     	 str r0,[r7,#4]
 788 0008 0B46     	 mov r3,r1
 789 000a FB70     	 strb r3,[r7,#3]
 283:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PT
 284:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 285:../Libraries/XMCLib/src/xmc_eru.c **** 
 286:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)0;
 790              	 .loc 1 286 25
 791 000c FB78     	 ldrb r3,[r7,#3]
 792              	 .loc 1 286 30
 793 000e 7A68     	 ldr r2,[r7,#4]
 794 0010 03F10801 	 add r1,r3,#8
 795 0014 52F82130 	 ldr r3,[r2,r1,lsl#2]
 796 0018 6FF30103 	 bfc r3,#0,#2
 797 001c 42F82130 	 str r3,[r2,r1,lsl#2]
 287:../Libraries/XMCLib/src/xmc_eru.c **** }
 798              	 .loc 1 287 1
 799 0020 00BF     	 nop
 800 0022 0C37     	 adds r7,r7,#12
 801              	.LCFI73:
 802              	 .cfi_def_cfa_offset 4
 803 0024 BD46     	 mov sp,r7
 804              	.LCFI74:
 805              	 .cfi_def_cfa_register 13
 806              	 
 807 0026 5DF8047B 	 ldr r7,[sp],#4
 808              	.LCFI75:
 809              	 .cfi_restore 7
 810              	 .cfi_def_cfa_offset 0
 811 002a 7047     	 bx lr
 812              	 .cfi_endproc
 813              	.LFE149:
 815              	 .section .text.XMC_ERU_OGU_SetServiceRequestMode,"ax",%progbits
 816              	 .align 1
 817              	 .global XMC_ERU_OGU_SetServiceRequestMode
 818              	 .syntax unified
 819              	 .thumb
 820              	 .thumb_func
 821              	 .fpu fpv4-sp-d16
 823              	XMC_ERU_OGU_SetServiceRequestMode:
 824              	.LFB150:
 288:../Libraries/XMCLib/src/xmc_eru.c **** 
 289:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures the gating scheme for service request generation by setting (GP) bit. */
 290:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_SetServiceRequestMode(XMC_ERU_t *const eru,
 291:../Libraries/XMCLib/src/xmc_eru.c ****                                        const uint8_t channel,
 292:../Libraries/XMCLib/src/xmc_eru.c ****                                        const XMC_ERU_OGU_SERVICE_REQUEST_t mode)
 293:../Libraries/XMCLib/src/xmc_eru.c **** {
 825              	 .loc 1 293 1
 826              	 .cfi_startproc
 827              	 
 828              	 
 829              	 
 830 0000 80B4     	 push {r7}
 831              	.LCFI76:
 832              	 .cfi_def_cfa_offset 4
 833              	 .cfi_offset 7,-4
 834 0002 83B0     	 sub sp,sp,#12
 835              	.LCFI77:
 836              	 .cfi_def_cfa_offset 16
 837 0004 00AF     	 add r7,sp,#0
 838              	.LCFI78:
 839              	 .cfi_def_cfa_register 7
 840 0006 7860     	 str r0,[r7,#4]
 841 0008 0B46     	 mov r3,r1
 842 000a FB70     	 strb r3,[r7,#3]
 843 000c 1346     	 mov r3,r2
 844 000e BB70     	 strb r3,[r7,#2]
 294:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(e
 295:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Channel Number", (channel < 4U));
 296:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Service Request Mode", XMC_ERU_OGU_CHECK_SE
 297:../Libraries/XMCLib/src/xmc_eru.c **** 
 298:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GP = (uint8_t)mode;
 845              	 .loc 1 298 25
 846 0010 FB78     	 ldrb r3,[r7,#3]
 847              	 .loc 1 298 31
 848 0012 BA78     	 ldrb r2,[r7,#2]
 849 0014 02F00302 	 and r2,r2,#3
 850 0018 D0B2     	 uxtb r0,r2
 851              	 .loc 1 298 29
 852 001a 7A68     	 ldr r2,[r7,#4]
 853 001c 03F10801 	 add r1,r3,#8
 854 0020 52F82130 	 ldr r3,[r2,r1,lsl#2]
 855 0024 60F30513 	 bfi r3,r0,#4,#2
 856 0028 42F82130 	 str r3,[r2,r1,lsl#2]
 299:../Libraries/XMCLib/src/xmc_eru.c **** 
 300:../Libraries/XMCLib/src/xmc_eru.c **** }
 857              	 .loc 1 300 1
 858 002c 00BF     	 nop
 859 002e 0C37     	 adds r7,r7,#12
 860              	.LCFI79:
 861              	 .cfi_def_cfa_offset 4
 862 0030 BD46     	 mov sp,r7
 863              	.LCFI80:
 864              	 .cfi_def_cfa_register 13
 865              	 
 866 0032 5DF8047B 	 ldr r7,[sp],#4
 867              	.LCFI81:
 868              	 .cfi_restore 7
 869              	 .cfi_def_cfa_offset 0
 870 0036 7047     	 bx lr
 871              	 .cfi_endproc
 872              	.LFE150:
 874              	 .text
 875              	.Letext0:
 876              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 877              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 878              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_eru.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eru.c
    {standard input}:17     .text.XMC_ERU_ETL_Init:00000000 $t
    {standard input}:25     .text.XMC_ERU_ETL_Init:00000000 XMC_ERU_ETL_Init
    {standard input}:99     .text.XMC_ERU_OGU_Init:00000000 $t
    {standard input}:106    .text.XMC_ERU_OGU_Init:00000000 XMC_ERU_OGU_Init
    {standard input}:153    .text.XMC_ERU_ETL_SetInput:00000000 $t
    {standard input}:160    .text.XMC_ERU_ETL_SetInput:00000000 XMC_ERU_ETL_SetInput
    {standard input}:235    .text.XMC_ERU_ETL_SetSource:00000000 $t
    {standard input}:242    .text.XMC_ERU_ETL_SetSource:00000000 XMC_ERU_ETL_SetSource
    {standard input}:294    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 $t
    {standard input}:301    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 XMC_ERU_ETL_SetEdgeDetection
    {standard input}:353    .text.XMC_ERU_ETL_GetEdgeDetection:00000000 $t
    {standard input}:360    .text.XMC_ERU_ETL_GetEdgeDetection:00000000 XMC_ERU_ETL_GetEdgeDetection
    {standard input}:405    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 $t
    {standard input}:412    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 XMC_ERU_ETL_SetStatusFlagMode
    {standard input}:464    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 $t
    {standard input}:471    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 XMC_ERU_ETL_EnableOutputTrigger
    {standard input}:531    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 $t
    {standard input}:538    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 XMC_ERU_ETL_DisableOutputTrigger
    {standard input}:584    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 $t
    {standard input}:591    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 XMC_ERU_OGU_EnablePatternDetection
    {standard input}:651    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 $t
    {standard input}:658    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 XMC_ERU_OGU_DisablePatternDetection
    {standard input}:704    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 $t
    {standard input}:711    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 XMC_ERU_OGU_EnablePeripheralTrigger
    {standard input}:763    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 $t
    {standard input}:770    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 XMC_ERU_OGU_DisablePeripheralTrigger
    {standard input}:816    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 $t
    {standard input}:823    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 XMC_ERU_OGU_SetServiceRequestMode

UNDEFINED SYMBOLS
XMC_ERU_Enable
