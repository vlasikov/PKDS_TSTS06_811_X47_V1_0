   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc_rtc.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_SCU_GetMirrorStatus:
  25              	.LFB170:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2019-12-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * 2019-12-02:
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc_common.h"
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc1_scu.h"
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc4_scu.h"
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #else
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** }
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** }
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock.
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration.
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation.
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset.
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** }
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** }
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** }
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void);
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done.
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** 
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** /**
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  *
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****  */
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** {
  27              	 .loc 1 552 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h ****   return (SCU_GENERAL->MIRRSTS);
  39              	 .loc 1 553 22
  40 0004 034B     	 ldr r3,.L3
  41 0006 D3F8C430 	 ldr r3,[r3,#196]
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_scu.h **** }
  42              	 .loc 1 554 1
  43 000a 1846     	 mov r0,r3
  44 000c BD46     	 mov sp,r7
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 13
  47              	 
  48 000e 5DF8047B 	 ldr r7,[sp],#4
  49              	.LCFI3:
  50              	 .cfi_restore 7
  51              	 .cfi_def_cfa_offset 0
  52 0012 7047     	 bx lr
  53              	.L4:
  54              	 .align 2
  55              	.L3:
  56 0014 00400050 	 .word 1342193664
  57              	 .cfi_endproc
  58              	.LFE170:
  60              	 .section .text.XMC_RTC_Start,"ax",%progbits
  61              	 .align 1
  62              	 .global XMC_RTC_Start
  63              	 .syntax unified
  64              	 .thumb
  65              	 .thumb_func
  66              	 .fpu fpv4-sp-d16
  68              	XMC_RTC_Start:
  69              	.LFB173:
  70              	 .file 2 "../Libraries/XMCLib/src/xmc_rtc.c"
   1:../Libraries/XMCLib/src/xmc_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../Libraries/XMCLib/src/xmc_rtc.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_rtc.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_rtc.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_rtc.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  12:../Libraries/XMCLib/src/xmc_rtc.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  14:../Libraries/XMCLib/src/xmc_rtc.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_rtc.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_rtc.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_rtc.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_rtc.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_rtc.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  21:../Libraries/XMCLib/src/xmc_rtc.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_rtc.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_rtc.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_rtc.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_rtc.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_rtc.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  28:../Libraries/XMCLib/src/xmc_rtc.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_rtc.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_rtc.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_rtc.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_rtc.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_rtc.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_rtc.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_rtc.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_rtc.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_rtc.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  41:../Libraries/XMCLib/src/xmc_rtc.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_rtc.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  44:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  47:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  50:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2016-05-19:
  51:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Added XMC_RTC_SetTimeStdFormat() and XMC_RTC_SetAlarmStdFormat()
  52:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  53:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2018-06-21:
  54:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed value of XMC_RTC_MAXSECONDS, XMC_RTC_MAXMINUTES, XMC_RTC_MAXHOURS macros
  55:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed assertion on XMC_RTC_MAXDAYS
  56:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  57:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2019-05-07:
  58:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed compilation warnings
  59:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  60:../Libraries/XMCLib/src/xmc_rtc.c ****  * @endcond
  61:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  62:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  63:../Libraries/XMCLib/src/xmc_rtc.c **** 
  64:../Libraries/XMCLib/src/xmc_rtc.c **** /**
  65:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  66:../Libraries/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  67:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  68:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  69:../Libraries/XMCLib/src/xmc_rtc.c **** 
  70:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  72:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_rtc.c **** 
  74:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  75:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  76:../Libraries/XMCLib/src/xmc_rtc.c **** 
  77:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_rtc.c ****  * MACROS
  79:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_rtc.c **** 
  81:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (60U)   /**< RTC time : Maximum seconds */
  82:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (60U)   /**< RTC time : Maximum minutes */
  83:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (24U)   /**< RTC time : Maximum hours */
  84:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  85:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  86:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  87:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  88:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  89:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  90:../Libraries/XMCLib/src/xmc_rtc.c **** 
  91:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  92:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  93:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  94:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  95:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  96:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  97:../Libraries/XMCLib/src/xmc_rtc.c **** 
  98:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  99:../Libraries/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
 100:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
 101:../Libraries/XMCLib/src/xmc_rtc.c **** 
 102:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 103:../Libraries/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
 104:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 105:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
 106:../Libraries/XMCLib/src/xmc_rtc.c **** {
  71              	 .loc 2 106 1
  72              	 .cfi_startproc
  73              	 
  74              	 
  75 0000 80B5     	 push {r7,lr}
  76              	.LCFI4:
  77              	 .cfi_def_cfa_offset 8
  78              	 .cfi_offset 7,-8
  79              	 .cfi_offset 14,-4
  80 0002 00AF     	 add r7,sp,#0
  81              	.LCFI5:
  82              	 .cfi_def_cfa_register 7
 107:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  83              	 .loc 2 107 9
  84 0004 00BF     	 nop
  85              	.L6:
  86              	 .loc 2 107 11 discriminator 1
  87 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
  88 000a 0346     	 mov r3,r0
  89              	 .loc 2 107 37 discriminator 1
  90 000c 03F48073 	 and r3,r3,#256
  91              	 .loc 2 107 9 discriminator 1
  92 0010 002B     	 cmp r3,#0
  93 0012 F8D1     	 bne .L6
 108:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 109:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 110:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 111:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  94              	 .loc 2 111 12
  95 0014 034B     	 ldr r3,.L7
  96 0016 5B68     	 ldr r3,[r3,#4]
  97 0018 024A     	 ldr r2,.L7
  98 001a 43F00103 	 orr r3,r3,#1
  99 001e 5360     	 str r3,[r2,#4]
 112:../Libraries/XMCLib/src/xmc_rtc.c **** }
 100              	 .loc 2 112 1
 101 0020 00BF     	 nop
 102 0022 80BD     	 pop {r7,pc}
 103              	.L8:
 104              	 .align 2
 105              	.L7:
 106 0024 004A0050 	 .word 1342196224
 107              	 .cfi_endproc
 108              	.LFE173:
 110              	 .section .text.XMC_RTC_Stop,"ax",%progbits
 111              	 .align 1
 112              	 .global XMC_RTC_Stop
 113              	 .syntax unified
 114              	 .thumb
 115              	 .thumb_func
 116              	 .fpu fpv4-sp-d16
 118              	XMC_RTC_Stop:
 119              	.LFB174:
 113:../Libraries/XMCLib/src/xmc_rtc.c **** 
 114:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 115:../Libraries/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 116:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 117:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 118:../Libraries/XMCLib/src/xmc_rtc.c **** {
 120              	 .loc 2 118 1
 121              	 .cfi_startproc
 122              	 
 123              	 
 124 0000 80B5     	 push {r7,lr}
 125              	.LCFI6:
 126              	 .cfi_def_cfa_offset 8
 127              	 .cfi_offset 7,-8
 128              	 .cfi_offset 14,-4
 129 0002 00AF     	 add r7,sp,#0
 130              	.LCFI7:
 131              	 .cfi_def_cfa_register 7
 119:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 132              	 .loc 2 119 9
 133 0004 00BF     	 nop
 134              	.L10:
 135              	 .loc 2 119 11 discriminator 1
 136 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 137 000a 0346     	 mov r3,r0
 138              	 .loc 2 119 37 discriminator 1
 139 000c 03F48073 	 and r3,r3,#256
 140              	 .loc 2 119 9 discriminator 1
 141 0010 002B     	 cmp r3,#0
 142 0012 F8D1     	 bne .L10
 120:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 121:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 122:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 123:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
 143              	 .loc 2 123 12
 144 0014 034B     	 ldr r3,.L11
 145 0016 5B68     	 ldr r3,[r3,#4]
 146 0018 024A     	 ldr r2,.L11
 147 001a 23F00103 	 bic r3,r3,#1
 148 001e 5360     	 str r3,[r2,#4]
 124:../Libraries/XMCLib/src/xmc_rtc.c **** }
 149              	 .loc 2 124 1
 150 0020 00BF     	 nop
 151 0022 80BD     	 pop {r7,pc}
 152              	.L12:
 153              	 .align 2
 154              	.L11:
 155 0024 004A0050 	 .word 1342196224
 156              	 .cfi_endproc
 157              	.LFE174:
 159              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 160              	 .align 1
 161              	 .global XMC_RTC_SetPrescaler
 162              	 .syntax unified
 163              	 .thumb
 164              	 .thumb_func
 165              	 .fpu fpv4-sp-d16
 167              	XMC_RTC_SetPrescaler:
 168              	.LFB175:
 125:../Libraries/XMCLib/src/xmc_rtc.c **** 
 126:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 127:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 128:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 129:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 130:../Libraries/XMCLib/src/xmc_rtc.c **** {
 169              	 .loc 2 130 1
 170              	 .cfi_startproc
 171              	 
 172              	 
 173 0000 80B5     	 push {r7,lr}
 174              	.LCFI8:
 175              	 .cfi_def_cfa_offset 8
 176              	 .cfi_offset 7,-8
 177              	 .cfi_offset 14,-4
 178 0002 82B0     	 sub sp,sp,#8
 179              	.LCFI9:
 180              	 .cfi_def_cfa_offset 16
 181 0004 00AF     	 add r7,sp,#0
 182              	.LCFI10:
 183              	 .cfi_def_cfa_register 7
 184 0006 0346     	 mov r3,r0
 185 0008 FB80     	 strh r3,[r7,#6]
 131:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 132:../Libraries/XMCLib/src/xmc_rtc.c **** 
 133:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 186              	 .loc 2 133 9
 187 000a 00BF     	 nop
 188              	.L14:
 189              	 .loc 2 133 11 discriminator 1
 190 000c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 191 0010 0346     	 mov r3,r0
 192              	 .loc 2 133 37 discriminator 1
 193 0012 03F48073 	 and r3,r3,#256
 194              	 .loc 2 133 9 discriminator 1
 195 0016 002B     	 cmp r3,#0
 196 0018 F8D1     	 bne .L14
 134:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 135:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 136:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 137:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 197              	 .loc 2 137 18
 198 001a 064B     	 ldr r3,.L15
 199 001c 5B68     	 ldr r3,[r3,#4]
 200              	 .loc 2 137 24
 201 001e 9AB2     	 uxth r2,r3
 138:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 202              	 .loc 2 138 15
 203 0020 FB88     	 ldrh r3,[r7,#6]
 204              	 .loc 2 138 35
 205 0022 1B04     	 lsls r3,r3,#16
 137:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 206              	 .loc 2 137 6
 207 0024 0349     	 ldr r1,.L15
 137:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 208              	 .loc 2 137 54
 209 0026 1343     	 orrs r3,r3,r2
 137:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 210              	 .loc 2 137 12
 211 0028 4B60     	 str r3,[r1,#4]
 139:../Libraries/XMCLib/src/xmc_rtc.c **** }
 212              	 .loc 2 139 1
 213 002a 00BF     	 nop
 214 002c 0837     	 adds r7,r7,#8
 215              	.LCFI11:
 216              	 .cfi_def_cfa_offset 8
 217 002e BD46     	 mov sp,r7
 218              	.LCFI12:
 219              	 .cfi_def_cfa_register 13
 220              	 
 221 0030 80BD     	 pop {r7,pc}
 222              	.L16:
 223 0032 00BF     	 .align 2
 224              	.L15:
 225 0034 004A0050 	 .word 1342196224
 226              	 .cfi_endproc
 227              	.LFE175:
 229              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 230              	 .align 1
 231              	 .global XMC_RTC_SetTime
 232              	 .syntax unified
 233              	 .thumb
 234              	 .thumb_func
 235              	 .fpu fpv4-sp-d16
 237              	XMC_RTC_SetTime:
 238              	.LFB176:
 140:../Libraries/XMCLib/src/xmc_rtc.c **** 
 141:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 142:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 143:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 144:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 145:../Libraries/XMCLib/src/xmc_rtc.c **** {
 239              	 .loc 2 145 1
 240              	 .cfi_startproc
 241              	 
 242              	 
 243 0000 80B5     	 push {r7,lr}
 244              	.LCFI13:
 245              	 .cfi_def_cfa_offset 8
 246              	 .cfi_offset 7,-8
 247              	 .cfi_offset 14,-4
 248 0002 82B0     	 sub sp,sp,#8
 249              	.LCFI14:
 250              	 .cfi_def_cfa_offset 16
 251 0004 00AF     	 add r7,sp,#0
 252              	.LCFI15:
 253              	 .cfi_def_cfa_register 7
 254 0006 7860     	 str r0,[r7,#4]
 146:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 147:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 148:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 149:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 150:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 151:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 152:../Libraries/XMCLib/src/xmc_rtc.c **** 
 153:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 1U)
 154:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 255              	 .loc 2 154 9
 256 0008 00BF     	 nop
 257              	.L18:
 258              	 .loc 2 154 11 discriminator 1
 259 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 260 000e 0346     	 mov r3,r0
 261              	 .loc 2 154 37 discriminator 1
 262 0010 03F40063 	 and r3,r3,#2048
 263              	 .loc 2 154 9 discriminator 1
 264 0014 002B     	 cmp r3,#0
 265 0016 F8D1     	 bne .L18
 155:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 156:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 157:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 158:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM0 = time->raw0;
 266              	 .loc 2 158 6
 267 0018 094A     	 ldr r2,.L20
 268              	 .loc 2 158 19
 269 001a 7B68     	 ldr r3,[r7,#4]
 270 001c 1B68     	 ldr r3,[r3]
 271              	 .loc 2 158 13
 272 001e 1362     	 str r3,[r2,#32]
 159:../Libraries/XMCLib/src/xmc_rtc.c **** 
 160:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 273              	 .loc 2 160 9
 274 0020 00BF     	 nop
 275              	.L19:
 276              	 .loc 2 160 11 discriminator 1
 277 0022 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 278 0026 0346     	 mov r3,r0
 279              	 .loc 2 160 37 discriminator 1
 280 0028 03F48053 	 and r3,r3,#4096
 281              	 .loc 2 160 9 discriminator 1
 282 002c 002B     	 cmp r3,#0
 283 002e F8D1     	 bne .L19
 161:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 162:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 163:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 164:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM1 = time->raw1;
 284              	 .loc 2 164 6
 285 0030 034A     	 ldr r2,.L20
 286              	 .loc 2 164 19
 287 0032 7B68     	 ldr r3,[r7,#4]
 288 0034 5B68     	 ldr r3,[r3,#4]
 289              	 .loc 2 164 13
 290 0036 5362     	 str r3,[r2,#36]
 165:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 166:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 0U)
 167:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_RTC_T
 168:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 169:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 170:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 171:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM0 = time->raw0;
 172:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM1 = time->raw1;	;
 173:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 174:../Libraries/XMCLib/src/xmc_rtc.c **** }
 291              	 .loc 2 174 1
 292 0038 00BF     	 nop
 293 003a 0837     	 adds r7,r7,#8
 294              	.LCFI16:
 295              	 .cfi_def_cfa_offset 8
 296 003c BD46     	 mov sp,r7
 297              	.LCFI17:
 298              	 .cfi_def_cfa_register 13
 299              	 
 300 003e 80BD     	 pop {r7,pc}
 301              	.L21:
 302              	 .align 2
 303              	.L20:
 304 0040 004A0050 	 .word 1342196224
 305              	 .cfi_endproc
 306              	.LFE176:
 308              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 309              	 .align 1
 310              	 .global XMC_RTC_GetTime
 311              	 .syntax unified
 312              	 .thumb
 313              	 .thumb_func
 314              	 .fpu fpv4-sp-d16
 316              	XMC_RTC_GetTime:
 317              	.LFB177:
 175:../Libraries/XMCLib/src/xmc_rtc.c **** 
 176:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 177:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 178:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 179:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 180:../Libraries/XMCLib/src/xmc_rtc.c **** {
 318              	 .loc 2 180 1
 319              	 .cfi_startproc
 320              	 
 321              	 
 322              	 
 323 0000 80B4     	 push {r7}
 324              	.LCFI18:
 325              	 .cfi_def_cfa_offset 4
 326              	 .cfi_offset 7,-4
 327 0002 83B0     	 sub sp,sp,#12
 328              	.LCFI19:
 329              	 .cfi_def_cfa_offset 16
 330 0004 00AF     	 add r7,sp,#0
 331              	.LCFI20:
 332              	 .cfi_def_cfa_register 7
 333 0006 7860     	 str r0,[r7,#4]
 181:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 334              	 .loc 2 181 19
 335 0008 064B     	 ldr r3,.L23
 336 000a 1A6A     	 ldr r2,[r3,#32]
 337              	 .loc 2 181 14
 338 000c 7B68     	 ldr r3,[r7,#4]
 339 000e 1A60     	 str r2,[r3]
 182:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 340              	 .loc 2 182 19
 341 0010 044B     	 ldr r3,.L23
 342 0012 5A6A     	 ldr r2,[r3,#36]
 343              	 .loc 2 182 14
 344 0014 7B68     	 ldr r3,[r7,#4]
 345 0016 5A60     	 str r2,[r3,#4]
 183:../Libraries/XMCLib/src/xmc_rtc.c **** }
 346              	 .loc 2 183 1
 347 0018 00BF     	 nop
 348 001a 0C37     	 adds r7,r7,#12
 349              	.LCFI21:
 350              	 .cfi_def_cfa_offset 4
 351 001c BD46     	 mov sp,r7
 352              	.LCFI22:
 353              	 .cfi_def_cfa_register 13
 354              	 
 355 001e 5DF8047B 	 ldr r7,[sp],#4
 356              	.LCFI23:
 357              	 .cfi_restore 7
 358              	 .cfi_def_cfa_offset 0
 359 0022 7047     	 bx lr
 360              	.L24:
 361              	 .align 2
 362              	.L23:
 363 0024 004A0050 	 .word 1342196224
 364              	 .cfi_endproc
 365              	.LFE177:
 367              	 .section .text.XMC_RTC_SetTimeStdFormat,"ax",%progbits
 368              	 .align 1
 369              	 .global XMC_RTC_SetTimeStdFormat
 370              	 .syntax unified
 371              	 .thumb
 372              	 .thumb_func
 373              	 .fpu fpv4-sp-d16
 375              	XMC_RTC_SetTimeStdFormat:
 376              	.LFB178:
 184:../Libraries/XMCLib/src/xmc_rtc.c **** 
 185:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 186:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module time values in standard format
 187:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 188:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTimeStdFormat(const struct tm *const stdtime)
 189:../Libraries/XMCLib/src/xmc_rtc.c **** {
 377              	 .loc 2 189 1
 378              	 .cfi_startproc
 379              	 
 380              	 
 381 0000 80B5     	 push {r7,lr}
 382              	.LCFI24:
 383              	 .cfi_def_cfa_offset 8
 384              	 .cfi_offset 7,-8
 385              	 .cfi_offset 14,-4
 386 0002 84B0     	 sub sp,sp,#16
 387              	.LCFI25:
 388              	 .cfi_def_cfa_offset 24
 389 0004 00AF     	 add r7,sp,#0
 390              	.LCFI26:
 391              	 .cfi_def_cfa_register 7
 392 0006 7860     	 str r0,[r7,#4]
 190:../Libraries/XMCLib/src/xmc_rtc.c **** 
 191:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 192:../Libraries/XMCLib/src/xmc_rtc.c **** 
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   time.seconds = stdtime->tm_sec;
 393              	 .loc 2 193 25
 394 0008 7B68     	 ldr r3,[r7,#4]
 395 000a 1B68     	 ldr r3,[r3]
 396 000c 03F03F03 	 and r3,r3,#63
 397 0010 DAB2     	 uxtb r2,r3
 398              	 .loc 2 193 16
 399 0012 3B7A     	 ldrb r3,[r7,#8]
 400 0014 62F30503 	 bfi r3,r2,#0,#6
 401 0018 3B72     	 strb r3,[r7,#8]
 194:../Libraries/XMCLib/src/xmc_rtc.c ****   time.minutes = stdtime->tm_min;
 402              	 .loc 2 194 25
 403 001a 7B68     	 ldr r3,[r7,#4]
 404 001c 5B68     	 ldr r3,[r3,#4]
 405 001e 03F03F03 	 and r3,r3,#63
 406 0022 DAB2     	 uxtb r2,r3
 407              	 .loc 2 194 16
 408 0024 7B7A     	 ldrb r3,[r7,#9]
 409 0026 62F30503 	 bfi r3,r2,#0,#6
 410 002a 7B72     	 strb r3,[r7,#9]
 195:../Libraries/XMCLib/src/xmc_rtc.c ****   time.hours = stdtime->tm_hour;
 411              	 .loc 2 195 23
 412 002c 7B68     	 ldr r3,[r7,#4]
 413 002e 9B68     	 ldr r3,[r3,#8]
 414 0030 03F01F03 	 and r3,r3,#31
 415 0034 DAB2     	 uxtb r2,r3
 416              	 .loc 2 195 14
 417 0036 BB7A     	 ldrb r3,[r7,#10]
 418 0038 62F30403 	 bfi r3,r2,#0,#5
 419 003c BB72     	 strb r3,[r7,#10]
 196:../Libraries/XMCLib/src/xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 420              	 .loc 2 196 22
 421 003e 7B68     	 ldr r3,[r7,#4]
 422 0040 DB68     	 ldr r3,[r3,#12]
 423              	 .loc 2 196 32
 424 0042 DBB2     	 uxtb r3,r3
 425 0044 013B     	 subs r3,r3,#1
 426 0046 DBB2     	 uxtb r3,r3
 427 0048 03F01F03 	 and r3,r3,#31
 428 004c DAB2     	 uxtb r2,r3
 429              	 .loc 2 196 13
 430 004e FB7A     	 ldrb r3,[r7,#11]
 431 0050 62F30403 	 bfi r3,r2,#0,#5
 432 0054 FB72     	 strb r3,[r7,#11]
 197:../Libraries/XMCLib/src/xmc_rtc.c ****   time.month = stdtime->tm_mon;
 433              	 .loc 2 197 23
 434 0056 7B68     	 ldr r3,[r7,#4]
 435 0058 1B69     	 ldr r3,[r3,#16]
 436 005a 03F00F03 	 and r3,r3,#15
 437 005e DAB2     	 uxtb r2,r3
 438              	 .loc 2 197 14
 439 0060 7B7B     	 ldrb r3,[r7,#13]
 440 0062 62F30303 	 bfi r3,r2,#0,#4
 441 0066 7B73     	 strb r3,[r7,#13]
 198:../Libraries/XMCLib/src/xmc_rtc.c ****   time.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 442              	 .loc 2 198 22
 443 0068 7B68     	 ldr r3,[r7,#4]
 444 006a 5B69     	 ldr r3,[r3,#20]
 445              	 .loc 2 198 32
 446 006c 9BB2     	 uxth r3,r3
 447 006e 03F26C73 	 addw r3,r3,#1900
 448 0072 9BB2     	 uxth r3,r3
 449              	 .loc 2 198 13
 450 0074 FB81     	 strh r3,[r7,#14]
 199:../Libraries/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 451              	 .loc 2 199 28
 452 0076 7B68     	 ldr r3,[r7,#4]
 453 0078 9B69     	 ldr r3,[r3,#24]
 454 007a 03F00703 	 and r3,r3,#7
 455 007e DAB2     	 uxtb r2,r3
 456              	 .loc 2 199 19
 457 0080 3B7B     	 ldrb r3,[r7,#12]
 458 0082 62F30203 	 bfi r3,r2,#0,#3
 459 0086 3B73     	 strb r3,[r7,#12]
 200:../Libraries/XMCLib/src/xmc_rtc.c **** 
 201:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetTime(&time);
 460              	 .loc 2 201 3
 461 0088 07F10803 	 add r3,r7,#8
 462 008c 1846     	 mov r0,r3
 463 008e FFF7FEFF 	 bl XMC_RTC_SetTime
 202:../Libraries/XMCLib/src/xmc_rtc.c **** }
 464              	 .loc 2 202 1
 465 0092 00BF     	 nop
 466 0094 1037     	 adds r7,r7,#16
 467              	.LCFI27:
 468              	 .cfi_def_cfa_offset 8
 469 0096 BD46     	 mov sp,r7
 470              	.LCFI28:
 471              	 .cfi_def_cfa_register 13
 472              	 
 473 0098 80BD     	 pop {r7,pc}
 474              	 .cfi_endproc
 475              	.LFE178:
 477              	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 478              	 .align 1
 479              	 .global XMC_RTC_GetTimeStdFormat
 480              	 .syntax unified
 481              	 .thumb
 482              	 .thumb_func
 483              	 .fpu fpv4-sp-d16
 485              	XMC_RTC_GetTimeStdFormat:
 486              	.LFB179:
 203:../Libraries/XMCLib/src/xmc_rtc.c **** 
 204:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 205:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 206:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 207:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 208:../Libraries/XMCLib/src/xmc_rtc.c **** {
 487              	 .loc 2 208 1
 488              	 .cfi_startproc
 489              	 
 490              	 
 491              	 
 492 0000 80B4     	 push {r7}
 493              	.LCFI29:
 494              	 .cfi_def_cfa_offset 4
 495              	 .cfi_offset 7,-4
 496 0002 85B0     	 sub sp,sp,#20
 497              	.LCFI30:
 498              	 .cfi_def_cfa_offset 24
 499 0004 00AF     	 add r7,sp,#0
 500              	.LCFI31:
 501              	 .cfi_def_cfa_register 7
 502 0006 7860     	 str r0,[r7,#4]
 209:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 210:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 503              	 .loc 2 210 18
 504 0008 1D4B     	 ldr r3,.L27
 505 000a 1B6A     	 ldr r3,[r3,#32]
 506              	 .loc 2 210 13
 507 000c BB60     	 str r3,[r7,#8]
 211:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 508              	 .loc 2 211 18
 509 000e 1C4B     	 ldr r3,.L27
 510 0010 5B6A     	 ldr r3,[r3,#36]
 511              	 .loc 2 211 13
 512 0012 FB60     	 str r3,[r7,#12]
 212:../Libraries/XMCLib/src/xmc_rtc.c **** 
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 513              	 .loc 2 213 33
 514 0014 3B7A     	 ldrb r3,[r7,#8]
 515 0016 C3F30503 	 ubfx r3,r3,#0,#6
 516 001a DBB2     	 uxtb r3,r3
 517              	 .loc 2 213 21
 518 001c 1A46     	 mov r2,r3
 519              	 .loc 2 213 19
 520 001e 7B68     	 ldr r3,[r7,#4]
 521 0020 1A60     	 str r2,[r3]
 214:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 522              	 .loc 2 214 33
 523 0022 7B7A     	 ldrb r3,[r7,#9]
 524 0024 C3F30503 	 ubfx r3,r3,#0,#6
 525 0028 DBB2     	 uxtb r3,r3
 526              	 .loc 2 214 21
 527 002a 1A46     	 mov r2,r3
 528              	 .loc 2 214 19
 529 002c 7B68     	 ldr r3,[r7,#4]
 530 002e 5A60     	 str r2,[r3,#4]
 215:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 531              	 .loc 2 215 34
 532 0030 BB7A     	 ldrb r3,[r7,#10]
 533 0032 C3F30403 	 ubfx r3,r3,#0,#5
 534 0036 DBB2     	 uxtb r3,r3
 535              	 .loc 2 215 22
 536 0038 1A46     	 mov r2,r3
 537              	 .loc 2 215 20
 538 003a 7B68     	 ldr r3,[r7,#4]
 539 003c 9A60     	 str r2,[r3,#8]
 216:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 540              	 .loc 2 216 35
 541 003e FB7A     	 ldrb r3,[r7,#11]
 542 0040 C3F30403 	 ubfx r3,r3,#0,#5
 543 0044 DBB2     	 uxtb r3,r3
 544              	 .loc 2 216 41
 545 0046 5A1C     	 adds r2,r3,#1
 546              	 .loc 2 216 20
 547 0048 7B68     	 ldr r3,[r7,#4]
 548 004a DA60     	 str r2,[r3,#12]
 217:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 549              	 .loc 2 217 33
 550 004c 7B7B     	 ldrb r3,[r7,#13]
 551 004e C3F30303 	 ubfx r3,r3,#0,#4
 552 0052 DBB2     	 uxtb r3,r3
 553              	 .loc 2 217 21
 554 0054 1A46     	 mov r2,r3
 555              	 .loc 2 217 19
 556 0056 7B68     	 ldr r3,[r7,#4]
 557 0058 1A61     	 str r2,[r3,#16]
 218:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 558              	 .loc 2 218 35
 559 005a FB89     	 ldrh r3,[r7,#14]
 560              	 .loc 2 218 41
 561 005c A3F26C72 	 subw r2,r3,#1900
 562              	 .loc 2 218 20
 563 0060 7B68     	 ldr r3,[r7,#4]
 564 0062 5A61     	 str r2,[r3,#20]
 219:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 565              	 .loc 2 219 34
 566 0064 3B7B     	 ldrb r3,[r7,#12]
 567 0066 C3F30203 	 ubfx r3,r3,#0,#3
 568 006a DBB2     	 uxtb r3,r3
 569              	 .loc 2 219 22
 570 006c 1A46     	 mov r2,r3
 571              	 .loc 2 219 20
 572 006e 7B68     	 ldr r3,[r7,#4]
 573 0070 9A61     	 str r2,[r3,#24]
 220:../Libraries/XMCLib/src/xmc_rtc.c **** }
 574              	 .loc 2 220 1
 575 0072 00BF     	 nop
 576 0074 1437     	 adds r7,r7,#20
 577              	.LCFI32:
 578              	 .cfi_def_cfa_offset 4
 579 0076 BD46     	 mov sp,r7
 580              	.LCFI33:
 581              	 .cfi_def_cfa_register 13
 582              	 
 583 0078 5DF8047B 	 ldr r7,[sp],#4
 584              	.LCFI34:
 585              	 .cfi_restore 7
 586              	 .cfi_def_cfa_offset 0
 587 007c 7047     	 bx lr
 588              	.L28:
 589 007e 00BF     	 .align 2
 590              	.L27:
 591 0080 004A0050 	 .word 1342196224
 592              	 .cfi_endproc
 593              	.LFE179:
 595              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 596              	 .align 1
 597              	 .global XMC_RTC_SetAlarm
 598              	 .syntax unified
 599              	 .thumb
 600              	 .thumb_func
 601              	 .fpu fpv4-sp-d16
 603              	XMC_RTC_SetAlarm:
 604              	.LFB180:
 221:../Libraries/XMCLib/src/xmc_rtc.c **** 
 222:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 223:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 224:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 225:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 226:../Libraries/XMCLib/src/xmc_rtc.c **** {
 605              	 .loc 2 226 1
 606              	 .cfi_startproc
 607              	 
 608              	 
 609 0000 80B5     	 push {r7,lr}
 610              	.LCFI35:
 611              	 .cfi_def_cfa_offset 8
 612              	 .cfi_offset 7,-8
 613              	 .cfi_offset 14,-4
 614 0002 82B0     	 sub sp,sp,#8
 615              	.LCFI36:
 616              	 .cfi_def_cfa_offset 16
 617 0004 00AF     	 add r7,sp,#0
 618              	.LCFI37:
 619              	 .cfi_def_cfa_register 7
 620 0006 7860     	 str r0,[r7,#4]
 227:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 228:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 229:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 230:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 231:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 232:../Libraries/XMCLib/src/xmc_rtc.c **** 
 233:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 1U)
 234:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 621              	 .loc 2 234 9
 622 0008 00BF     	 nop
 623              	.L30:
 624              	 .loc 2 234 11 discriminator 1
 625 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 626 000e 0346     	 mov r3,r0
 627              	 .loc 2 234 37 discriminator 1
 628 0010 03F40073 	 and r3,r3,#512
 629              	 .loc 2 234 9 discriminator 1
 630 0014 002B     	 cmp r3,#0
 631 0016 F8D1     	 bne .L30
 235:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 236:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 237:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 238:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM0 = alarm->raw0;
 632              	 .loc 2 238 6
 633 0018 094A     	 ldr r2,.L32
 634              	 .loc 2 238 21
 635 001a 7B68     	 ldr r3,[r7,#4]
 636 001c 1B68     	 ldr r3,[r3]
 637              	 .loc 2 238 14
 638 001e 9361     	 str r3,[r2,#24]
 239:../Libraries/XMCLib/src/xmc_rtc.c **** 
 240:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 639              	 .loc 2 240 9
 640 0020 00BF     	 nop
 641              	.L31:
 642              	 .loc 2 240 11 discriminator 1
 643 0022 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 644 0026 0346     	 mov r3,r0
 645              	 .loc 2 240 37 discriminator 1
 646 0028 03F48063 	 and r3,r3,#1024
 647              	 .loc 2 240 9 discriminator 1
 648 002c 002B     	 cmp r3,#0
 649 002e F8D1     	 bne .L31
 241:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 242:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 243:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 244:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM1 = alarm->raw1;
 650              	 .loc 2 244 6
 651 0030 034A     	 ldr r2,.L32
 652              	 .loc 2 244 21
 653 0032 7B68     	 ldr r3,[r7,#4]
 654 0034 5B68     	 ldr r3,[r3,#4]
 655              	 .loc 2 244 14
 656 0036 D361     	 str r3,[r2,#28]
 245:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 246:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 0U)
 247:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_RTC_
 248:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 249:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 250:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 251:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM0 = alarm->raw0;
 252:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM1 = alarm->raw1;
 253:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 254:../Libraries/XMCLib/src/xmc_rtc.c **** }
 657              	 .loc 2 254 1
 658 0038 00BF     	 nop
 659 003a 0837     	 adds r7,r7,#8
 660              	.LCFI38:
 661              	 .cfi_def_cfa_offset 8
 662 003c BD46     	 mov sp,r7
 663              	.LCFI39:
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 003e 80BD     	 pop {r7,pc}
 667              	.L33:
 668              	 .align 2
 669              	.L32:
 670 0040 004A0050 	 .word 1342196224
 671              	 .cfi_endproc
 672              	.LFE180:
 674              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 675              	 .align 1
 676              	 .global XMC_RTC_GetAlarm
 677              	 .syntax unified
 678              	 .thumb
 679              	 .thumb_func
 680              	 .fpu fpv4-sp-d16
 682              	XMC_RTC_GetAlarm:
 683              	.LFB181:
 255:../Libraries/XMCLib/src/xmc_rtc.c **** 
 256:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 257:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 258:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 259:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 260:../Libraries/XMCLib/src/xmc_rtc.c **** {
 684              	 .loc 2 260 1
 685              	 .cfi_startproc
 686              	 
 687              	 
 688              	 
 689 0000 80B4     	 push {r7}
 690              	.LCFI40:
 691              	 .cfi_def_cfa_offset 4
 692              	 .cfi_offset 7,-4
 693 0002 83B0     	 sub sp,sp,#12
 694              	.LCFI41:
 695              	 .cfi_def_cfa_offset 16
 696 0004 00AF     	 add r7,sp,#0
 697              	.LCFI42:
 698              	 .cfi_def_cfa_register 7
 699 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 700              	 .loc 2 261 20
 701 0008 064B     	 ldr r3,.L35
 702 000a 9A69     	 ldr r2,[r3,#24]
 703              	 .loc 2 261 15
 704 000c 7B68     	 ldr r3,[r7,#4]
 705 000e 1A60     	 str r2,[r3]
 262:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 706              	 .loc 2 262 20
 707 0010 044B     	 ldr r3,.L35
 708 0012 DA69     	 ldr r2,[r3,#28]
 709              	 .loc 2 262 15
 710 0014 7B68     	 ldr r3,[r7,#4]
 711 0016 5A60     	 str r2,[r3,#4]
 263:../Libraries/XMCLib/src/xmc_rtc.c **** }
 712              	 .loc 2 263 1
 713 0018 00BF     	 nop
 714 001a 0C37     	 adds r7,r7,#12
 715              	.LCFI43:
 716              	 .cfi_def_cfa_offset 4
 717 001c BD46     	 mov sp,r7
 718              	.LCFI44:
 719              	 .cfi_def_cfa_register 13
 720              	 
 721 001e 5DF8047B 	 ldr r7,[sp],#4
 722              	.LCFI45:
 723              	 .cfi_restore 7
 724              	 .cfi_def_cfa_offset 0
 725 0022 7047     	 bx lr
 726              	.L36:
 727              	 .align 2
 728              	.L35:
 729 0024 004A0050 	 .word 1342196224
 730              	 .cfi_endproc
 731              	.LFE181:
 733              	 .section .text.XMC_RTC_SetAlarmStdFormat,"ax",%progbits
 734              	 .align 1
 735              	 .global XMC_RTC_SetAlarmStdFormat
 736              	 .syntax unified
 737              	 .thumb
 738              	 .thumb_func
 739              	 .fpu fpv4-sp-d16
 741              	XMC_RTC_SetAlarmStdFormat:
 742              	.LFB182:
 264:../Libraries/XMCLib/src/xmc_rtc.c **** 
 265:../Libraries/XMCLib/src/xmc_rtc.c **** 
 266:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 267:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value in standard format
 268:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 269:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarmStdFormat(const struct tm *const stdtime)
 270:../Libraries/XMCLib/src/xmc_rtc.c **** {
 743              	 .loc 2 270 1
 744              	 .cfi_startproc
 745              	 
 746              	 
 747 0000 80B5     	 push {r7,lr}
 748              	.LCFI46:
 749              	 .cfi_def_cfa_offset 8
 750              	 .cfi_offset 7,-8
 751              	 .cfi_offset 14,-4
 752 0002 84B0     	 sub sp,sp,#16
 753              	.LCFI47:
 754              	 .cfi_def_cfa_offset 24
 755 0004 00AF     	 add r7,sp,#0
 756              	.LCFI48:
 757              	 .cfi_def_cfa_register 7
 758 0006 7860     	 str r0,[r7,#4]
 271:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 272:../Libraries/XMCLib/src/xmc_rtc.c **** 
 273:../Libraries/XMCLib/src/xmc_rtc.c **** 
 274:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.seconds = stdtime->tm_sec;
 759              	 .loc 2 274 26
 760 0008 7B68     	 ldr r3,[r7,#4]
 761 000a 1B68     	 ldr r3,[r3]
 762 000c 03F03F03 	 and r3,r3,#63
 763 0010 DAB2     	 uxtb r2,r3
 764              	 .loc 2 274 17
 765 0012 3B7A     	 ldrb r3,[r7,#8]
 766 0014 62F30503 	 bfi r3,r2,#0,#6
 767 0018 3B72     	 strb r3,[r7,#8]
 275:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.minutes = stdtime->tm_min;
 768              	 .loc 2 275 26
 769 001a 7B68     	 ldr r3,[r7,#4]
 770 001c 5B68     	 ldr r3,[r3,#4]
 771 001e 03F03F03 	 and r3,r3,#63
 772 0022 DAB2     	 uxtb r2,r3
 773              	 .loc 2 275 17
 774 0024 7B7A     	 ldrb r3,[r7,#9]
 775 0026 62F30503 	 bfi r3,r2,#0,#6
 776 002a 7B72     	 strb r3,[r7,#9]
 276:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.hours = stdtime->tm_hour;
 777              	 .loc 2 276 24
 778 002c 7B68     	 ldr r3,[r7,#4]
 779 002e 9B68     	 ldr r3,[r3,#8]
 780 0030 03F01F03 	 and r3,r3,#31
 781 0034 DAB2     	 uxtb r2,r3
 782              	 .loc 2 276 15
 783 0036 BB7A     	 ldrb r3,[r7,#10]
 784 0038 62F30403 	 bfi r3,r2,#0,#5
 785 003c BB72     	 strb r3,[r7,#10]
 277:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 786              	 .loc 2 277 23
 787 003e 7B68     	 ldr r3,[r7,#4]
 788 0040 DB68     	 ldr r3,[r3,#12]
 789              	 .loc 2 277 33
 790 0042 DBB2     	 uxtb r3,r3
 791 0044 013B     	 subs r3,r3,#1
 792 0046 DBB2     	 uxtb r3,r3
 793 0048 03F01F03 	 and r3,r3,#31
 794 004c DAB2     	 uxtb r2,r3
 795              	 .loc 2 277 14
 796 004e FB7A     	 ldrb r3,[r7,#11]
 797 0050 62F30403 	 bfi r3,r2,#0,#5
 798 0054 FB72     	 strb r3,[r7,#11]
 278:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 799              	 .loc 2 278 24
 800 0056 7B68     	 ldr r3,[r7,#4]
 801 0058 1B69     	 ldr r3,[r3,#16]
 802 005a 03F00F03 	 and r3,r3,#15
 803 005e DAB2     	 uxtb r2,r3
 804              	 .loc 2 278 15
 805 0060 7B7B     	 ldrb r3,[r7,#13]
 806 0062 62F30303 	 bfi r3,r2,#0,#4
 807 0066 7B73     	 strb r3,[r7,#13]
 279:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 808              	 .loc 2 279 23
 809 0068 7B68     	 ldr r3,[r7,#4]
 810 006a 5B69     	 ldr r3,[r3,#20]
 811              	 .loc 2 279 33
 812 006c 9BB2     	 uxth r3,r3
 813 006e 03F26C73 	 addw r3,r3,#1900
 814 0072 9BB2     	 uxth r3,r3
 815              	 .loc 2 279 14
 816 0074 FB81     	 strh r3,[r7,#14]
 280:../Libraries/XMCLib/src/xmc_rtc.c **** 
 281:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetAlarm(&alarm);
 817              	 .loc 2 281 3
 818 0076 07F10803 	 add r3,r7,#8
 819 007a 1846     	 mov r0,r3
 820 007c FFF7FEFF 	 bl XMC_RTC_SetAlarm
 282:../Libraries/XMCLib/src/xmc_rtc.c **** }
 821              	 .loc 2 282 1
 822 0080 00BF     	 nop
 823 0082 1037     	 adds r7,r7,#16
 824              	.LCFI49:
 825              	 .cfi_def_cfa_offset 8
 826 0084 BD46     	 mov sp,r7
 827              	.LCFI50:
 828              	 .cfi_def_cfa_register 13
 829              	 
 830 0086 80BD     	 pop {r7,pc}
 831              	 .cfi_endproc
 832              	.LFE182:
 834              	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 835              	 .align 1
 836              	 .global XMC_RTC_GetAlarmStdFormat
 837              	 .syntax unified
 838              	 .thumb
 839              	 .thumb_func
 840              	 .fpu fpv4-sp-d16
 842              	XMC_RTC_GetAlarmStdFormat:
 843              	.LFB183:
 283:../Libraries/XMCLib/src/xmc_rtc.c **** 
 284:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 285:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 286:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 287:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 288:../Libraries/XMCLib/src/xmc_rtc.c **** {
 844              	 .loc 2 288 1
 845              	 .cfi_startproc
 846              	 
 847              	 
 848              	 
 849 0000 80B4     	 push {r7}
 850              	.LCFI51:
 851              	 .cfi_def_cfa_offset 4
 852              	 .cfi_offset 7,-4
 853 0002 85B0     	 sub sp,sp,#20
 854              	.LCFI52:
 855              	 .cfi_def_cfa_offset 24
 856 0004 00AF     	 add r7,sp,#0
 857              	.LCFI53:
 858              	 .cfi_def_cfa_register 7
 859 0006 7860     	 str r0,[r7,#4]
 289:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 290:../Libraries/XMCLib/src/xmc_rtc.c **** 
 291:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 860              	 .loc 2 291 19
 861 0008 194B     	 ldr r3,.L39
 862 000a 9B69     	 ldr r3,[r3,#24]
 863              	 .loc 2 291 14
 864 000c BB60     	 str r3,[r7,#8]
 292:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 865              	 .loc 2 292 19
 866 000e 184B     	 ldr r3,.L39
 867 0010 DB69     	 ldr r3,[r3,#28]
 868              	 .loc 2 292 14
 869 0012 FB60     	 str r3,[r7,#12]
 293:../Libraries/XMCLib/src/xmc_rtc.c **** 
 294:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 870              	 .loc 2 294 34
 871 0014 3B7A     	 ldrb r3,[r7,#8]
 872 0016 C3F30503 	 ubfx r3,r3,#0,#6
 873 001a DBB2     	 uxtb r3,r3
 874              	 .loc 2 294 21
 875 001c 1A46     	 mov r2,r3
 876              	 .loc 2 294 19
 877 001e 7B68     	 ldr r3,[r7,#4]
 878 0020 1A60     	 str r2,[r3]
 295:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 879              	 .loc 2 295 34
 880 0022 7B7A     	 ldrb r3,[r7,#9]
 881 0024 C3F30503 	 ubfx r3,r3,#0,#6
 882 0028 DBB2     	 uxtb r3,r3
 883              	 .loc 2 295 21
 884 002a 1A46     	 mov r2,r3
 885              	 .loc 2 295 19
 886 002c 7B68     	 ldr r3,[r7,#4]
 887 002e 5A60     	 str r2,[r3,#4]
 296:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 888              	 .loc 2 296 35
 889 0030 BB7A     	 ldrb r3,[r7,#10]
 890 0032 C3F30403 	 ubfx r3,r3,#0,#5
 891 0036 DBB2     	 uxtb r3,r3
 892              	 .loc 2 296 22
 893 0038 1A46     	 mov r2,r3
 894              	 .loc 2 296 20
 895 003a 7B68     	 ldr r3,[r7,#4]
 896 003c 9A60     	 str r2,[r3,#8]
 297:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 897              	 .loc 2 297 36
 898 003e FB7A     	 ldrb r3,[r7,#11]
 899 0040 C3F30403 	 ubfx r3,r3,#0,#5
 900 0044 DBB2     	 uxtb r3,r3
 901              	 .loc 2 297 42
 902 0046 5A1C     	 adds r2,r3,#1
 903              	 .loc 2 297 20
 904 0048 7B68     	 ldr r3,[r7,#4]
 905 004a DA60     	 str r2,[r3,#12]
 298:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 906              	 .loc 2 298 34
 907 004c 7B7B     	 ldrb r3,[r7,#13]
 908 004e C3F30303 	 ubfx r3,r3,#0,#4
 909 0052 DBB2     	 uxtb r3,r3
 910              	 .loc 2 298 21
 911 0054 1A46     	 mov r2,r3
 912              	 .loc 2 298 19
 913 0056 7B68     	 ldr r3,[r7,#4]
 914 0058 1A61     	 str r2,[r3,#16]
 299:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 915              	 .loc 2 299 36
 916 005a FB89     	 ldrh r3,[r7,#14]
 917              	 .loc 2 299 42
 918 005c A3F26C72 	 subw r2,r3,#1900
 919              	 .loc 2 299 20
 920 0060 7B68     	 ldr r3,[r7,#4]
 921 0062 5A61     	 str r2,[r3,#20]
 300:../Libraries/XMCLib/src/xmc_rtc.c **** }
 922              	 .loc 2 300 1
 923 0064 00BF     	 nop
 924 0066 1437     	 adds r7,r7,#20
 925              	.LCFI54:
 926              	 .cfi_def_cfa_offset 4
 927 0068 BD46     	 mov sp,r7
 928              	.LCFI55:
 929              	 .cfi_def_cfa_register 13
 930              	 
 931 006a 5DF8047B 	 ldr r7,[sp],#4
 932              	.LCFI56:
 933              	 .cfi_restore 7
 934              	 .cfi_def_cfa_offset 0
 935 006e 7047     	 bx lr
 936              	.L40:
 937              	 .align 2
 938              	.L39:
 939 0070 004A0050 	 .word 1342196224
 940              	 .cfi_endproc
 941              	.LFE183:
 943              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 944              	 .align 1
 945              	 .global XMC_RTC_GetEventStatus
 946              	 .syntax unified
 947              	 .thumb
 948              	 .thumb_func
 949              	 .fpu fpv4-sp-d16
 951              	XMC_RTC_GetEventStatus:
 952              	.LFB184:
 301:../Libraries/XMCLib/src/xmc_rtc.c **** 
 302:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 303:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 304:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 305:../Libraries/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 306:../Libraries/XMCLib/src/xmc_rtc.c **** {
 953              	 .loc 2 306 1
 954              	 .cfi_startproc
 955              	 
 956              	 
 957              	 
 958 0000 80B4     	 push {r7}
 959              	.LCFI57:
 960              	 .cfi_def_cfa_offset 4
 961              	 .cfi_offset 7,-4
 962 0002 00AF     	 add r7,sp,#0
 963              	.LCFI58:
 964              	 .cfi_def_cfa_register 7
 307:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 965              	 .loc 2 307 13
 966 0004 034B     	 ldr r3,.L43
 967 0006 DB68     	 ldr r3,[r3,#12]
 308:../Libraries/XMCLib/src/xmc_rtc.c **** }
 968              	 .loc 2 308 1
 969 0008 1846     	 mov r0,r3
 970 000a BD46     	 mov sp,r7
 971              	.LCFI59:
 972              	 .cfi_def_cfa_register 13
 973              	 
 974 000c 5DF8047B 	 ldr r7,[sp],#4
 975              	.LCFI60:
 976              	 .cfi_restore 7
 977              	 .cfi_def_cfa_offset 0
 978 0010 7047     	 bx lr
 979              	.L44:
 980 0012 00BF     	 .align 2
 981              	.L43:
 982 0014 004A0050 	 .word 1342196224
 983              	 .cfi_endproc
 984              	.LFE184:
 986              	 .text
 987              	.Letext0:
 988              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 989              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 990              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 991              	 .file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\time.h"
 992              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_rtc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:17     .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:24     .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:56     .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:61     .text.XMC_RTC_Start:00000000 $t
    {standard input}:68     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:106    .text.XMC_RTC_Start:00000024 $d
    {standard input}:111    .text.XMC_RTC_Stop:00000000 $t
    {standard input}:118    .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:155    .text.XMC_RTC_Stop:00000024 $d
    {standard input}:160    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:167    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:225    .text.XMC_RTC_SetPrescaler:00000034 $d
    {standard input}:230    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:237    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:304    .text.XMC_RTC_SetTime:00000040 $d
    {standard input}:309    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:316    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:363    .text.XMC_RTC_GetTime:00000024 $d
    {standard input}:368    .text.XMC_RTC_SetTimeStdFormat:00000000 $t
    {standard input}:375    .text.XMC_RTC_SetTimeStdFormat:00000000 XMC_RTC_SetTimeStdFormat
    {standard input}:478    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:485    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:591    .text.XMC_RTC_GetTimeStdFormat:00000080 $d
    {standard input}:596    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:603    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:670    .text.XMC_RTC_SetAlarm:00000040 $d
    {standard input}:675    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:682    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:729    .text.XMC_RTC_GetAlarm:00000024 $d
    {standard input}:734    .text.XMC_RTC_SetAlarmStdFormat:00000000 $t
    {standard input}:741    .text.XMC_RTC_SetAlarmStdFormat:00000000 XMC_RTC_SetAlarmStdFormat
    {standard input}:835    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:842    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:939    .text.XMC_RTC_GetAlarmStdFormat:00000070 $d
    {standard input}:944    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:951    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:982    .text.XMC_RTC_GetEventStatus:00000014 $d

NO UNDEFINED SYMBOLS
