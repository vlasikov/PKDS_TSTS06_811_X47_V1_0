   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc_usbd.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  17              	 .align 2
  20              	XMC_USBD_EP_OUT_BUFFERSIZE:
  21 0000 00000000 	 .space 28
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  23              	 .align 2
  26              	XMC_USBD_EP_IN_BUFFERSIZE:
  27 0000 00000000 	 .space 28
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              	 .global xmc_device
  29              	 .section .bss.xmc_device,"aw",%nobits
  30              	 .align 2
  33              	xmc_device:
  34 0000 00000000 	 .space 520
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              	 .section USB_RAM,"aw"
  36              	 .align 2
  39              	XMC_USBD_EP_OUT_BUFFER:
  40 0000 00000000 	 .space 1792
  40      00000000 
  40      00000000 
  40      00000000 
  40      00000000 
  41              	 .align 2
  44              	XMC_USBD_EP_IN_BUFFER:
  45 0700 00000000 	 .space 1792
  45      00000000 
  45      00000000 
  45      00000000 
  45      00000000 
  46              	 .section .bss.usbd_init,"aw",%nobits
  47              	 .align 2
  50              	usbd_init:
  51 0000 00000000 	 .space 4
  52              	 .global Driver_USBD0
  53              	 .section .rodata.Driver_USBD0,"a"
  54              	 .align 2
  57              	Driver_USBD0:
  58 0000 00000000 	 .word XMC_USBD_GetCapabilities
  59 0004 00000000 	 .word XMC_USBD_Init
  60 0008 00000000 	 .word XMC_USBD_Uninitialize
  61 000c 00000000 	 .word XMC_USBD_DeviceConnect
  62 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  63 0014 00000000 	 .word XMC_USBD_DeviceGetState
  64 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  65 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  66 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  67 0024 00000000 	 .word XMC_USBD_EndpointStall
  68 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  69 002c 00000000 	 .word XMC_USBD_EndpointRead
  70 0030 00000000 	 .word XMC_USBD_EndpointWrite
  71 0034 00000000 	 .word XMC_USBD_EndpointAbort
  72 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  73 003c 00000000 	 .word XMC_USBD_IsEnumDone
  74              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  75              	 .align 1
  76              	 .arch armv7e-m
  77              	 .syntax unified
  78              	 .thumb
  79              	 .thumb_func
  80              	 .fpu fpv4-sp-d16
  82              	XMC_USBD_lDeviceActive:
  83              	.LFB171:
  84              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2019-12-16:
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2020-09-03:
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Fix XMC_USBD_EndpointConfigure()
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  61:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** 
  64:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  66:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  67:../Libraries/XMCLib/src/xmc_usbd.c **** #include "xmc_usbd.h"
  68:../Libraries/XMCLib/src/xmc_usbd.c **** 
  69:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  70:../Libraries/XMCLib/src/xmc_usbd.c **** 
  71:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  72:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  79:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  80:../Libraries/XMCLib/src/xmc_usbd.c **** 
  81:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  83:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  84:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  86:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  87:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U, 0U, 0U, 0U, 0U, 0U, 0U};
  88:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  90:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  91:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U, 0U, 0U, 0U, 0U, 0U, 0U};
  92:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  95:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_DEVICE_t xmc_device;
  96:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  97:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  99:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 100:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 101:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 103:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 104:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 107:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 108:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 110:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 111:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 112:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 114:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 115:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 116:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 118:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 119:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 121:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 122:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 123:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 125:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 126:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 127:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 128:../Libraries/XMCLib/src/xmc_usbd.c **** static XMC_USBD_t *usbd_init;
 129:../Libraries/XMCLib/src/xmc_usbd.c **** 
 130:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 132:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num, const uint32_t byte_count);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 150:../Libraries/XMCLib/src/xmc_usbd.c **** 
 151:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 153:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 154:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 155:../Libraries/XMCLib/src/xmc_usbd.c **** {
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 171:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 172:../Libraries/XMCLib/src/xmc_usbd.c **** };
 173:../Libraries/XMCLib/src/xmc_usbd.c **** 
 174:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 180:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 181:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj)
 182:../Libraries/XMCLib/src/xmc_usbd.c **** {
  85              	 .loc 1 182 1
  86              	 .cfi_startproc
  87              	 
  88              	 
  89              	 
  90 0000 80B4     	 push {r7}
  91              	.LCFI0:
  92              	 .cfi_def_cfa_offset 4
  93              	 .cfi_offset 7,-4
  94 0002 85B0     	 sub sp,sp,#20
  95              	.LCFI1:
  96              	 .cfi_def_cfa_offset 24
  97 0004 00AF     	 add r7,sp,#0
  98              	.LCFI2:
  99              	 .cfi_def_cfa_register 7
 100 0006 7860     	 str r0,[r7,#4]
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 101              	 .loc 1 184 11
 102 0008 0023     	 movs r3,#0
 103 000a BB73     	 strb r3,[r7,#14]
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 104              	 .loc 1 185 10
 105 000c 0023     	 movs r3,#0
 106 000e FB73     	 strb r3,[r7,#15]
 107              	 .loc 1 185 3
 108 0010 1CE0     	 b .L2
 109              	.L5:
 186:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 110              	 .loc 1 187 25
 111 0012 FB7B     	 ldrb r3,[r7,#15]
 112 0014 134A     	 ldr r2,.L7
 113 0016 3421     	 movs r1,#52
 114 0018 01FB03F3 	 mul r3,r1,r3
 115 001c 1344     	 add r3,r3,r2
 116 001e 5B68     	 ldr r3,[r3,#4]
 117 0020 C3F3C003 	 ubfx r3,r3,#3,#1
 118 0024 DBB2     	 uxtb r3,r3
 119              	 .loc 1 187 8
 120 0026 002B     	 cmp r3,#0
 121 0028 0BD1     	 bne .L3
 122              	 .loc 1 187 53 discriminator 1
 123 002a FB7B     	 ldrb r3,[r7,#15]
 124 002c 0D4A     	 ldr r2,.L7
 125 002e 3421     	 movs r1,#52
 126 0030 01FB03F3 	 mul r3,r1,r3
 127 0034 1344     	 add r3,r3,r2
 128 0036 5B68     	 ldr r3,[r3,#4]
 129 0038 C3F30013 	 ubfx r3,r3,#4,#1
 130 003c DBB2     	 uxtb r3,r3
 131              	 .loc 1 187 34 discriminator 1
 132 003e 002B     	 cmp r3,#0
 133 0040 01D0     	 beq .L4
 134              	.L3:
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 189:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 135              	 .loc 1 189 14
 136 0042 0123     	 movs r3,#1
 137 0044 BB73     	 strb r3,[r7,#14]
 138              	.L4:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 139              	 .loc 1 185 53 discriminator 2
 140 0046 FB7B     	 ldrb r3,[r7,#15]
 141 0048 0133     	 adds r3,r3,#1
 142 004a FB73     	 strb r3,[r7,#15]
 143              	.L2:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 144              	 .loc 1 185 32 discriminator 1
 145 004c 7B68     	 ldr r3,[r7,#4]
 146 004e 1B7B     	 ldrb r3,[r3,#12]
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 147              	 .loc 1 185 3 discriminator 1
 148 0050 FA7B     	 ldrb r2,[r7,#15]
 149 0052 9A42     	 cmp r2,r3
 150 0054 DDD3     	 bcc .L5
 190:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 192:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 151              	 .loc 1 192 10
 152 0056 BB7B     	 ldrb r3,[r7,#14]
 193:../Libraries/XMCLib/src/xmc_usbd.c **** }
 153              	 .loc 1 193 1
 154 0058 1846     	 mov r0,r3
 155 005a 1437     	 adds r7,r7,#20
 156              	.LCFI3:
 157              	 .cfi_def_cfa_offset 4
 158 005c BD46     	 mov sp,r7
 159              	.LCFI4:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 005e 5DF8047B 	 ldr r7,[sp],#4
 163              	.LCFI5:
 164              	 .cfi_restore 7
 165              	 .cfi_def_cfa_offset 0
 166 0062 7047     	 bx lr
 167              	.L8:
 168              	 .align 2
 169              	.L7:
 170 0064 00000000 	 .word xmc_device
 171              	 .cfi_endproc
 172              	.LFE171:
 174              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 175              	 .align 1
 176              	 .syntax unified
 177              	 .thumb
 178              	 .thumb_func
 179              	 .fpu fpv4-sp-d16
 181              	XMC_USBD_lReadFifo:
 182              	.LFB172:
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** 
 196:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 205:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 206:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num, const uint32_t byte_count)
 207:../Libraries/XMCLib/src/xmc_usbd.c **** {
 183              	 .loc 1 207 1
 184              	 .cfi_startproc
 185              	 
 186              	 
 187              	 
 188 0000 80B4     	 push {r7}
 189              	.LCFI6:
 190              	 .cfi_def_cfa_offset 4
 191              	 .cfi_offset 7,-4
 192 0002 8BB0     	 sub sp,sp,#44
 193              	.LCFI7:
 194              	 .cfi_def_cfa_offset 48
 195 0004 00AF     	 add r7,sp,#0
 196              	.LCFI8:
 197              	 .cfi_def_cfa_register 7
 198 0006 7860     	 str r0,[r7,#4]
 199 0008 3960     	 str r1,[r7]
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 200              	 .loc 1 208 18
 201 000a 7B68     	 ldr r3,[r7,#4]
 202 000c 3422     	 movs r2,#52
 203 000e 02FB03F3 	 mul r3,r2,r3
 204 0012 344A     	 ldr r2,.L17
 205 0014 1344     	 add r3,r3,r2
 206 0016 3B62     	 str r3,[r7,#32]
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 207              	 .loc 1 212 22
 208 0018 324B     	 ldr r3,.L17
 209 001a D3F8E031 	 ldr r3,[r3,#480]
 210 001e FB61     	 str r3,[r7,#28]
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 211              	 .loc 1 215 46
 212 0020 304A     	 ldr r2,.L17
 213 0022 7B68     	 ldr r3,[r7,#4]
 214 0024 7033     	 adds r3,r3,#112
 215 0026 9B00     	 lsls r3,r3,#2
 216 0028 1344     	 add r3,r3,r2
 217 002a 5B68     	 ldr r3,[r3,#4]
 218              	 .loc 1 215 54
 219 002c 1B68     	 ldr r3,[r3]
 220              	 .loc 1 215 12
 221 002e FB60     	 str r3,[r7,#12]
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 222              	 .loc 1 216 14
 223 0030 3B68     	 ldr r3,[r7]
 224 0032 9B08     	 lsrs r3,r3,#2
 225 0034 BB61     	 str r3,[r7,#24]
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 226              	 .loc 1 217 19
 227 0036 BB69     	 ldr r3,[r7,#24]
 228 0038 9B00     	 lsls r3,r3,#2
 229 003a 7B61     	 str r3,[r7,#20]
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 230              	 .loc 1 219 7
 231 003c 7B7B     	 ldrb r3,[r7,#13]
 232 003e 23F07F03 	 bic r3,r3,#127
 233 0042 DBB2     	 uxtb r3,r3
 234              	 .loc 1 219 6
 235 0044 002B     	 cmp r3,#0
 236 0046 47D0     	 beq .L16
 220:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 221:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 237              	 .loc 1 223 14
 238 0048 3B6A     	 ldr r3,[r7,#32]
 239 004a 5B6A     	 ldr r3,[r3,#36]
 240              	 .loc 1 223 11
 241 004c 002B     	 cmp r3,#0
 242 004e 43D0     	 beq .L16
 224:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 225:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 228:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count; i++)
 243              	 .loc 1 230 12
 244 0050 0023     	 movs r3,#0
 245 0052 7B62     	 str r3,[r7,#36]
 246              	 .loc 1 230 5
 247 0054 0AE0     	 b .L11
 248              	.L12:
 231:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 232:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t *)ep->xferBuffer) + i) = *fifo;
 249              	 .loc 1 232 24 discriminator 3
 250 0056 3B6A     	 ldr r3,[r7,#32]
 251 0058 5A6A     	 ldr r2,[r3,#36]
 252              	 .loc 1 232 38 discriminator 3
 253 005a 7B6A     	 ldr r3,[r7,#36]
 254 005c 9B00     	 lsls r3,r3,#2
 255 005e 1344     	 add r3,r3,r2
 256              	 .loc 1 232 45 discriminator 3
 257 0060 FA69     	 ldr r2,[r7,#28]
 258 0062 1268     	 ldr r2,[r2]
 259              	 .loc 1 232 43 discriminator 3
 260 0064 1A60     	 str r2,[r3]
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 261              	 .loc 1 230 35 discriminator 3
 262 0066 7B6A     	 ldr r3,[r7,#36]
 263 0068 0133     	 adds r3,r3,#1
 264 006a 7B62     	 str r3,[r7,#36]
 265              	.L11:
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 266              	 .loc 1 230 5 discriminator 1
 267 006c 7A6A     	 ldr r2,[r7,#36]
 268 006e BB69     	 ldr r3,[r7,#24]
 269 0070 9A42     	 cmp r2,r3
 270 0072 F0D3     	 bcc .L12
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count != temp_word_count)
 271              	 .loc 1 235 8
 272 0074 3A68     	 ldr r2,[r7]
 273 0076 7B69     	 ldr r3,[r7,#20]
 274 0078 9A42     	 cmp r2,r3
 275 007a 21D0     	 beq .L13
 236:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 276              	 .loc 1 237 17
 277 007c FB69     	 ldr r3,[r7,#28]
 278 007e 1B68     	 ldr r3,[r3]
 279 0080 3B61     	 str r3,[r7,#16]
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 280              	 .loc 1 238 14
 281 0082 0023     	 movs r3,#0
 282 0084 7B62     	 str r3,[r7,#36]
 283              	 .loc 1 238 7
 284 0086 15E0     	 b .L14
 285              	.L15:
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 240:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2) + i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)
 286              	 .loc 1 240 95 discriminator 3
 287 0088 7B6A     	 ldr r3,[r7,#36]
 288 008a DB00     	 lsls r3,r3,#3
 289              	 .loc 1 240 89 discriminator 3
 290 008c FF22     	 movs r2,#255
 291 008e 9A40     	 lsls r2,r2,r3
 292              	 .loc 1 240 70 discriminator 3
 293 0090 3B69     	 ldr r3,[r7,#16]
 294 0092 1A40     	 ands r2,r2,r3
 295              	 .loc 1 240 109 discriminator 3
 296 0094 7B6A     	 ldr r3,[r7,#36]
 297 0096 DB00     	 lsls r3,r3,#3
 298              	 .loc 1 240 103 discriminator 3
 299 0098 22FA03F0 	 lsr r0,r2,r3
 300              	 .loc 1 240 11 discriminator 3
 301 009c 3B6A     	 ldr r3,[r7,#32]
 302 009e 5A6A     	 ldr r2,[r3,#36]
 303              	 .loc 1 240 36 discriminator 3
 304 00a0 BB69     	 ldr r3,[r7,#24]
 305 00a2 9900     	 lsls r1,r3,#2
 306              	 .loc 1 240 42 discriminator 3
 307 00a4 7B6A     	 ldr r3,[r7,#36]
 308 00a6 0B44     	 add r3,r3,r1
 309              	 .loc 1 240 23 discriminator 3
 310 00a8 1344     	 add r3,r3,r2
 311              	 .loc 1 240 49 discriminator 3
 312 00aa C2B2     	 uxtb r2,r0
 313              	 .loc 1 240 47 discriminator 3
 314 00ac 1A70     	 strb r2,[r3]
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 315              	 .loc 1 238 57 discriminator 3
 316 00ae 7B6A     	 ldr r3,[r7,#36]
 317 00b0 0133     	 adds r3,r3,#1
 318 00b2 7B62     	 str r3,[r7,#36]
 319              	.L14:
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 320              	 .loc 1 238 37 discriminator 1
 321 00b4 7A69     	 ldr r2,[r7,#20]
 322 00b6 7B6A     	 ldr r3,[r7,#36]
 323 00b8 1344     	 add r3,r3,r2
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 324              	 .loc 1 238 7 discriminator 1
 325 00ba 3A68     	 ldr r2,[r7]
 326 00bc 9A42     	 cmp r2,r3
 327 00be E3D8     	 bhi .L15
 328              	.L13:
 241:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 242:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 243:../Libraries/XMCLib/src/xmc_usbd.c **** 
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 329              	 .loc 1 245 19
 330 00c0 3B6A     	 ldr r3,[r7,#32]
 331 00c2 DA6A     	 ldr r2,[r3,#44]
 332 00c4 3B68     	 ldr r3,[r7]
 333 00c6 1A44     	 add r2,r2,r3
 334 00c8 3B6A     	 ldr r3,[r7,#32]
 335 00ca DA62     	 str r2,[r3,#44]
 246:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 336              	 .loc 1 246 20
 337 00cc 3B6A     	 ldr r3,[r7,#32]
 338 00ce 5A6A     	 ldr r2,[r3,#36]
 339 00d0 3B68     	 ldr r3,[r7]
 340 00d2 1A44     	 add r2,r2,r3
 341 00d4 3B6A     	 ldr r3,[r7,#32]
 342 00d6 5A62     	 str r2,[r3,#36]
 343              	.L16:
 247:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 248:../Libraries/XMCLib/src/xmc_usbd.c **** }
 344              	 .loc 1 248 1
 345 00d8 00BF     	 nop
 346 00da 2C37     	 adds r7,r7,#44
 347              	.LCFI9:
 348              	 .cfi_def_cfa_offset 4
 349 00dc BD46     	 mov sp,r7
 350              	.LCFI10:
 351              	 .cfi_def_cfa_register 13
 352              	 
 353 00de 5DF8047B 	 ldr r7,[sp],#4
 354              	.LCFI11:
 355              	 .cfi_restore 7
 356              	 .cfi_def_cfa_offset 0
 357 00e2 7047     	 bx lr
 358              	.L18:
 359              	 .align 2
 360              	.L17:
 361 00e4 00000000 	 .word xmc_device
 362              	 .cfi_endproc
 363              	.LFE172:
 365              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 366              	 .align 1
 367              	 .syntax unified
 368              	 .thumb
 369              	 .thumb_func
 370              	 .fpu fpv4-sp-d16
 372              	XMC_USBD_lWriteFifo:
 373              	.LFB173:
 249:../Libraries/XMCLib/src/xmc_usbd.c **** 
 250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 258:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 259:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep)
 260:../Libraries/XMCLib/src/xmc_usbd.c **** {
 374              	 .loc 1 260 1
 375              	 .cfi_startproc
 376              	 
 377              	 
 378              	 
 379 0000 80B4     	 push {r7}
 380              	.LCFI12:
 381              	 .cfi_def_cfa_offset 4
 382              	 .cfi_offset 7,-4
 383 0002 89B0     	 sub sp,sp,#36
 384              	.LCFI13:
 385              	 .cfi_def_cfa_offset 40
 386 0004 00AF     	 add r7,sp,#0
 387              	.LCFI14:
 388              	 .cfi_def_cfa_register 7
 389 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 390              	 .loc 1 267 50
 391 0008 7B68     	 ldr r3,[r7,#4]
 392 000a 1B78     	 ldrb r3,[r3]
 393 000c C3F30303 	 ubfx r3,r3,#0,#4
 394 0010 DBB2     	 uxtb r3,r3
 395              	 .loc 1 267 8
 396 0012 234A     	 ldr r2,.L26
 397 0014 7833     	 adds r3,r3,#120
 398 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 399 001a FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 400              	 .loc 1 268 75
 401 001c 7B68     	 ldr r3,[r7,#4]
 402 001e 1B78     	 ldrb r3,[r3]
 403 0020 C3F30303 	 ubfx r3,r3,#0,#4
 404 0024 DBB2     	 uxtb r3,r3
 405              	 .loc 1 268 50
 406 0026 1E4A     	 ldr r2,.L26
 407 0028 6A33     	 adds r3,r3,#106
 408 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 409              	 .loc 1 268 83
 410 002e 9B69     	 ldr r3,[r3,#24]
 411              	 .loc 1 268 17
 412 0030 BB60     	 str r3,[r7,#8]
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 413              	 .loc 1 270 18
 414 0032 7B68     	 ldr r3,[r7,#4]
 415 0034 9A6A     	 ldr r2,[r3,#40]
 416              	 .loc 1 270 35
 417 0036 7B68     	 ldr r3,[r7,#4]
 418 0038 DB6A     	 ldr r3,[r3,#44]
 419              	 .loc 1 270 14
 420 003a D31A     	 subs r3,r2,r3
 421 003c FB61     	 str r3,[r7,#28]
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 422              	 .loc 1 271 6
 423 003e FB69     	 ldr r3,[r7,#28]
 424 0040 002B     	 cmp r3,#0
 425 0042 02D1     	 bne .L20
 272:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 273:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 426              	 .loc 1 273 12
 427 0044 0023     	 movs r3,#0
 428 0046 7B61     	 str r3,[r7,#20]
 429 0048 23E0     	 b .L21
 430              	.L20:
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 276:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 431              	 .loc 1 278 40
 432 004a FB69     	 ldr r3,[r7,#28]
 433 004c 0333     	 adds r3,r3,#3
 434              	 .loc 1 278 16
 435 004e 9B08     	 lsrs r3,r3,#2
 436 0050 BB61     	 str r3,[r7,#24]
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 437              	 .loc 1 279 43
 438 0052 3B89     	 ldrh r3,[r7,#8]
 439              	 .loc 1 279 22
 440 0054 1A46     	 mov r2,r3
 441              	 .loc 1 279 8
 442 0056 BB69     	 ldr r3,[r7,#24]
 443 0058 9342     	 cmp r3,r2
 444 005a 04D9     	 bls .L22
 280:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 445              	 .loc 1 281 41
 446 005c 3B89     	 ldrh r3,[r7,#8]
 447              	 .loc 1 281 18
 448 005e BB61     	 str r3,[r7,#24]
 282:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 449              	 .loc 1 282 18
 450 0060 BB69     	 ldr r3,[r7,#24]
 451 0062 9B00     	 lsls r3,r3,#2
 452 0064 FB61     	 str r3,[r7,#28]
 453              	.L22:
 283:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 284:../Libraries/XMCLib/src/xmc_usbd.c **** 
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count; ep->xferBuffer += 4U)
 454              	 .loc 1 286 12
 455 0066 0023     	 movs r3,#0
 456 0068 3B61     	 str r3,[r7,#16]
 457              	 .loc 1 286 5
 458 006a 0CE0     	 b .L23
 459              	.L24:
 287:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t *)ep->xferBuffer;
 460              	 .loc 1 288 30 discriminator 3
 461 006c 7B68     	 ldr r3,[r7,#4]
 462 006e 5B6A     	 ldr r3,[r3,#36]
 463              	 .loc 1 288 15 discriminator 3
 464 0070 1A68     	 ldr r2,[r3]
 465              	 .loc 1 288 13 discriminator 3
 466 0072 FB68     	 ldr r3,[r7,#12]
 467 0074 1A60     	 str r2,[r3]
 289:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 468              	 .loc 1 289 8 discriminator 3
 469 0076 3B69     	 ldr r3,[r7,#16]
 470 0078 0133     	 adds r3,r3,#1
 471 007a 3B61     	 str r3,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 472              	 .loc 1 286 49 discriminator 3
 473 007c 7B68     	 ldr r3,[r7,#4]
 474 007e 5B6A     	 ldr r3,[r3,#36]
 475 0080 1A1D     	 adds r2,r3,#4
 476 0082 7B68     	 ldr r3,[r7,#4]
 477 0084 5A62     	 str r2,[r3,#36]
 478              	.L23:
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 479              	 .loc 1 286 5 discriminator 1
 480 0086 3A69     	 ldr r2,[r7,#16]
 481 0088 BB69     	 ldr r3,[r7,#24]
 482 008a 9A42     	 cmp r2,r3
 483 008c EED3     	 bcc .L24
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 291:../Libraries/XMCLib/src/xmc_usbd.c ****     result = byte_count;
 484              	 .loc 1 291 12
 485 008e FB69     	 ldr r3,[r7,#28]
 486 0090 7B61     	 str r3,[r7,#20]
 487              	.L21:
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 293:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 488              	 .loc 1 293 10
 489 0092 7B69     	 ldr r3,[r7,#20]
 294:../Libraries/XMCLib/src/xmc_usbd.c **** }
 490              	 .loc 1 294 1
 491 0094 1846     	 mov r0,r3
 492 0096 2437     	 adds r7,r7,#36
 493              	.LCFI15:
 494              	 .cfi_def_cfa_offset 4
 495 0098 BD46     	 mov sp,r7
 496              	.LCFI16:
 497              	 .cfi_def_cfa_register 13
 498              	 
 499 009a 5DF8047B 	 ldr r7,[sp],#4
 500              	.LCFI17:
 501              	 .cfi_restore 7
 502              	 .cfi_def_cfa_offset 0
 503 009e 7047     	 bx lr
 504              	.L27:
 505              	 .align 2
 506              	.L26:
 507 00a0 00000000 	 .word xmc_device
 508              	 .cfi_endproc
 509              	.LFE173:
 511              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 512              	 .align 1
 513              	 .syntax unified
 514              	 .thumb
 515              	 .thumb_func
 516              	 .fpu fpv4-sp-d16
 518              	XMC_USBD_lFlushTXFifo:
 519              	.LFB174:
 295:../Libraries/XMCLib/src/xmc_usbd.c **** 
 296:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 302:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 303:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num)
 304:../Libraries/XMCLib/src/xmc_usbd.c **** {
 520              	 .loc 1 304 1
 521              	 .cfi_startproc
 522              	 
 523              	 
 524              	 
 525 0000 80B4     	 push {r7}
 526              	.LCFI18:
 527              	 .cfi_def_cfa_offset 4
 528              	 .cfi_offset 7,-4
 529 0002 85B0     	 sub sp,sp,#20
 530              	.LCFI19:
 531              	 .cfi_def_cfa_offset 24
 532 0004 00AF     	 add r7,sp,#0
 533              	.LCFI20:
 534              	 .cfi_def_cfa_register 7
 535 0006 0346     	 mov r3,r0
 536 0008 FB71     	 strb r3,[r7,#7]
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 537              	 .loc 1 307 12
 538 000a 0023     	 movs r3,#0
 539 000c BB60     	 str r3,[r7,#8]
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 540              	 .loc 1 309 18
 541 000e BB68     	 ldr r3,[r7,#8]
 542 0010 43F02003 	 orr r3,r3,#32
 543 0014 BB60     	 str r3,[r7,#8]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 544              	 .loc 1 310 17
 545 0016 FB79     	 ldrb r3,[r7,#7]
 546 0018 03F01F03 	 and r3,r3,#31
 547 001c DAB2     	 uxtb r2,r3
 548 001e BB68     	 ldr r3,[r7,#8]
 549 0020 62F38A13 	 bfi r3,r2,#6,#5
 550 0024 BB60     	 str r3,[r7,#8]
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 551              	 .loc 1 311 13
 552 0026 154B     	 ldr r3,.L33
 553 0028 D3F8A031 	 ldr r3,[r3,#416]
 554              	 .loc 1 311 45
 555 002c BA68     	 ldr r2,[r7,#8]
 556              	 .loc 1 311 39
 557 002e 1A61     	 str r2,[r3,#16]
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U; count < 1000U; count++) {}
 558              	 .loc 1 312 14
 559 0030 0023     	 movs r3,#0
 560 0032 FB60     	 str r3,[r7,#12]
 561              	 .loc 1 312 3
 562 0034 02E0     	 b .L29
 563              	.L30:
 564              	 .loc 1 312 40 discriminator 3
 565 0036 FB68     	 ldr r3,[r7,#12]
 566 0038 0133     	 adds r3,r3,#1
 567 003a FB60     	 str r3,[r7,#12]
 568              	.L29:
 569              	 .loc 1 312 3 discriminator 1
 570 003c FB68     	 ldr r3,[r7,#12]
 571 003e B3F57A7F 	 cmp r3,#1000
 572 0042 F8D3     	 bcc .L30
 573              	.L31:
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 314:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 315:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 574              	 .loc 1 315 26 discriminator 1
 575 0044 0D4B     	 ldr r3,.L33
 576 0046 D3F8A031 	 ldr r3,[r3,#416]
 577              	 .loc 1 315 42 discriminator 1
 578 004a 1B69     	 ldr r3,[r3,#16]
 579              	 .loc 1 315 14 discriminator 1
 580 004c BB60     	 str r3,[r7,#8]
 316:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (data.b.txfflsh);
 581              	 .loc 1 317 16 discriminator 1
 582 004e BB68     	 ldr r3,[r7,#8]
 583 0050 C3F34013 	 ubfx r3,r3,#5,#1
 584 0054 DBB2     	 uxtb r3,r3
 585              	 .loc 1 317 3 discriminator 1
 586 0056 002B     	 cmp r3,#0
 587 0058 F4D1     	 bne .L31
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 588              	 .loc 1 318 9
 589 005a 0023     	 movs r3,#0
 590 005c FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 591              	 .loc 1 319 9
 592 005e 00BF     	 nop
 593              	.L32:
 594              	 .loc 1 319 15 discriminator 1
 595 0060 FB68     	 ldr r3,[r7,#12]
 596 0062 5A1C     	 adds r2,r3,#1
 597 0064 FA60     	 str r2,[r7,#12]
 598              	 .loc 1 319 9 discriminator 1
 599 0066 B3F57A7F 	 cmp r3,#1000
 600 006a F9D3     	 bcc .L32
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 321:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 322:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 323:../Libraries/XMCLib/src/xmc_usbd.c **** }
 601              	 .loc 1 323 1
 602 006c 00BF     	 nop
 603 006e 00BF     	 nop
 604 0070 1437     	 adds r7,r7,#20
 605              	.LCFI21:
 606              	 .cfi_def_cfa_offset 4
 607 0072 BD46     	 mov sp,r7
 608              	.LCFI22:
 609              	 .cfi_def_cfa_register 13
 610              	 
 611 0074 5DF8047B 	 ldr r7,[sp],#4
 612              	.LCFI23:
 613              	 .cfi_restore 7
 614              	 .cfi_def_cfa_offset 0
 615 0078 7047     	 bx lr
 616              	.L34:
 617 007a 00BF     	 .align 2
 618              	.L33:
 619 007c 00000000 	 .word xmc_device
 620              	 .cfi_endproc
 621              	.LFE174:
 623              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 624              	 .align 1
 625              	 .syntax unified
 626              	 .thumb
 627              	 .thumb_func
 628              	 .fpu fpv4-sp-d16
 630              	XMC_USBD_lFlushRXFifo:
 631              	.LFB175:
 324:../Libraries/XMCLib/src/xmc_usbd.c **** 
 325:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 326:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 327:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 328:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void)
 329:../Libraries/XMCLib/src/xmc_usbd.c **** {
 632              	 .loc 1 329 1
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	 
 637 0000 80B4     	 push {r7}
 638              	.LCFI24:
 639              	 .cfi_def_cfa_offset 4
 640              	 .cfi_offset 7,-4
 641 0002 83B0     	 sub sp,sp,#12
 642              	.LCFI25:
 643              	 .cfi_def_cfa_offset 16
 644 0004 00AF     	 add r7,sp,#0
 645              	.LCFI26:
 646              	 .cfi_def_cfa_register 7
 330:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;
 331:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 332:../Libraries/XMCLib/src/xmc_usbd.c **** 
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 647              	 .loc 1 333 12
 648 0006 0023     	 movs r3,#0
 649 0008 3B60     	 str r3,[r7]
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 650              	 .loc 1 334 18
 651 000a 3B68     	 ldr r3,[r7]
 652 000c 43F01003 	 orr r3,r3,#16
 653 0010 3B60     	 str r3,[r7]
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 654              	 .loc 1 336 13
 655 0012 154B     	 ldr r3,.L40
 656 0014 D3F8A031 	 ldr r3,[r3,#416]
 657              	 .loc 1 336 45
 658 0018 3A68     	 ldr r2,[r7]
 659              	 .loc 1 336 39
 660 001a 1A61     	 str r2,[r3,#16]
 661              	.L38:
 337:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 338:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 339:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++) {}
 662              	 .loc 1 339 16
 663 001c 0023     	 movs r3,#0
 664 001e 7B60     	 str r3,[r7,#4]
 665              	 .loc 1 339 5
 666 0020 02E0     	 b .L36
 667              	.L37:
 668              	 .loc 1 339 42 discriminator 3
 669 0022 7B68     	 ldr r3,[r7,#4]
 670 0024 0133     	 adds r3,r3,#1
 671 0026 7B60     	 str r3,[r7,#4]
 672              	.L36:
 673              	 .loc 1 339 5 discriminator 1
 674 0028 7B68     	 ldr r3,[r7,#4]
 675 002a B3F57A7F 	 cmp r3,#1000
 676 002e F8D3     	 bcc .L37
 340:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 677              	 .loc 1 340 26
 678 0030 0D4B     	 ldr r3,.L40
 679 0032 D3F8A031 	 ldr r3,[r3,#416]
 680              	 .loc 1 340 42
 681 0036 1B69     	 ldr r3,[r3,#16]
 682              	 .loc 1 340 14
 683 0038 3B60     	 str r3,[r7]
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   while (data.b.rxfflsh);
 684              	 .loc 1 342 16
 685 003a 3B68     	 ldr r3,[r7]
 686 003c C3F30013 	 ubfx r3,r3,#4,#1
 687 0040 DBB2     	 uxtb r3,r3
 688              	 .loc 1 342 3
 689 0042 002B     	 cmp r3,#0
 690 0044 EAD1     	 bne .L38
 343:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 691              	 .loc 1 343 9
 692 0046 0023     	 movs r3,#0
 693 0048 7B60     	 str r3,[r7,#4]
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 694              	 .loc 1 344 9
 695 004a 00BF     	 nop
 696              	.L39:
 697              	 .loc 1 344 15 discriminator 1
 698 004c 7B68     	 ldr r3,[r7,#4]
 699 004e 5A1C     	 adds r2,r3,#1
 700 0050 7A60     	 str r2,[r7,#4]
 701              	 .loc 1 344 9 discriminator 1
 702 0052 B3F57A7F 	 cmp r3,#1000
 703 0056 F9D3     	 bcc .L39
 345:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 346:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 347:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 348:../Libraries/XMCLib/src/xmc_usbd.c **** }
 704              	 .loc 1 348 1
 705 0058 00BF     	 nop
 706 005a 00BF     	 nop
 707 005c 0C37     	 adds r7,r7,#12
 708              	.LCFI27:
 709              	 .cfi_def_cfa_offset 4
 710 005e BD46     	 mov sp,r7
 711              	.LCFI28:
 712              	 .cfi_def_cfa_register 13
 713              	 
 714 0060 5DF8047B 	 ldr r7,[sp],#4
 715              	.LCFI29:
 716              	 .cfi_restore 7
 717              	 .cfi_def_cfa_offset 0
 718 0064 7047     	 bx lr
 719              	.L41:
 720 0066 00BF     	 .align 2
 721              	.L40:
 722 0068 00000000 	 .word xmc_device
 723              	 .cfi_endproc
 724              	.LFE175:
 726              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 727              	 .align 1
 728              	 .syntax unified
 729              	 .thumb
 730              	 .thumb_func
 731              	 .fpu fpv4-sp-d16
 733              	XMC_USBD_lAssignTXFifo:
 734              	.LFB176:
 349:../Libraries/XMCLib/src/xmc_usbd.c **** 
 350:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 351:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 353:../Libraries/XMCLib/src/xmc_usbd.c **** 
 354:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 358:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 359:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 360:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 361:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void)
 362:../Libraries/XMCLib/src/xmc_usbd.c **** {
 735              	 .loc 1 362 1
 736              	 .cfi_startproc
 737              	 
 738              	 
 739              	 
 740 0000 80B4     	 push {r7}
 741              	.LCFI30:
 742              	 .cfi_def_cfa_offset 4
 743              	 .cfi_offset 7,-4
 744 0002 83B0     	 sub sp,sp,#12
 745              	.LCFI31:
 746              	 .cfi_def_cfa_offset 16
 747 0004 00AF     	 add r7,sp,#0
 748              	.LCFI32:
 749              	 .cfi_def_cfa_register 7
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 750              	 .loc 1 363 12
 751 0006 0123     	 movs r3,#1
 752 0008 FB80     	 strh r3,[r7,#6]
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 753              	 .loc 1 364 11
 754 000a 0023     	 movs r3,#0
 755 000c 7B71     	 strb r3,[r7,#5]
 365:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 756              	 .loc 1 365 11
 757 000e 0023     	 movs r3,#0
 758 0010 3B71     	 strb r3,[r7,#4]
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 759              	 .loc 1 366 9
 760 0012 05E0     	 b .L43
 761              	.L45:
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 368:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 762              	 .loc 1 368 10
 763 0014 FB88     	 ldrh r3,[r7,#6]
 764 0016 5B00     	 lsls r3,r3,#1
 765 0018 FB80     	 strh r3,[r7,#6]
 369:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 766              	 .loc 1 369 6
 767 001a 7B79     	 ldrb r3,[r7,#5]
 768 001c 0133     	 adds r3,r3,#1
 769 001e 7B71     	 strb r3,[r7,#5]
 770              	.L43:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 771              	 .loc 1 366 9
 772 0020 7B79     	 ldrb r3,[r7,#5]
 773 0022 062B     	 cmp r3,#6
 774 0024 07D8     	 bhi .L44
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 775              	 .loc 1 366 63 discriminator 1
 776 0026 114B     	 ldr r3,.L48
 777 0028 B3F8FC21 	 ldrh r2,[r3,#508]
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 778              	 .loc 1 366 82 discriminator 1
 779 002c FB88     	 ldrh r3,[r7,#6]
 780 002e 1340     	 ands r3,r3,r2
 781 0030 9BB2     	 uxth r3,r3
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 782              	 .loc 1 366 48 discriminator 1
 783 0032 002B     	 cmp r3,#0
 784 0034 EED1     	 bne .L45
 785              	.L44:
 370:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 371:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 786              	 .loc 1 371 18
 787 0036 0D4B     	 ldr r3,.L48
 788 0038 B3F8FC21 	 ldrh r2,[r3,#508]
 789              	 .loc 1 371 37
 790 003c FB88     	 ldrh r3,[r7,#6]
 791 003e 1340     	 ands r3,r3,r2
 792 0040 9BB2     	 uxth r3,r3
 793              	 .loc 1 371 6
 794 0042 002B     	 cmp r3,#0
 795 0044 0AD1     	 bne .L46
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 373:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 796              	 .loc 1 373 26
 797 0046 094B     	 ldr r3,.L48
 798 0048 B3F8FC21 	 ldrh r2,[r3,#508]
 799 004c FB88     	 ldrh r3,[r7,#6]
 800 004e 1343     	 orrs r3,r3,r2
 801 0050 9AB2     	 uxth r2,r3
 802 0052 064B     	 ldr r3,.L48
 803 0054 A3F8FC21 	 strh r2,[r3,#508]
 374:../Libraries/XMCLib/src/xmc_usbd.c ****     result = i;
 804              	 .loc 1 374 12
 805 0058 7B79     	 ldrb r3,[r7,#5]
 806 005a 3B71     	 strb r3,[r7,#4]
 807              	.L46:
 375:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 376:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 808              	 .loc 1 376 10
 809 005c 3B79     	 ldrb r3,[r7,#4]
 377:../Libraries/XMCLib/src/xmc_usbd.c **** }
 810              	 .loc 1 377 1
 811 005e 1846     	 mov r0,r3
 812 0060 0C37     	 adds r7,r7,#12
 813              	.LCFI33:
 814              	 .cfi_def_cfa_offset 4
 815 0062 BD46     	 mov sp,r7
 816              	.LCFI34:
 817              	 .cfi_def_cfa_register 13
 818              	 
 819 0064 5DF8047B 	 ldr r7,[sp],#4
 820              	.LCFI35:
 821              	 .cfi_restore 7
 822              	 .cfi_def_cfa_offset 0
 823 0068 7047     	 bx lr
 824              	.L49:
 825 006a 00BF     	 .align 2
 826              	.L48:
 827 006c 00000000 	 .word xmc_device
 828              	 .cfi_endproc
 829              	.LFE176:
 831              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 832              	 .align 1
 833              	 .syntax unified
 834              	 .thumb
 835              	 .thumb_func
 836              	 .fpu fpv4-sp-d16
 838              	XMC_USBD_lUnassignFifo:
 839              	.LFB177:
 378:../Libraries/XMCLib/src/xmc_usbd.c **** 
 379:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 382:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 383:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 384:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 385:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr)
 386:../Libraries/XMCLib/src/xmc_usbd.c **** {
 840              	 .loc 1 386 1
 841              	 .cfi_startproc
 842              	 
 843              	 
 844              	 
 845 0000 80B4     	 push {r7}
 846              	.LCFI36:
 847              	 .cfi_def_cfa_offset 4
 848              	 .cfi_offset 7,-4
 849 0002 83B0     	 sub sp,sp,#12
 850              	.LCFI37:
 851              	 .cfi_def_cfa_offset 16
 852 0004 00AF     	 add r7,sp,#0
 853              	.LCFI38:
 854              	 .cfi_def_cfa_register 7
 855 0006 0346     	 mov r3,r0
 856 0008 FB71     	 strb r3,[r7,#7]
 387:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 857              	 .loc 1 387 57
 858 000a 0A4B     	 ldr r3,.L51
 859 000c B3F8FC21 	 ldrh r2,[r3,#508]
 860              	 .loc 1 387 83
 861 0010 FB79     	 ldrb r3,[r7,#7]
 862 0012 0121     	 movs r1,#1
 863 0014 01FA03F3 	 lsl r3,r1,r3
 864              	 .loc 1 387 26
 865 0018 9BB2     	 uxth r3,r3
 866 001a DB43     	 mvns r3,r3
 867 001c 9BB2     	 uxth r3,r3
 868 001e 1340     	 ands r3,r3,r2
 869 0020 9AB2     	 uxth r2,r3
 870              	 .loc 1 387 24
 871 0022 044B     	 ldr r3,.L51
 872 0024 A3F8FC21 	 strh r2,[r3,#508]
 388:../Libraries/XMCLib/src/xmc_usbd.c **** }
 873              	 .loc 1 388 1
 874 0028 00BF     	 nop
 875 002a 0C37     	 adds r7,r7,#12
 876              	.LCFI39:
 877              	 .cfi_def_cfa_offset 4
 878 002c BD46     	 mov sp,r7
 879              	.LCFI40:
 880              	 .cfi_def_cfa_register 13
 881              	 
 882 002e 5DF8047B 	 ldr r7,[sp],#4
 883              	.LCFI41:
 884              	 .cfi_restore 7
 885              	 .cfi_def_cfa_offset 0
 886 0032 7047     	 bx lr
 887              	.L52:
 888              	 .align 2
 889              	.L51:
 890 0034 00000000 	 .word xmc_device
 891              	 .cfi_endproc
 892              	.LFE177:
 894              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 895              	 .align 1
 896              	 .syntax unified
 897              	 .thumb
 898              	 .thumb_func
 899              	 .fpu fpv4-sp-d16
 901              	XMC_USBD_lStartReadXfer:
 902              	.LFB178:
 389:../Libraries/XMCLib/src/xmc_usbd.c **** 
 390:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 398:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 399:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 400:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 401:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep)
 402:../Libraries/XMCLib/src/xmc_usbd.c **** {
 903              	 .loc 1 402 1
 904              	 .cfi_startproc
 905              	 
 906              	 
 907              	 
 908 0000 80B4     	 push {r7}
 909              	.LCFI42:
 910              	 .cfi_def_cfa_offset 4
 911              	 .cfi_offset 7,-4
 912 0002 87B0     	 sub sp,sp,#28
 913              	.LCFI43:
 914              	 .cfi_def_cfa_offset 32
 915 0004 00AF     	 add r7,sp,#0
 916              	.LCFI44:
 917              	 .cfi_def_cfa_register 7
 918 0006 7860     	 str r0,[r7,#4]
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 405:../Libraries/XMCLib/src/xmc_usbd.c **** 
 406:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 919              	 .loc 1 406 12
 920 0008 0023     	 movs r3,#0
 921 000a 3B61     	 str r3,[r7,#16]
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 922              	 .loc 1 407 10
 923 000c 7B68     	 ldr r3,[r7,#4]
 924 000e 1A6B     	 ldr r2,[r3,#48]
 925              	 .loc 1 407 26
 926 0010 7B68     	 ldr r3,[r7,#4]
 927 0012 9B6A     	 ldr r3,[r3,#40]
 928              	 .loc 1 407 22
 929 0014 D31A     	 subs r3,r2,r3
 930              	 .loc 1 407 44
 931 0016 7A68     	 ldr r2,[r7,#4]
 932 0018 9268     	 ldr r2,[r2,#8]
 933 001a C2F31202 	 ubfx r2,r2,#0,#19
 934              	 .loc 1 407 6
 935 001e 9342     	 cmp r3,r2
 936 0020 09D9     	 bls .L54
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 937              	 .loc 1 409 20
 938 0022 7B68     	 ldr r3,[r7,#4]
 939 0024 9B6A     	 ldr r3,[r3,#40]
 940              	 .loc 1 409 25
 941 0026 7A68     	 ldr r2,[r7,#4]
 942 0028 9268     	 ldr r2,[r2,#8]
 943 002a C2F31202 	 ubfx r2,r2,#0,#19
 944              	 .loc 1 409 20
 945 002e 1A44     	 add r2,r2,r3
 946 0030 7B68     	 ldr r3,[r7,#4]
 947 0032 9A62     	 str r2,[r3,#40]
 948 0034 03E0     	 b .L55
 949              	.L54:
 410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 950              	 .loc 1 413 24
 951 0036 7B68     	 ldr r3,[r7,#4]
 952 0038 1A6B     	 ldr r2,[r3,#48]
 953              	 .loc 1 413 20
 954 003a 7B68     	 ldr r3,[r7,#4]
 955 003c 9A62     	 str r2,[r3,#40]
 956              	.L55:
 414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 415:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 957              	 .loc 1 415 39
 958 003e 7B68     	 ldr r3,[r7,#4]
 959 0040 1B78     	 ldrb r3,[r3]
 960 0042 03F00F03 	 and r3,r3,#15
 961 0046 DBB2     	 uxtb r3,r3
 962              	 .loc 1 415 6
 963 0048 002B     	 cmp r3,#0
 964 004a 18D1     	 bne .L56
 965              	.LBB2:
 416:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Setup the endpoint to receive 3 setup packages and one normal package.*/
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Cast the data pointer to use only one variable */
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t *)&data;
 966              	 .loc 1 419 22
 967 004c 07F11003 	 add r3,r7,#16
 968 0050 7B61     	 str r3,[r7,#20]
 420:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 969              	 .loc 1 420 24
 970 0052 7A69     	 ldr r2,[r7,#20]
 971 0054 9378     	 ldrb r3,[r2,#2]
 972 0056 0121     	 movs r1,#1
 973 0058 61F3C403 	 bfi r3,r1,#3,#2
 974 005c 9370     	 strb r3,[r2,#2]
 421:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 975              	 .loc 1 421 24
 976 005e 7A69     	 ldr r2,[r7,#20]
 977 0060 D378     	 ldrb r3,[r2,#3]
 978 0062 43F06003 	 orr r3,r3,#96
 979 0066 D370     	 strb r3,[r2,#3]
 422:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 980              	 .loc 1 422 39
 981 0068 7B68     	 ldr r3,[r7,#4]
 982 006a 1B6B     	 ldr r3,[r3,#48]
 983              	 .loc 1 422 28
 984 006c 03F07F03 	 and r3,r3,#127
 985 0070 D9B2     	 uxtb r1,r3
 986              	 .loc 1 422 26
 987 0072 7A69     	 ldr r2,[r7,#20]
 988 0074 1378     	 ldrb r3,[r2]
 989 0076 61F30603 	 bfi r3,r1,#0,#7
 990 007a 1370     	 strb r3,[r2]
 991              	.LBE2:
 992 007c 32E0     	 b .L57
 993              	.L56:
 423:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 424:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 425:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 427:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 994              	 .loc 1 427 11
 995 007e 7B68     	 ldr r3,[r7,#4]
 996 0080 9B6A     	 ldr r3,[r3,#40]
 997              	 .loc 1 427 8
 998 0082 002B     	 cmp r3,#0
 999 0084 09D1     	 bne .L58
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 429:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 1000              	 .loc 1 429 23
 1001 0086 3B69     	 ldr r3,[r7,#16]
 1002 0088 6FF31203 	 bfc r3,#0,#19
 1003 008c 3B61     	 str r3,[r7,#16]
 430:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 1004              	 .loc 1 430 21
 1005 008e 7B8A     	 ldrh r3,[r7,#18]
 1006 0090 0122     	 movs r2,#1
 1007 0092 62F3CC03 	 bfi r3,r2,#3,#10
 1008 0096 7B82     	 strh r3,[r7,#18]
 1009 0098 24E0     	 b .L57
 1010              	.L58:
 431:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 432:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 433:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 434:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 435:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize - (uint32_t
 1011              	 .loc 1 435 38
 1012 009a 7B68     	 ldr r3,[r7,#4]
 1013 009c 9A6A     	 ldr r2,[r3,#40]
 1014              	 .loc 1 435 55
 1015 009e 7B68     	 ldr r3,[r7,#4]
 1016 00a0 DB6A     	 ldr r3,[r3,#44]
 1017              	 .loc 1 435 51
 1018 00a2 D31A     	 subs r3,r2,r3
 1019              	 .loc 1 435 73
 1020 00a4 7A68     	 ldr r2,[r7,#4]
 1021 00a6 5268     	 ldr r2,[r2,#4]
 1022 00a8 C2F3C622 	 ubfx r2,r2,#11,#7
 1023 00ac D2B2     	 uxtb r2,r2
 1024              	 .loc 1 435 68
 1025 00ae 1344     	 add r3,r3,r2
 1026 00b0 013B     	 subs r3,r3,#1
 1027              	 .loc 1 435 110
 1028 00b2 7A68     	 ldr r2,[r7,#4]
 1029 00b4 5268     	 ldr r2,[r2,#4]
 1030 00b6 C2F3C622 	 ubfx r2,r2,#11,#7
 1031 00ba D2B2     	 uxtb r2,r2
 1032              	 .loc 1 435 106
 1033 00bc B3FBF2F3 	 udiv r3,r3,r2
 1034              	 .loc 1 435 23
 1035 00c0 C3F30903 	 ubfx r3,r3,#0,#10
 1036 00c4 9AB2     	 uxth r2,r3
 1037              	 .loc 1 435 21
 1038 00c6 7B8A     	 ldrh r3,[r7,#18]
 1039 00c8 62F3CC03 	 bfi r3,r2,#3,#10
 1040 00cc 7B82     	 strh r3,[r7,#18]
 436:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1041              	 .loc 1 436 38
 1042 00ce 7B68     	 ldr r3,[r7,#4]
 1043 00d0 9A6A     	 ldr r2,[r3,#40]
 1044              	 .loc 1 436 55
 1045 00d2 7B68     	 ldr r3,[r7,#4]
 1046 00d4 DB6A     	 ldr r3,[r3,#44]
 1047              	 .loc 1 436 51
 1048 00d6 D31A     	 subs r3,r2,r3
 1049              	 .loc 1 436 25
 1050 00d8 C3F31202 	 ubfx r2,r3,#0,#19
 1051              	 .loc 1 436 23
 1052 00dc 3B69     	 ldr r3,[r7,#16]
 1053 00de 62F31203 	 bfi r3,r2,#0,#19
 1054 00e2 3B61     	 str r3,[r7,#16]
 1055              	.L57:
 437:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 438:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 439:../Libraries/XMCLib/src/xmc_usbd.c ****   if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1056              	 .loc 1 439 16
 1057 00e4 224B     	 ldr r3,.L60
 1058 00e6 1B68     	 ldr r3,[r3]
 1059 00e8 5B7B     	 ldrb r3,[r3,#13]
 1060              	 .loc 1 439 6
 1061 00ea 002B     	 cmp r3,#0
 1062 00ec 0DD1     	 bne .L59
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 441:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 1063              	 .loc 1 442 95
 1064 00ee 7B68     	 ldr r3,[r7,#4]
 1065 00f0 596A     	 ldr r1,[r3,#36]
 1066              	 .loc 1 442 62
 1067 00f2 7B68     	 ldr r3,[r7,#4]
 1068 00f4 1B78     	 ldrb r3,[r3]
 1069 00f6 C3F30303 	 ubfx r3,r3,#0,#4
 1070 00fa DBB2     	 uxtb r3,r3
 1071              	 .loc 1 442 37
 1072 00fc 1D4A     	 ldr r2,.L60+4
 1073 00fe 7033     	 adds r3,r3,#112
 1074 0100 9B00     	 lsls r3,r3,#2
 1075 0102 1344     	 add r3,r3,r2
 1076 0104 5B68     	 ldr r3,[r3,#4]
 1077              	 .loc 1 442 82
 1078 0106 0A46     	 mov r2,r1
 1079              	 .loc 1 442 80
 1080 0108 5A61     	 str r2,[r3,#20]
 1081              	.L59:
 443:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 1082              	 .loc 1 445 60
 1083 010a 7B68     	 ldr r3,[r7,#4]
 1084 010c 1B78     	 ldrb r3,[r3]
 1085 010e C3F30303 	 ubfx r3,r3,#0,#4
 1086 0112 DBB2     	 uxtb r3,r3
 1087              	 .loc 1 445 35
 1088 0114 174A     	 ldr r2,.L60+4
 1089 0116 7033     	 adds r3,r3,#112
 1090 0118 9B00     	 lsls r3,r3,#2
 1091 011a 1344     	 add r3,r3,r2
 1092 011c 5B68     	 ldr r3,[r3,#4]
 1093              	 .loc 1 445 85
 1094 011e 3A69     	 ldr r2,[r7,#16]
 1095              	 .loc 1 445 79
 1096 0120 1A61     	 str r2,[r3,#16]
 446:../Libraries/XMCLib/src/xmc_usbd.c **** 
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 1097              	 .loc 1 447 72
 1098 0122 7B68     	 ldr r3,[r7,#4]
 1099 0124 1B78     	 ldrb r3,[r3]
 1100 0126 C3F30303 	 ubfx r3,r3,#0,#4
 1101 012a DBB2     	 uxtb r3,r3
 1102              	 .loc 1 447 47
 1103 012c 114A     	 ldr r2,.L60+4
 1104 012e 7033     	 adds r3,r3,#112
 1105 0130 9B00     	 lsls r3,r3,#2
 1106 0132 1344     	 add r3,r3,r2
 1107 0134 5B68     	 ldr r3,[r3,#4]
 1108              	 .loc 1 447 80
 1109 0136 1B68     	 ldr r3,[r3]
 1110              	 .loc 1 447 13
 1111 0138 FB60     	 str r3,[r7,#12]
 448:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 1112              	 .loc 1 448 16
 1113 013a FB7B     	 ldrb r3,[r7,#15]
 1114 013c 43F00403 	 orr r3,r3,#4
 1115 0140 FB73     	 strb r3,[r7,#15]
 449:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 1116              	 .loc 1 449 17
 1117 0142 FB7B     	 ldrb r3,[r7,#15]
 1118 0144 43F08003 	 orr r3,r3,#128
 1119 0148 FB73     	 strb r3,[r7,#15]
 450:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 1120              	 .loc 1 450 60
 1121 014a 7B68     	 ldr r3,[r7,#4]
 1122 014c 1B78     	 ldrb r3,[r3]
 1123 014e C3F30303 	 ubfx r3,r3,#0,#4
 1124 0152 DBB2     	 uxtb r3,r3
 1125              	 .loc 1 450 35
 1126 0154 074A     	 ldr r2,.L60+4
 1127 0156 7033     	 adds r3,r3,#112
 1128 0158 9B00     	 lsls r3,r3,#2
 1129 015a 1344     	 add r3,r3,r2
 1130 015c 5B68     	 ldr r3,[r3,#4]
 1131              	 .loc 1 450 85
 1132 015e FA68     	 ldr r2,[r7,#12]
 1133              	 .loc 1 450 78
 1134 0160 1A60     	 str r2,[r3]
 451:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1135              	 .loc 1 451 1
 1136 0162 00BF     	 nop
 1137 0164 1C37     	 adds r7,r7,#28
 1138              	.LCFI45:
 1139              	 .cfi_def_cfa_offset 4
 1140 0166 BD46     	 mov sp,r7
 1141              	.LCFI46:
 1142              	 .cfi_def_cfa_register 13
 1143              	 
 1144 0168 5DF8047B 	 ldr r7,[sp],#4
 1145              	.LCFI47:
 1146              	 .cfi_restore 7
 1147              	 .cfi_def_cfa_offset 0
 1148 016c 7047     	 bx lr
 1149              	.L61:
 1150 016e 00BF     	 .align 2
 1151              	.L60:
 1152 0170 00000000 	 .word usbd_init
 1153 0174 00000000 	 .word xmc_device
 1154              	 .cfi_endproc
 1155              	.LFE178:
 1157              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 1158              	 .align 1
 1159              	 .syntax unified
 1160              	 .thumb
 1161              	 .thumb_func
 1162              	 .fpu fpv4-sp-d16
 1164              	XMC_USBD_lStartWriteXfer:
 1165              	.LFB179:
 452:../Libraries/XMCLib/src/xmc_usbd.c **** 
 453:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 458:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 459:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 460:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 461:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep)
 462:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1166              	 .loc 1 462 1
 1167              	 .cfi_startproc
 1168              	 
 1169              	 
 1170              	 
 1171 0000 80B4     	 push {r7}
 1172              	.LCFI48:
 1173              	 .cfi_def_cfa_offset 4
 1174              	 .cfi_offset 7,-4
 1175 0002 85B0     	 sub sp,sp,#20
 1176              	.LCFI49:
 1177              	 .cfi_def_cfa_offset 24
 1178 0004 00AF     	 add r7,sp,#0
 1179              	.LCFI50:
 1180              	 .cfi_def_cfa_register 7
 1181 0006 7860     	 str r0,[r7,#4]
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;
 1182              	 .loc 1 466 12
 1183 0008 0023     	 movs r3,#0
 1184 000a FB60     	 str r3,[r7,#12]
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1185              	 .loc 1 467 69
 1186 000c 7B68     	 ldr r3,[r7,#4]
 1187 000e 1B78     	 ldrb r3,[r3]
 1188 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1189 0014 DBB2     	 uxtb r3,r3
 1190              	 .loc 1 467 44
 1191 0016 5E4A     	 ldr r2,.L70
 1192 0018 6A33     	 adds r3,r3,#106
 1193 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1194              	 .loc 1 467 77
 1195 001e 1B68     	 ldr r3,[r3]
 1196              	 .loc 1 467 11
 1197 0020 BB60     	 str r3,[r7,#8]
 468:../Libraries/XMCLib/src/xmc_usbd.c **** 
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1198              	 .loc 1 469 10
 1199 0022 7B68     	 ldr r3,[r7,#4]
 1200 0024 1A6B     	 ldr r2,[r3,#48]
 1201              	 .loc 1 469 26
 1202 0026 7B68     	 ldr r3,[r7,#4]
 1203 0028 9B6A     	 ldr r3,[r3,#40]
 1204              	 .loc 1 469 22
 1205 002a D31A     	 subs r3,r2,r3
 1206              	 .loc 1 469 45
 1207 002c 7A68     	 ldr r2,[r7,#4]
 1208 002e 9268     	 ldr r2,[r2,#8]
 1209 0030 C2F31202 	 ubfx r2,r2,#0,#19
 1210              	 .loc 1 469 6
 1211 0034 9342     	 cmp r3,r2
 1212 0036 04D2     	 bcs .L63
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 471:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1213              	 .loc 1 471 24
 1214 0038 7B68     	 ldr r3,[r7,#4]
 1215 003a 1A6B     	 ldr r2,[r3,#48]
 1216              	 .loc 1 471 20
 1217 003c 7B68     	 ldr r3,[r7,#4]
 1218 003e 9A62     	 str r2,[r3,#40]
 1219 0040 08E0     	 b .L64
 1220              	.L63:
 472:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 475:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1221              	 .loc 1 475 20
 1222 0042 7B68     	 ldr r3,[r7,#4]
 1223 0044 9B6A     	 ldr r3,[r3,#40]
 1224              	 .loc 1 475 25
 1225 0046 7A68     	 ldr r2,[r7,#4]
 1226 0048 9268     	 ldr r2,[r2,#8]
 1227 004a C2F31202 	 ubfx r2,r2,#0,#19
 1228              	 .loc 1 475 20
 1229 004e 1A44     	 add r2,r2,r3
 1230 0050 7B68     	 ldr r3,[r7,#4]
 1231 0052 9A62     	 str r2,[r3,#40]
 1232              	.L64:
 476:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 477:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1233              	 .loc 1 477 9
 1234 0054 7B68     	 ldr r3,[r7,#4]
 1235 0056 9B6A     	 ldr r3,[r3,#40]
 1236              	 .loc 1 477 6
 1237 0058 002B     	 cmp r3,#0
 1238 005a 09D1     	 bne .L65
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 479:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1239              	 .loc 1 479 21
 1240 005c FB68     	 ldr r3,[r7,#12]
 1241 005e 6FF31203 	 bfc r3,#0,#19
 1242 0062 FB60     	 str r3,[r7,#12]
 480:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1243              	 .loc 1 480 19
 1244 0064 FB89     	 ldrh r3,[r7,#14]
 1245 0066 0122     	 movs r2,#1
 1246 0068 62F3CC03 	 bfi r3,r2,#3,#10
 1247 006c FB81     	 strh r3,[r7,#14]
 1248 006e 6BE0     	 b .L66
 1249              	.L65:
 481:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 482:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 483:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 484:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1250              	 .loc 1 484 41
 1251 0070 7B68     	 ldr r3,[r7,#4]
 1252 0072 1B78     	 ldrb r3,[r3]
 1253 0074 03F00F03 	 and r3,r3,#15
 1254 0078 DBB2     	 uxtb r3,r3
 1255              	 .loc 1 484 8
 1256 007a 002B     	 cmp r3,#0
 1257 007c 10D1     	 bne .L67
 485:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 486:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1258              	 .loc 1 486 21
 1259 007e FB89     	 ldrh r3,[r7,#14]
 1260 0080 0122     	 movs r2,#1
 1261 0082 62F3CC03 	 bfi r3,r2,#3,#10
 1262 0086 FB81     	 strh r3,[r7,#14]
 487:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 488:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1263              	 .loc 1 488 38
 1264 0088 7B68     	 ldr r3,[r7,#4]
 1265 008a 9A6A     	 ldr r2,[r3,#40]
 1266              	 .loc 1 488 55
 1267 008c 7B68     	 ldr r3,[r7,#4]
 1268 008e DB6A     	 ldr r3,[r3,#44]
 1269              	 .loc 1 488 51
 1270 0090 D31A     	 subs r3,r2,r3
 1271              	 .loc 1 488 25
 1272 0092 C3F31202 	 ubfx r2,r3,#0,#19
 1273              	 .loc 1 488 23
 1274 0096 FB68     	 ldr r3,[r7,#12]
 1275 0098 62F31203 	 bfi r3,r2,#0,#19
 1276 009c FB60     	 str r3,[r7,#12]
 1277 009e 2AE0     	 b .L68
 1278              	.L67:
 489:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 492:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1279              	 .loc 1 492 38
 1280 00a0 7B68     	 ldr r3,[r7,#4]
 1281 00a2 9A6A     	 ldr r2,[r3,#40]
 1282              	 .loc 1 492 55
 1283 00a4 7B68     	 ldr r3,[r7,#4]
 1284 00a6 DB6A     	 ldr r3,[r3,#44]
 1285              	 .loc 1 492 51
 1286 00a8 D31A     	 subs r3,r2,r3
 1287              	 .loc 1 492 25
 1288 00aa C3F31202 	 ubfx r2,r3,#0,#19
 1289              	 .loc 1 492 23
 1290 00ae FB68     	 ldr r3,[r7,#12]
 1291 00b0 62F31203 	 bfi r3,r2,#0,#19
 1292 00b4 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1293              	 .loc 1 493 48
 1294 00b6 7B68     	 ldr r3,[r7,#4]
 1295 00b8 9B6A     	 ldr r3,[r3,#40]
 1296              	 .loc 1 493 35
 1297 00ba 9AB2     	 uxth r2,r3
 1298              	 .loc 1 493 65
 1299 00bc 7B68     	 ldr r3,[r7,#4]
 1300 00be DB6A     	 ldr r3,[r3,#44]
 1301              	 .loc 1 493 35
 1302 00c0 9BB2     	 uxth r3,r3
 1303 00c2 D31A     	 subs r3,r2,r3
 1304 00c4 9BB2     	 uxth r3,r3
 1305 00c6 1A46     	 mov r2,r3
 1306              	 .loc 1 493 103
 1307 00c8 7B68     	 ldr r3,[r7,#4]
 1308 00ca 5B68     	 ldr r3,[r3,#4]
 1309 00cc C3F3C623 	 ubfx r3,r3,#11,#7
 1310 00d0 DBB2     	 uxtb r3,r3
 1311 00d2 9BB2     	 uxth r3,r3
 1312              	 .loc 1 493 80
 1313 00d4 013B     	 subs r3,r3,#1
 1314 00d6 9BB2     	 uxth r3,r3
 1315              	 .loc 1 493 78
 1316 00d8 1344     	 add r3,r3,r2
 494:../Libraries/XMCLib/src/xmc_usbd.c ****                                  ep->maxPacketSize);
 1317              	 .loc 1 494 36
 1318 00da 7A68     	 ldr r2,[r7,#4]
 1319 00dc 5268     	 ldr r2,[r2,#4]
 1320 00de C2F3C622 	 ubfx r2,r2,#11,#7
 1321 00e2 D2B2     	 uxtb r2,r2
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1322              	 .loc 1 493 126
 1323 00e4 93FBF2F3 	 sdiv r3,r3,r2
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1324              	 .loc 1 493 23
 1325 00e8 C3F30903 	 ubfx r3,r3,#0,#10
 1326 00ec 9AB2     	 uxth r2,r3
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1327              	 .loc 1 493 21
 1328 00ee FB89     	 ldrh r3,[r7,#14]
 1329 00f0 62F3CC03 	 bfi r3,r2,#3,#10
 1330 00f4 FB81     	 strh r3,[r7,#14]
 1331              	.L68:
 495:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 496:../Libraries/XMCLib/src/xmc_usbd.c ****     if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1332              	 .loc 1 496 18
 1333 00f6 274B     	 ldr r3,.L70+4
 1334 00f8 1B68     	 ldr r3,[r3]
 1335 00fa 5B7B     	 ldrb r3,[r3,#13]
 1336              	 .loc 1 496 8
 1337 00fc 002B     	 cmp r3,#0
 1338 00fe 0CD1     	 bne .L69
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 498:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 499:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1339              	 .loc 1 499 95
 1340 0100 7B68     	 ldr r3,[r7,#4]
 1341 0102 596A     	 ldr r1,[r3,#36]
 1342              	 .loc 1 499 63
 1343 0104 7B68     	 ldr r3,[r7,#4]
 1344 0106 1B78     	 ldrb r3,[r3]
 1345 0108 C3F30303 	 ubfx r3,r3,#0,#4
 1346 010c DBB2     	 uxtb r3,r3
 1347              	 .loc 1 499 38
 1348 010e 204A     	 ldr r2,.L70
 1349 0110 6A33     	 adds r3,r3,#106
 1350 0112 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1351              	 .loc 1 499 83
 1352 0116 0A46     	 mov r2,r1
 1353              	 .loc 1 499 81
 1354 0118 5A61     	 str r2,[r3,#20]
 1355              	.L69:
 500:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 501:../Libraries/XMCLib/src/xmc_usbd.c ****     if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1356              	 .loc 1 501 18
 1357 011a 1E4B     	 ldr r3,.L70+4
 1358 011c 1B68     	 ldr r3,[r3]
 1359 011e 5B7B     	 ldrb r3,[r3,#13]
 1360              	 .loc 1 501 8
 1361 0120 012B     	 cmp r3,#1
 1362 0122 11D1     	 bne .L66
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 503:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 504:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->a
 1363              	 .loc 1 504 17
 1364 0124 1A4B     	 ldr r3,.L70
 1365 0126 D3F8A431 	 ldr r3,[r3,#420]
 1366              	 .loc 1 504 56
 1367 012a 596B     	 ldr r1,[r3,#52]
 1368              	 .loc 1 504 119
 1369 012c 7B68     	 ldr r3,[r7,#4]
 1370 012e 1B78     	 ldrb r3,[r3]
 1371 0130 C3F30303 	 ubfx r3,r3,#0,#4
 1372 0134 DBB2     	 uxtb r3,r3
 1373              	 .loc 1 504 86
 1374 0136 1A46     	 mov r2,r3
 1375              	 .loc 1 504 59
 1376 0138 0123     	 movs r3,#1
 1377 013a 03FA02F2 	 lsl r2,r3,r2
 1378              	 .loc 1 504 17
 1379 013e 144B     	 ldr r3,.L70
 1380 0140 D3F8A431 	 ldr r3,[r3,#420]
 1381              	 .loc 1 504 56
 1382 0144 0A43     	 orrs r2,r2,r1
 1383 0146 5A63     	 str r2,[r3,#52]
 1384              	.L66:
 505:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 507:../Libraries/XMCLib/src/xmc_usbd.c **** 
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1385              	 .loc 1 509 59
 1386 0148 7B68     	 ldr r3,[r7,#4]
 1387 014a 1B78     	 ldrb r3,[r3]
 1388 014c C3F30303 	 ubfx r3,r3,#0,#4
 1389 0150 DBB2     	 uxtb r3,r3
 1390              	 .loc 1 509 34
 1391 0152 0F4A     	 ldr r2,.L70
 1392 0154 6A33     	 adds r3,r3,#106
 1393 0156 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1394              	 .loc 1 509 84
 1395 015a FA68     	 ldr r2,[r7,#12]
 1396              	 .loc 1 509 78
 1397 015c 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1398              	 .loc 1 510 15
 1399 015e FB7A     	 ldrb r3,[r7,#11]
 1400 0160 43F08003 	 orr r3,r3,#128
 1401 0164 FB72     	 strb r3,[r7,#11]
 511:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1402              	 .loc 1 511 14
 1403 0166 FB7A     	 ldrb r3,[r7,#11]
 1404 0168 43F00403 	 orr r3,r3,#4
 1405 016c FB72     	 strb r3,[r7,#11]
 512:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1406              	 .loc 1 512 59
 1407 016e 7B68     	 ldr r3,[r7,#4]
 1408 0170 1B78     	 ldrb r3,[r3]
 1409 0172 C3F30303 	 ubfx r3,r3,#0,#4
 1410 0176 DBB2     	 uxtb r3,r3
 1411              	 .loc 1 512 34
 1412 0178 054A     	 ldr r2,.L70
 1413 017a 6A33     	 adds r3,r3,#106
 1414 017c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1415              	 .loc 1 512 82
 1416 0180 BA68     	 ldr r2,[r7,#8]
 1417              	 .loc 1 512 77
 1418 0182 1A60     	 str r2,[r3]
 513:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1419              	 .loc 1 513 1
 1420 0184 00BF     	 nop
 1421 0186 1437     	 adds r7,r7,#20
 1422              	.LCFI51:
 1423              	 .cfi_def_cfa_offset 4
 1424 0188 BD46     	 mov sp,r7
 1425              	.LCFI52:
 1426              	 .cfi_def_cfa_register 13
 1427              	 
 1428 018a 5DF8047B 	 ldr r7,[sp],#4
 1429              	.LCFI53:
 1430              	 .cfi_restore 7
 1431              	 .cfi_def_cfa_offset 0
 1432 018e 7047     	 bx lr
 1433              	.L71:
 1434              	 .align 2
 1435              	.L70:
 1436 0190 00000000 	 .word xmc_device
 1437 0194 00000000 	 .word usbd_init
 1438              	 .cfi_endproc
 1439              	.LFE179:
 1441              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1442              	 .align 1
 1443              	 .syntax unified
 1444              	 .thumb
 1445              	 .thumb_func
 1446              	 .fpu fpv4-sp-d16
 1448              	XMC_USBD_lHandleUSBReset:
 1449              	.LFB180:
 514:../Libraries/XMCLib/src/xmc_usbd.c **** 
 515:../Libraries/XMCLib/src/xmc_usbd.c **** 
 516:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 520:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 521:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 522:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 523:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj)
 524:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1450              	 .loc 1 524 1
 1451              	 .cfi_startproc
 1452              	 
 1453              	 
 1454 0000 80B5     	 push {r7,lr}
 1455              	.LCFI54:
 1456              	 .cfi_def_cfa_offset 8
 1457              	 .cfi_offset 7,-8
 1458              	 .cfi_offset 14,-4
 1459 0002 88B0     	 sub sp,sp,#32
 1460              	.LCFI55:
 1461              	 .cfi_def_cfa_offset 40
 1462 0004 00AF     	 add r7,sp,#0
 1463              	.LCFI56:
 1464              	 .cfi_def_cfa_register 7
 1465 0006 7860     	 str r0,[r7,#4]
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 528:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 531:../Libraries/XMCLib/src/xmc_usbd.c **** 
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 533:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1466              	 .loc 1 533 24
 1467 0008 504B     	 ldr r3,.L78
 1468 000a D3F8A431 	 ldr r3,[r3,#420]
 1469              	 .loc 1 533 40
 1470 000e 5B68     	 ldr r3,[r3,#4]
 1471              	 .loc 1 533 12
 1472 0010 7B61     	 str r3,[r7,#20]
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1473              	 .loc 1 534 21
 1474 0012 3B7D     	 ldrb r3,[r7,#20]
 1475 0014 43F00103 	 orr r3,r3,#1
 1476 0018 3B75     	 strb r3,[r7,#20]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1477              	 .loc 1 535 13
 1478 001a 4C4B     	 ldr r3,.L78
 1479 001c D3F8A431 	 ldr r3,[r3,#420]
 1480              	 .loc 1 535 42
 1481 0020 7A69     	 ldr r2,[r7,#20]
 1482              	 .loc 1 535 36
 1483 0022 5A60     	 str r2,[r3,#4]
 536:../Libraries/XMCLib/src/xmc_usbd.c **** 
 537:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)XMC_USBD_NUM_EPS; i++)
 1484              	 .loc 1 538 10
 1485 0024 0023     	 movs r3,#0
 1486 0026 FB61     	 str r3,[r7,#28]
 1487              	 .loc 1 538 3
 1488 0028 1AE0     	 b .L73
 1489              	.L74:
 539:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 540:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1490              	 .loc 1 540 49 discriminator 3
 1491 002a 484A     	 ldr r2,.L78
 1492 002c FB69     	 ldr r3,[r7,#28]
 1493 002e 7033     	 adds r3,r3,#112
 1494 0030 9B00     	 lsls r3,r3,#2
 1495 0032 1344     	 add r3,r3,r2
 1496 0034 5B68     	 ldr r3,[r3,#4]
 1497              	 .loc 1 540 52 discriminator 3
 1498 0036 1B68     	 ldr r3,[r3]
 1499              	 .loc 1 540 15 discriminator 3
 1500 0038 BB61     	 str r3,[r7,#24]
 541:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.b.snak = 1U;
 1501              	 .loc 1 541 18 discriminator 3
 1502 003a FB7E     	 ldrb r3,[r7,#27]
 1503 003c 43F00803 	 orr r3,r3,#8
 1504 0040 FB76     	 strb r3,[r7,#27]
 542:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.b.stall = 0U;
 1505              	 .loc 1 542 19 discriminator 3
 1506 0042 BB7E     	 ldrb r3,[r7,#26]
 1507 0044 6FF34513 	 bfc r3,#5,#1
 1508 0048 BB76     	 strb r3,[r7,#26]
 543:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1509              	 .loc 1 543 37 discriminator 3
 1510 004a 404A     	 ldr r2,.L78
 1511 004c FB69     	 ldr r3,[r7,#28]
 1512 004e 7033     	 adds r3,r3,#112
 1513 0050 9B00     	 lsls r3,r3,#2
 1514 0052 1344     	 add r3,r3,r2
 1515 0054 5B68     	 ldr r3,[r3,#4]
 1516              	 .loc 1 543 57 discriminator 3
 1517 0056 BA69     	 ldr r2,[r7,#24]
 1518              	 .loc 1 543 50 discriminator 3
 1519 0058 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1520              	 .loc 1 538 48 discriminator 3
 1521 005a FB69     	 ldr r3,[r7,#28]
 1522 005c 0133     	 adds r3,r3,#1
 1523 005e FB61     	 str r3,[r7,#28]
 1524              	.L73:
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1525              	 .loc 1 538 3 discriminator 1
 1526 0060 FB69     	 ldr r3,[r7,#28]
 1527 0062 062B     	 cmp r3,#6
 1528 0064 E1D9     	 bls .L74
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 545:../Libraries/XMCLib/src/xmc_usbd.c **** 
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1529              	 .loc 1 548 13
 1530 0066 394B     	 ldr r3,.L78
 1531 0068 D3F8A031 	 ldr r3,[r3,#416]
 1532              	 .loc 1 548 39
 1533 006c 4022     	 movs r2,#64
 1534 006e 5A62     	 str r2,[r3,#36]
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1535              	 .loc 1 550 17
 1536 0070 0023     	 movs r3,#0
 1537 0072 3B61     	 str r3,[r7,#16]
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1538              	 .loc 1 551 21
 1539 0074 1023     	 movs r3,#16
 1540 0076 7B82     	 strh r3,[r7,#18]
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1541              	 .loc 1 552 25
 1542 0078 4023     	 movs r3,#64
 1543 007a 3B82     	 strh r3,[r7,#16]
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1544              	 .loc 1 553 13
 1545 007c 334B     	 ldr r3,.L78
 1546 007e D3F8A031 	 ldr r3,[r3,#416]
 1547              	 .loc 1 553 52
 1548 0082 3A69     	 ldr r2,[r7,#16]
 1549              	 .loc 1 553 41
 1550 0084 9A62     	 str r2,[r3,#40]
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U; i < (uint8_t)XMC_USBD_NUM_TX_FIFOS; i++)
 1551              	 .loc 1 555 10
 1552 0086 0123     	 movs r3,#1
 1553 0088 FB61     	 str r3,[r7,#28]
 1554              	 .loc 1 555 3
 1555 008a 11E0     	 b .L75
 1556              	.L76:
 556:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 557:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i - 1U] = (uint32_t)(((256U + (i * (64U))) / 4U) | ((uint32
 1557              	 .loc 1 557 69 discriminator 3
 1558 008c FB69     	 ldr r3,[r7,#28]
 1559 008e 0433     	 adds r3,r3,#4
 1560 0090 9B01     	 lsls r3,r3,#6
 1561              	 .loc 1 557 84 discriminator 3
 1562 0092 9A08     	 lsrs r2,r3,#2
 1563              	 .loc 1 557 15 discriminator 3
 1564 0094 2D4B     	 ldr r3,.L78
 1565 0096 D3F8A011 	 ldr r1,[r3,#416]
 1566              	 .loc 1 557 43 discriminator 3
 1567 009a FB69     	 ldr r3,[r7,#28]
 1568 009c 013B     	 subs r3,r3,#1
 1569              	 .loc 1 557 51 discriminator 3
 1570 009e 42F48012 	 orr r2,r2,#1048576
 1571              	 .loc 1 557 49 discriminator 3
 1572 00a2 4033     	 adds r3,r3,#64
 1573 00a4 9B00     	 lsls r3,r3,#2
 1574 00a6 0B44     	 add r3,r3,r1
 1575 00a8 5A60     	 str r2,[r3,#4]
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1576              	 .loc 1 555 53 discriminator 3
 1577 00aa FB69     	 ldr r3,[r7,#28]
 1578 00ac 0133     	 adds r3,r3,#1
 1579 00ae FB61     	 str r3,[r7,#28]
 1580              	.L75:
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1581              	 .loc 1 555 3 discriminator 1
 1582 00b0 FB69     	 ldr r3,[r7,#28]
 1583 00b2 062B     	 cmp r3,#6
 1584 00b4 EAD9     	 bls .L76
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 559:../Libraries/XMCLib/src/xmc_usbd.c **** 
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1585              	 .loc 1 561 3
 1586 00b6 1020     	 movs r0,#16
 1587 00b8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1588              	 .loc 1 562 3
 1589 00bc 0020     	 movs r0,#0
 1590 00be FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1591              	 .loc 1 563 3
 1592 00c2 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1593              	 .loc 1 566 13
 1594 00c6 0023     	 movs r3,#0
 1595 00c8 FB60     	 str r3,[r7,#12]
 567:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1596              	 .loc 1 567 17
 1597 00ca 3B7B     	 ldrb r3,[r7,#12]
 1598 00cc 43F00103 	 orr r3,r3,#1
 1599 00d0 3B73     	 strb r3,[r7,#12]
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1600              	 .loc 1 568 18
 1601 00d2 BB7B     	 ldrb r3,[r7,#14]
 1602 00d4 43F00103 	 orr r3,r3,#1
 1603 00d8 BB73     	 strb r3,[r7,#14]
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1604              	 .loc 1 569 13
 1605 00da 1C4B     	 ldr r3,.L78
 1606 00dc D3F8A431 	 ldr r3,[r3,#420]
 1607              	 .loc 1 569 47
 1608 00e0 FA68     	 ldr r2,[r7,#12]
 1609              	 .loc 1 569 40
 1610 00e2 DA61     	 str r2,[r3,#28]
 570:../Libraries/XMCLib/src/xmc_usbd.c **** 
 571:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 572:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1611              	 .loc 1 573 3
 1612 00e4 0F20     	 movs r0,#15
 1613 00e6 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 574:../Libraries/XMCLib/src/xmc_usbd.c ****                              (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_E
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 
 576:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 577:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1614              	 .loc 1 577 3
 1615 00ea 0F20     	 movs r0,#15
 1616 00ec FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 578:../Libraries/XMCLib/src/xmc_usbd.c ****                             (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_
 579:../Libraries/XMCLib/src/xmc_usbd.c **** 
 580:../Libraries/XMCLib/src/xmc_usbd.c **** 
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */
 582:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1617              	 .loc 1 582 24
 1618 00f0 164B     	 ldr r3,.L78
 1619 00f2 D3F8A431 	 ldr r3,[r3,#420]
 1620              	 .loc 1 582 40
 1621 00f6 1B68     	 ldr r3,[r3]
 1622              	 .loc 1 582 12
 1623 00f8 BB60     	 str r3,[r7,#8]
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1624              	 .loc 1 583 18
 1625 00fa 3B89     	 ldrh r3,[r7,#8]
 1626 00fc 6FF30A13 	 bfc r3,#4,#7
 1627 0100 3B81     	 strh r3,[r7,#8]
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1628              	 .loc 1 584 13
 1629 0102 124B     	 ldr r3,.L78
 1630 0104 D3F8A431 	 ldr r3,[r3,#420]
 1631              	 .loc 1 584 42
 1632 0108 BA68     	 ldr r2,[r7,#8]
 1633              	 .loc 1 584 36
 1634 010a 1A60     	 str r2,[r3]
 585:../Libraries/XMCLib/src/xmc_usbd.c **** 
 586:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1635              	 .loc 1 586 10
 1636 010c 7B68     	 ldr r3,[r7,#4]
 1637 010e 5B7B     	 ldrb r3,[r3,#13]
 1638              	 .loc 1 586 6
 1639 0110 012B     	 cmp r3,#1
 1640 0112 04D1     	 bne .L77
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 588:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 589:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1641              	 .loc 1 589 15
 1642 0114 0D4B     	 ldr r3,.L78
 1643 0116 D3F8A431 	 ldr r3,[r3,#420]
 1644              	 .loc 1 589 54
 1645 011a 0022     	 movs r2,#0
 1646 011c 5A63     	 str r2,[r3,#52]
 1647              	.L77:
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1648              	 .loc 1 592 30
 1649 011e 0B4A     	 ldr r2,.L78
 1650 0120 5368     	 ldr r3,[r2,#4]
 1651 0122 6FF30413 	 bfc r3,#4,#1
 1652 0126 5360     	 str r3,[r2,#4]
 593:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1653              	 .loc 1 593 29
 1654 0128 084A     	 ldr r2,.L78
 1655 012a 5368     	 ldr r3,[r2,#4]
 1656 012c 6FF3C303 	 bfc r3,#3,#1
 1657 0130 5360     	 str r3,[r2,#4]
 594:../Libraries/XMCLib/src/xmc_usbd.c **** 
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1658              	 .loc 1 595 13
 1659 0132 064B     	 ldr r3,.L78
 1660 0134 D3F80032 	 ldr r3,[r3,#512]
 1661              	 .loc 1 595 3
 1662 0138 0420     	 movs r0,#4
 1663 013a 9847     	 blx r3
 1664              	.LVL0:
 596:../Libraries/XMCLib/src/xmc_usbd.c **** 
 597:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 598:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1665              	 .loc 1 598 3
 1666 013c 0420     	 movs r0,#4
 1667 013e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 599:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1668              	 .loc 1 599 1
 1669 0142 00BF     	 nop
 1670 0144 2037     	 adds r7,r7,#32
 1671              	.LCFI57:
 1672              	 .cfi_def_cfa_offset 8
 1673 0146 BD46     	 mov sp,r7
 1674              	.LCFI58:
 1675              	 .cfi_def_cfa_register 13
 1676              	 
 1677 0148 80BD     	 pop {r7,pc}
 1678              	.L79:
 1679 014a 00BF     	 .align 2
 1680              	.L78:
 1681 014c 00000000 	 .word xmc_device
 1682              	 .cfi_endproc
 1683              	.LFE180:
 1685              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1686              	 .align 1
 1687              	 .syntax unified
 1688              	 .thumb
 1689              	 .thumb_func
 1690              	 .fpu fpv4-sp-d16
 1692              	XMC_USBD_lHandleOTGInt:
 1693              	.LFB181:
 600:../Libraries/XMCLib/src/xmc_usbd.c **** 
 601:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 602:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 603:../Libraries/XMCLib/src/xmc_usbd.c **** *
 604:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 605:../Libraries/XMCLib/src/xmc_usbd.c **** */
 606:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void)
 607:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1694              	 .loc 1 607 1
 1695              	 .cfi_startproc
 1696              	 
 1697              	 
 1698 0000 80B5     	 push {r7,lr}
 1699              	.LCFI59:
 1700              	 .cfi_def_cfa_offset 8
 1701              	 .cfi_offset 7,-8
 1702              	 .cfi_offset 14,-4
 1703 0002 82B0     	 sub sp,sp,#8
 1704              	.LCFI60:
 1705              	 .cfi_def_cfa_offset 16
 1706 0004 00AF     	 add r7,sp,#0
 1707              	.LCFI61:
 1708              	 .cfi_def_cfa_register 7
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 609:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1709              	 .loc 1 609 24
 1710 0006 0F4B     	 ldr r3,.L82
 1711 0008 D3F8A031 	 ldr r3,[r3,#416]
 1712              	 .loc 1 609 40
 1713 000c 5B68     	 ldr r3,[r3,#4]
 1714              	 .loc 1 609 12
 1715 000e 7B60     	 str r3,[r7,#4]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1716              	 .loc 1 610 7
 1717 0010 3B79     	 ldrb r3,[r7,#4]
 1718 0012 03F00403 	 and r3,r3,#4
 1719 0016 DBB2     	 uxtb r3,r3
 1720              	 .loc 1 610 6
 1721 0018 002B     	 cmp r3,#0
 1722 001a 0BD0     	 beq .L81
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 612:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 0U;
 1723              	 .loc 1 612 26
 1724 001c 094A     	 ldr r2,.L82
 1725 001e 92F8FE31 	 ldrb r3,[r2,#510]
 1726 0022 6FF38203 	 bfc r3,#2,#1
 1727 0026 82F8FE31 	 strb r3,[r2,#510]
 613:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1728              	 .loc 1 613 15
 1729 002a 064B     	 ldr r3,.L82
 1730 002c D3F80032 	 ldr r3,[r3,#512]
 1731              	 .loc 1 613 5
 1732 0030 0120     	 movs r0,#1
 1733 0032 9847     	 blx r3
 1734              	.LVL1:
 1735              	.L81:
 614:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 615:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1736              	 .loc 1 615 3
 1737 0034 7B68     	 ldr r3,[r7,#4]
 1738 0036 1846     	 mov r0,r3
 1739 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 616:../Libraries/XMCLib/src/xmc_usbd.c **** 
 617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1740              	 .loc 1 617 1
 1741 003c 00BF     	 nop
 1742 003e 0837     	 adds r7,r7,#8
 1743              	.LCFI62:
 1744              	 .cfi_def_cfa_offset 8
 1745 0040 BD46     	 mov sp,r7
 1746              	.LCFI63:
 1747              	 .cfi_def_cfa_register 13
 1748              	 
 1749 0042 80BD     	 pop {r7,pc}
 1750              	.L83:
 1751              	 .align 2
 1752              	.L82:
 1753 0044 00000000 	 .word xmc_device
 1754              	 .cfi_endproc
 1755              	.LFE181:
 1757              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1758              	 .align 1
 1759              	 .syntax unified
 1760              	 .thumb
 1761              	 .thumb_func
 1762              	 .fpu fpv4-sp-d16
 1764              	XMC_USBD_lHandleEnumDone:
 1765              	.LFB182:
 618:../Libraries/XMCLib/src/xmc_usbd.c **** 
 619:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 621:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 622:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 623:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 624:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void)
 625:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1766              	 .loc 1 625 1
 1767              	 .cfi_startproc
 1768              	 
 1769              	 
 1770 0000 80B5     	 push {r7,lr}
 1771              	.LCFI64:
 1772              	 .cfi_def_cfa_offset 8
 1773              	 .cfi_offset 7,-8
 1774              	 .cfi_offset 14,-4
 1775 0002 82B0     	 sub sp,sp,#8
 1776              	.LCFI65:
 1777              	 .cfi_def_cfa_offset 16
 1778 0004 00AF     	 add r7,sp,#0
 1779              	.LCFI66:
 1780              	 .cfi_def_cfa_register 7
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 627:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 630:../Libraries/XMCLib/src/xmc_usbd.c **** 
 631:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_in_register[0U]->diepctl;
 1781              	 .loc 1 631 46
 1782 0006 1B4B     	 ldr r3,.L85
 1783 0008 D3F8A831 	 ldr r3,[r3,#424]
 1784              	 .loc 1 631 50
 1785 000c 1B68     	 ldr r3,[r3]
 1786              	 .loc 1 631 13
 1787 000e 7B60     	 str r3,[r7,#4]
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1788              	 .loc 1 632 15
 1789 0010 BB88     	 ldrh r3,[r7,#4]
 1790 0012 6FF30A03 	 bfc r3,#0,#11
 1791 0016 BB80     	 strh r3,[r7,#4]
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1792              	 .loc 1 633 34
 1793 0018 164B     	 ldr r3,.L85
 1794 001a D3F8A831 	 ldr r3,[r3,#424]
 1795              	 .loc 1 633 55
 1796 001e 7A68     	 ldr r2,[r7,#4]
 1797              	 .loc 1 633 48
 1798 0020 1A60     	 str r2,[r3]
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 635:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1799              	 .loc 1 636 26
 1800 0022 144A     	 ldr r2,.L85
 1801 0024 92F8FE31 	 ldrb r3,[r2,#510]
 1802 0028 43F00103 	 orr r3,r3,#1
 1803 002c 82F8FE31 	 strb r3,[r2,#510]
 637:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1804              	 .loc 1 637 24
 1805 0030 104A     	 ldr r2,.L85
 1806 0032 92F8FE31 	 ldrb r3,[r2,#510]
 1807 0036 43F00403 	 orr r3,r3,#4
 1808 003a 82F8FE31 	 strb r3,[r2,#510]
 638:../Libraries/XMCLib/src/xmc_usbd.c **** 
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1809              	 .loc 1 639 13
 1810 003e 0D4B     	 ldr r3,.L85
 1811 0040 D3F80032 	 ldr r3,[r3,#512]
 1812              	 .loc 1 639 3
 1813 0044 0220     	 movs r0,#2
 1814 0046 9847     	 blx r3
 1815              	.LVL2:
 640:../Libraries/XMCLib/src/xmc_usbd.c **** 
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */
 642:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1816              	 .loc 1 642 27
 1817 0048 0A4B     	 ldr r3,.L85
 1818 004a D3F8A031 	 ldr r3,[r3,#416]
 1819              	 .loc 1 642 43
 1820 004e DB68     	 ldr r3,[r3,#12]
 1821              	 .loc 1 642 15
 1822 0050 3B60     	 str r3,[r7]
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1823              	 .loc 1 643 23
 1824 0052 7B78     	 ldrb r3,[r7,#1]
 1825 0054 0922     	 movs r2,#9
 1826 0056 62F38503 	 bfi r3,r2,#2,#4
 1827 005a 7B70     	 strb r3,[r7,#1]
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1828              	 .loc 1 644 13
 1829 005c 054B     	 ldr r3,.L85
 1830 005e D3F8A031 	 ldr r3,[r3,#416]
 1831              	 .loc 1 644 48
 1832 0062 3A68     	 ldr r2,[r7]
 1833              	 .loc 1 644 39
 1834 0064 DA60     	 str r2,[r3,#12]
 645:../Libraries/XMCLib/src/xmc_usbd.c **** 
 646:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 647:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1835              	 .loc 1 647 3
 1836 0066 0B20     	 movs r0,#11
 1837 0068 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 648:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1838              	 .loc 1 648 1
 1839 006c 00BF     	 nop
 1840 006e 0837     	 adds r7,r7,#8
 1841              	.LCFI67:
 1842              	 .cfi_def_cfa_offset 8
 1843 0070 BD46     	 mov sp,r7
 1844              	.LCFI68:
 1845              	 .cfi_def_cfa_register 13
 1846              	 
 1847 0072 80BD     	 pop {r7,pc}
 1848              	.L86:
 1849              	 .align 2
 1850              	.L85:
 1851 0074 00000000 	 .word xmc_device
 1852              	 .cfi_endproc
 1853              	.LFE182:
 1855              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1856              	 .align 1
 1857              	 .syntax unified
 1858              	 .thumb
 1859              	 .thumb_func
 1860              	 .fpu fpv4-sp-d16
 1862              	XMC_USBD_lHandleOEPInt:
 1863              	.LFB183:
 649:../Libraries/XMCLib/src/xmc_usbd.c **** 
 650:../Libraries/XMCLib/src/xmc_usbd.c **** 
 651:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 654:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 655:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 656:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 657:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj)
 658:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1864              	 .loc 1 658 1
 1865              	 .cfi_startproc
 1866              	 
 1867              	 
 1868 0000 80B5     	 push {r7,lr}
 1869              	.LCFI69:
 1870              	 .cfi_def_cfa_offset 8
 1871              	 .cfi_offset 7,-8
 1872              	 .cfi_offset 14,-4
 1873 0002 8CB0     	 sub sp,sp,#48
 1874              	.LCFI70:
 1875              	 .cfi_def_cfa_offset 56
 1876 0004 00AF     	 add r7,sp,#0
 1877              	.LCFI71:
 1878              	 .cfi_def_cfa_register 7
 1879 0006 7860     	 str r0,[r7,#4]
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 666:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 669:../Libraries/XMCLib/src/xmc_usbd.c **** 
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1880              	 .loc 1 670 25
 1881 0008 694B     	 ldr r3,.L98
 1882 000a D3F8A431 	 ldr r3,[r3,#420]
 1883              	 .loc 1 670 41
 1884 000e 9B69     	 ldr r3,[r3,#24]
 1885              	 .loc 1 670 13
 1886 0010 FB61     	 str r3,[r7,#28]
 671:../Libraries/XMCLib/src/xmc_usbd.c **** 
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1887              	 .loc 1 672 28
 1888 0012 674B     	 ldr r3,.L98
 1889 0014 D3F8A431 	 ldr r3,[r3,#420]
 1890              	 .loc 1 672 44
 1891 0018 DB69     	 ldr r3,[r3,#28]
 1892              	 .loc 1 672 16
 1893 001a BB61     	 str r3,[r7,#24]
 673:../Libraries/XMCLib/src/xmc_usbd.c **** 
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;
 1894              	 .loc 1 674 27
 1895 001c 644B     	 ldr r3,.L98
 1896 001e D3F8A431 	 ldr r3,[r3,#420]
 1897              	 .loc 1 674 43
 1898 0022 5B69     	 ldr r3,[r3,#20]
 1899              	 .loc 1 674 15
 1900 0024 7B61     	 str r3,[r7,#20]
 675:../Libraries/XMCLib/src/xmc_usbd.c **** 
 676:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1901              	 .loc 1 676 18
 1902 0026 FA8B     	 ldrh r2,[r7,#30]
 1903              	 .loc 1 676 36
 1904 0028 7B8B     	 ldrh r3,[r7,#26]
 1905              	 .loc 1 676 8
 1906 002a 1340     	 ands r3,r3,r2
 1907 002c BB85     	 strh r3,[r7,#44]
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1908              	 .loc 1 677 10
 1909 002e 0023     	 movs r3,#0
 1910 0030 87F82F30 	 strb r3,[r7,#47]
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1911              	 .loc 1 678 16
 1912 0034 0023     	 movs r3,#0
 1913 0036 FB60     	 str r3,[r7,#12]
 679:../Libraries/XMCLib/src/xmc_usbd.c **** 
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1914              	 .loc 1 680 9
 1915 0038 AAE0     	 b .L88
 1916              	.L97:
 681:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1917              	 .loc 1 682 19
 1918 003a BA8D     	 ldrh r2,[r7,#44]
 1919              	 .loc 1 682 22
 1920 003c 97F82F30 	 ldrb r3,[r7,#47]
 1921              	 .loc 1 682 19
 1922 0040 42FA03F3 	 asr r3,r2,r3
 1923              	 .loc 1 682 11
 1924 0044 7B85     	 strh r3,[r7,#42]
 683:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1925              	 .loc 1 683 10
 1926 0046 7B8D     	 ldrh r3,[r7,#42]
 1927 0048 03F00103 	 and r3,r3,#1
 1928 004c 3B85     	 strh r3,[r7,#40]
 684:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 1929              	 .loc 1 684 8
 1930 004e 3B8D     	 ldrh r3,[r7,#40]
 1931 0050 002B     	 cmp r3,#0
 1932 0052 00F09880 	 beq .L89
 685:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1933              	 .loc 1 687 26
 1934 0056 97F82F30 	 ldrb r3,[r7,#47]
 1935              	 .loc 1 687 10
 1936 005a 3422     	 movs r2,#52
 1937 005c 02FB03F3 	 mul r3,r2,r3
 1938 0060 534A     	 ldr r2,.L98
 1939 0062 1344     	 add r3,r3,r2
 1940 0064 7B62     	 str r3,[r7,#36]
 688:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1941              	 .loc 1 688 53
 1942 0066 97F82F30 	 ldrb r3,[r7,#47]
 1943 006a 514A     	 ldr r2,.L98
 1944 006c 7033     	 adds r3,r3,#112
 1945 006e 9B00     	 lsls r3,r3,#2
 1946 0070 1344     	 add r3,r3,r2
 1947 0072 5B68     	 ldr r3,[r3,#4]
 1948              	 .loc 1 688 61
 1949 0074 9A68     	 ldr r2,[r3,#8]
 1950              	 .loc 1 688 80
 1951 0076 7B69     	 ldr r3,[r7,#20]
 1952              	 .loc 1 688 71
 1953 0078 1340     	 ands r3,r3,r2
 1954              	 .loc 1 688 19
 1955 007a 3B61     	 str r3,[r7,#16]
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1956              	 .loc 1 689 14
 1957 007c 7B68     	 ldr r3,[r7,#4]
 1958 007e 5B7B     	 ldrb r3,[r3,#13]
 1959              	 .loc 1 689 10
 1960 0080 002B     	 cmp r3,#0
 1961 0082 08D1     	 bne .L90
 690:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 691:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1962              	 .loc 1 691 56
 1963 0084 97F82F30 	 ldrb r3,[r7,#47]
 1964 0088 494A     	 ldr r2,.L98
 1965 008a 7033     	 adds r3,r3,#112
 1966 008c 9B00     	 lsls r3,r3,#2
 1967 008e 1344     	 add r3,r3,r2
 1968 0090 5B68     	 ldr r3,[r3,#4]
 1969              	 .loc 1 691 64
 1970 0092 1B69     	 ldr r3,[r3,#16]
 1971              	 .loc 1 691 22
 1972 0094 FB60     	 str r3,[r7,#12]
 1973              	.L90:
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 693:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Setup Phase Complete */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1974              	 .loc 1 694 11
 1975 0096 3B7C     	 ldrb r3,[r7,#16]
 1976 0098 03F00803 	 and r3,r3,#8
 1977 009c DBB2     	 uxtb r3,r3
 1978              	 .loc 1 694 10
 1979 009e 002B     	 cmp r3,#0
 1980 00a0 2FD0     	 beq .L91
 695:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 697:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1981              	 .loc 1 697 23
 1982 00a2 7A6A     	 ldr r2,[r7,#36]
 1983 00a4 1379     	 ldrb r3,[r2,#4]
 1984 00a6 6FF34513 	 bfc r3,#5,#1
 1985 00aa 1371     	 strb r3,[r2,#4]
 698:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1986              	 .loc 1 698 16
 1987 00ac 7B68     	 ldr r3,[r7,#4]
 1988 00ae 5B7B     	 ldrb r3,[r3,#13]
 1989              	 .loc 1 698 12
 1990 00b0 002B     	 cmp r3,#0
 1991 00b2 0AD1     	 bne .L92
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 700:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 701:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 702:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 1992              	 .loc 1 702 77
 1993 00b4 07F10C03 	 add r3,r7,#12
 1994              	 .loc 1 702 90
 1995 00b8 DB78     	 ldrb r3,[r3,#3]
 1996 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1997 00be DBB2     	 uxtb r3,r3
 701:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 1998              	 .loc 1 701 78
 1999 00c0 C3F10303 	 rsb r3,r3,#3
 701:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 2000              	 .loc 1 701 35
 2001 00c4 DA00     	 lsls r2,r3,#3
 701:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 2002              	 .loc 1 701 33
 2003 00c6 7B6A     	 ldr r3,[r7,#36]
 2004 00c8 1A61     	 str r2,[r3,#16]
 2005              	.L92:
 703:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 704:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2006              	 .loc 1 704 16
 2007 00ca 7B68     	 ldr r3,[r7,#4]
 2008 00cc 5B7B     	 ldrb r3,[r3,#13]
 2009              	 .loc 1 704 12
 2010 00ce 012B     	 cmp r3,#1
 2011 00d0 06D1     	 bne .L93
 705:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 706:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable += ep->xferCount;
 2012              	 .loc 1 706 33
 2013 00d2 7B6A     	 ldr r3,[r7,#36]
 2014 00d4 1A69     	 ldr r2,[r3,#16]
 2015              	 .loc 1 706 38
 2016 00d6 7B6A     	 ldr r3,[r7,#36]
 2017 00d8 DB6A     	 ldr r3,[r3,#44]
 2018              	 .loc 1 706 33
 2019 00da 1A44     	 add r2,r2,r3
 2020 00dc 7B6A     	 ldr r3,[r7,#36]
 2021 00de 1A61     	 str r2,[r3,#16]
 2022              	.L93:
 707:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 708:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->outInUse = 0U;
 2023              	 .loc 1 708 22
 2024 00e0 7A6A     	 ldr r2,[r7,#36]
 2025 00e2 5368     	 ldr r3,[r2,#4]
 2026 00e4 6FF30413 	 bfc r3,#4,#1
 2027 00e8 5360     	 str r3,[r2,#4]
 709:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.EndpointEvent_cb(0U, XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 2028              	 .loc 1 709 19
 2029 00ea 314B     	 ldr r3,.L98
 2030 00ec D3F80432 	 ldr r3,[r3,#516]
 2031              	 .loc 1 709 9
 2032 00f0 0021     	 movs r1,#0
 2033 00f2 0020     	 movs r0,#0
 2034 00f4 9847     	 blx r3
 2035              	.LVL3:
 710:../Libraries/XMCLib/src/xmc_usbd.c ****         /* clear the interrupt */
 711:../Libraries/XMCLib/src/xmc_usbd.c ****         XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP, ep_num);
 2036              	 .loc 1 711 9
 2037 00f6 97F82F30 	 ldrb r3,[r7,#47]
 2038 00fa 1946     	 mov r1,r3
 2039 00fc 0820     	 movs r0,#8
 2040 00fe FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 2041              	.L91:
 712:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 713:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 2042              	 .loc 1 713 11
 2043 0102 3B7C     	 ldrb r3,[r7,#16]
 2044 0104 03F00103 	 and r3,r3,#1
 2045 0108 DBB2     	 uxtb r3,r3
 2046              	 .loc 1 713 10
 2047 010a 002B     	 cmp r3,#0
 2048 010c 34D0     	 beq .L94
 714:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 715:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2049              	 .loc 1 715 16
 2050 010e 7B68     	 ldr r3,[r7,#4]
 2051 0110 5B7B     	 ldrb r3,[r3,#13]
 2052              	 .loc 1 715 12
 2053 0112 002B     	 cmp r3,#0
 2054 0114 15D1     	 bne .L95
 2055              	.LBB3:
 716:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 717:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 2056              	 .loc 1 717 31
 2057 0116 7B6A     	 ldr r3,[r7,#36]
 2058 0118 9A6A     	 ldr r2,[r3,#40]
 2059              	 .loc 1 717 48
 2060 011a 7B6A     	 ldr r3,[r7,#36]
 2061 011c DB6A     	 ldr r3,[r3,#44]
 2062              	 .loc 1 717 44
 2063 011e D31A     	 subs r3,r2,r3
 2064              	 .loc 1 717 73
 2065 0120 FA68     	 ldr r2,[r7,#12]
 2066 0122 C2F31202 	 ubfx r2,r2,#0,#19
 2067              	 .loc 1 717 20
 2068 0126 9B1A     	 subs r3,r3,r2
 2069 0128 3B62     	 str r3,[r7,#32]
 718:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2070              	 .loc 1 718 25
 2071 012a 7B6A     	 ldr r3,[r7,#36]
 2072 012c DA6A     	 ldr r2,[r3,#44]
 2073 012e 3B6A     	 ldr r3,[r7,#32]
 2074 0130 1A44     	 add r2,r2,r3
 2075 0132 7B6A     	 ldr r3,[r7,#36]
 2076 0134 DA62     	 str r2,[r3,#44]
 719:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2077              	 .loc 1 719 26
 2078 0136 7B6A     	 ldr r3,[r7,#36]
 2079 0138 5A6A     	 ldr r2,[r3,#36]
 2080 013a 3B6A     	 ldr r3,[r7,#32]
 2081 013c 1A44     	 add r2,r2,r3
 2082 013e 7B6A     	 ldr r3,[r7,#36]
 2083 0140 5A62     	 str r2,[r3,#36]
 2084              	.L95:
 2085              	.LBE3:
 720:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 721:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 2086              	 .loc 1 721 15
 2087 0142 7B6A     	 ldr r3,[r7,#36]
 2088 0144 1A6B     	 ldr r2,[r3,#48]
 2089              	 .loc 1 721 32
 2090 0146 7B6A     	 ldr r3,[r7,#36]
 2091 0148 9B6A     	 ldr r3,[r3,#40]
 2092              	 .loc 1 721 12
 2093 014a 9A42     	 cmp r2,r3
 2094 014c 11D1     	 bne .L96
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 723:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 2095              	 .loc 1 723 37
 2096 014e 7B6A     	 ldr r3,[r7,#36]
 2097 0150 DA6A     	 ldr r2,[r3,#44]
 2098              	 .loc 1 723 33
 2099 0152 7B6A     	 ldr r3,[r7,#36]
 2100 0154 1A61     	 str r2,[r3,#16]
 724:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 2101              	 .loc 1 724 24
 2102 0156 7A6A     	 ldr r2,[r7,#36]
 2103 0158 5368     	 ldr r3,[r2,#4]
 2104 015a 6FF30413 	 bfc r3,#4,#1
 2105 015e 5360     	 str r3,[r2,#4]
 725:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num, XMC_USBD_EP_EVENT_OUT);
 2106              	 .loc 1 725 21
 2107 0160 134B     	 ldr r3,.L98
 2108 0162 D3F80432 	 ldr r3,[r3,#516]
 2109              	 .loc 1 725 11
 2110 0166 97F82F20 	 ldrb r2,[r7,#47]
 2111 016a 0121     	 movs r1,#1
 2112 016c 1046     	 mov r0,r2
 2113 016e 9847     	 blx r3
 2114              	.LVL4:
 2115 0170 02E0     	 b .L94
 2116              	.L96:
 726:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 728:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 729:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 2117              	 .loc 1 729 11
 2118 0172 786A     	 ldr r0,[r7,#36]
 2119 0174 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 2120              	.L94:
 730:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 731:../Libraries/XMCLib/src/xmc_usbd.c **** 
 732:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 733:../Libraries/XMCLib/src/xmc_usbd.c **** 
 734:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32, ep_num);
 2121              	 .loc 1 734 7
 2122 0178 3B69     	 ldr r3,[r7,#16]
 2123 017a 97F82F20 	 ldrb r2,[r7,#47]
 2124 017e 1146     	 mov r1,r2
 2125 0180 1846     	 mov r0,r3
 2126 0182 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 2127              	.L89:
 735:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 736:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2128              	 .loc 1 736 11
 2129 0186 97F82F30 	 ldrb r3,[r7,#47]
 2130 018a 0133     	 adds r3,r3,#1
 2131 018c 87F82F30 	 strb r3,[r7,#47]
 2132              	.L88:
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2133              	 .loc 1 680 10
 2134 0190 BA8D     	 ldrh r2,[r7,#44]
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2135              	 .loc 1 680 25
 2136 0192 97F82F30 	 ldrb r3,[r7,#47]
 2137 0196 42FA03F3 	 asr r3,r2,r3
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2138              	 .loc 1 680 9
 2139 019a 002B     	 cmp r3,#0
 2140 019c 7FF44DAF 	 bne .L97
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 738:../Libraries/XMCLib/src/xmc_usbd.c **** 
 739:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 740:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 2141              	 .loc 1 740 3
 2142 01a0 0D20     	 movs r0,#13
 2143 01a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 741:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2144              	 .loc 1 741 1
 2145 01a6 00BF     	 nop
 2146 01a8 3037     	 adds r7,r7,#48
 2147              	.LCFI72:
 2148              	 .cfi_def_cfa_offset 8
 2149 01aa BD46     	 mov sp,r7
 2150              	.LCFI73:
 2151              	 .cfi_def_cfa_register 13
 2152              	 
 2153 01ac 80BD     	 pop {r7,pc}
 2154              	.L99:
 2155 01ae 00BF     	 .align 2
 2156              	.L98:
 2157 01b0 00000000 	 .word xmc_device
 2158              	 .cfi_endproc
 2159              	.LFE183:
 2161              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 2162              	 .align 1
 2163              	 .syntax unified
 2164              	 .thumb
 2165              	 .thumb_func
 2166              	 .fpu fpv4-sp-d16
 2168              	XMC_USBD_lHandleIEPInt:
 2169              	.LFB184:
 742:../Libraries/XMCLib/src/xmc_usbd.c **** 
 743:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 746:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 747:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 748:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 749:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj)
 750:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2170              	 .loc 1 750 1
 2171              	 .cfi_startproc
 2172              	 
 2173              	 
 2174 0000 80B5     	 push {r7,lr}
 2175              	.LCFI74:
 2176              	 .cfi_def_cfa_offset 8
 2177              	 .cfi_offset 7,-8
 2178              	 .cfi_offset 14,-4
 2179 0002 8CB0     	 sub sp,sp,#48
 2180              	.LCFI75:
 2181              	 .cfi_def_cfa_offset 56
 2182 0004 00AF     	 add r7,sp,#0
 2183              	.LCFI76:
 2184              	 .cfi_def_cfa_register 7
 2185 0006 7860     	 str r0,[r7,#4]
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 758:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 761:../Libraries/XMCLib/src/xmc_usbd.c **** 
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 2186              	 .loc 1 762 25
 2187 0008 6B4B     	 ldr r3,.L110
 2188 000a D3F8A431 	 ldr r3,[r3,#420]
 2189              	 .loc 1 762 41
 2190 000e 9B69     	 ldr r3,[r3,#24]
 2191              	 .loc 1 762 13
 2192 0010 7B61     	 str r3,[r7,#20]
 763:../Libraries/XMCLib/src/xmc_usbd.c **** 
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 2193              	 .loc 1 764 27
 2194 0012 694B     	 ldr r3,.L110
 2195 0014 D3F8A431 	 ldr r3,[r3,#420]
 2196              	 .loc 1 764 43
 2197 0018 1B69     	 ldr r3,[r3,#16]
 2198              	 .loc 1 764 15
 2199 001a 3B61     	 str r3,[r7,#16]
 765:../Libraries/XMCLib/src/xmc_usbd.c **** 
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 2200              	 .loc 1 766 16
 2201 001c 0023     	 movs r3,#0
 2202 001e BB60     	 str r3,[r7,#8]
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 2203              	 .loc 1 767 8
 2204 0020 BB8A     	 ldrh r3,[r7,#20]
 2205 0022 BB85     	 strh r3,[r7,#44]
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 2206              	 .loc 1 768 10
 2207 0024 0023     	 movs r3,#0
 2208 0026 87F82F30 	 strb r3,[r7,#47]
 769:../Libraries/XMCLib/src/xmc_usbd.c **** 
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 2209              	 .loc 1 770 9
 2210 002a B6E0     	 b .L101
 2211              	.L109:
 771:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 2212              	 .loc 1 772 14
 2213 002c BA8D     	 ldrh r2,[r7,#44]
 2214              	 .loc 1 772 32
 2215 002e 97F82F30 	 ldrb r3,[r7,#47]
 2216              	 .loc 1 772 29
 2217 0032 42FA03F3 	 asr r3,r2,r3
 2218              	 .loc 1 772 11
 2219 0036 7B85     	 strh r3,[r7,#42]
 773:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 2220              	 .loc 1 773 10
 2221 0038 7B8D     	 ldrh r3,[r7,#42]
 2222 003a 03F00103 	 and r3,r3,#1
 2223 003e 3B85     	 strh r3,[r7,#40]
 774:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 2224              	 .loc 1 774 8
 2225 0040 3B8D     	 ldrh r3,[r7,#40]
 2226 0042 002B     	 cmp r3,#0
 2227 0044 00F0A480 	 beq .L102
 775:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 2228              	 .loc 1 776 26
 2229 0048 97F82F30 	 ldrb r3,[r7,#47]
 2230              	 .loc 1 776 10
 2231 004c 3422     	 movs r2,#52
 2232 004e 02FB03F3 	 mul r3,r2,r3
 2233 0052 594A     	 ldr r2,.L110
 2234 0054 1344     	 add r3,r3,r2
 2235 0056 7B62     	 str r3,[r7,#36]
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 2236              	 .loc 1 777 58
 2237 0058 97F82F30 	 ldrb r3,[r7,#47]
 2238 005c 564A     	 ldr r2,.L110
 2239 005e 6A33     	 adds r3,r3,#106
 2240 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2241              	 .loc 1 777 15
 2242 0064 9B68     	 ldr r3,[r3,#8]
 2243 0066 3B62     	 str r3,[r7,#32]
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 779:../Libraries/XMCLib/src/xmc_usbd.c ****                     ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep-
 2244              	 .loc 1 779 55
 2245 0068 534B     	 ldr r3,.L110
 2246 006a D3F8A431 	 ldr r3,[r3,#420]
 2247              	 .loc 1 779 71
 2248 006e 5B6B     	 ldr r3,[r3,#52]
 2249              	 .loc 1 779 121
 2250 0070 7A6A     	 ldr r2,[r7,#36]
 2251 0072 1278     	 ldrb r2,[r2]
 2252 0074 C2F30302 	 ubfx r2,r2,#0,#4
 2253 0078 D2B2     	 uxtb r2,r2
 2254              	 .loc 1 779 24
 2255 007a D340     	 lsrs r3,r3,r2
 780:../Libraries/XMCLib/src/xmc_usbd.c ****                        0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2256              	 .loc 1 780 30
 2257 007c DB01     	 lsls r3,r3,#7
 2258 007e 03F08002 	 and r2,r3,#128
 2259              	 .loc 1 780 56
 2260 0082 3B69     	 ldr r3,[r7,#16]
 2261              	 .loc 1 780 37
 2262 0084 1A43     	 orrs r2,r2,r3
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2263              	 .loc 1 778 29
 2264 0086 3B6A     	 ldr r3,[r7,#32]
 2265 0088 1340     	 ands r3,r3,r2
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2266              	 .loc 1 778 19
 2267 008a FB60     	 str r3,[r7,#12]
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2268              	 .loc 1 781 14
 2269 008c 7B68     	 ldr r3,[r7,#4]
 2270 008e 5B7B     	 ldrb r3,[r3,#13]
 2271              	 .loc 1 781 10
 2272 0090 002B     	 cmp r3,#0
 2273 0092 07D1     	 bne .L103
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 783:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 2274              	 .loc 1 783 55
 2275 0094 97F82F30 	 ldrb r3,[r7,#47]
 2276 0098 474A     	 ldr r2,.L110
 2277 009a 6A33     	 adds r3,r3,#106
 2278 009c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2279              	 .loc 1 783 63
 2280 00a0 1B69     	 ldr r3,[r3,#16]
 2281              	 .loc 1 783 22
 2282 00a2 BB60     	 str r3,[r7,#8]
 2283              	.L103:
 784:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 785:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2284              	 .loc 1 785 14
 2285 00a4 7B68     	 ldr r3,[r7,#4]
 2286 00a6 5B7B     	 ldrb r3,[r3,#13]
 2287              	 .loc 1 785 10
 2288 00a8 012B     	 cmp r3,#1
 2289 00aa 15D1     	 bne .L104
 786:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 787:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 2290              	 .loc 1 787 13
 2291 00ac 3B7B     	 ldrb r3,[r7,#12]
 2292 00ae 23F07F03 	 bic r3,r3,#127
 2293 00b2 DBB2     	 uxtb r3,r3
 2294              	 .loc 1 787 12
 2295 00b4 002B     	 cmp r3,#0
 2296 00b6 0FD0     	 beq .L104
 2297              	.LBB4:
 788:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 790:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 2298              	 .loc 1 790 19
 2299 00b8 786A     	 ldr r0,[r7,#36]
 2300 00ba FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 2301 00be F861     	 str r0,[r7,#28]
 791:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2302              	 .loc 1 791 25
 2303 00c0 7B6A     	 ldr r3,[r7,#36]
 2304 00c2 DA6A     	 ldr r2,[r3,#44]
 2305 00c4 FB69     	 ldr r3,[r7,#28]
 2306 00c6 1A44     	 add r2,r2,r3
 2307 00c8 7B6A     	 ldr r3,[r7,#36]
 2308 00ca DA62     	 str r2,[r3,#44]
 792:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2309              	 .loc 1 792 26
 2310 00cc 7B6A     	 ldr r3,[r7,#36]
 2311 00ce 5A6A     	 ldr r2,[r3,#36]
 2312 00d0 FB69     	 ldr r3,[r7,#28]
 2313 00d2 1A44     	 add r2,r2,r3
 2314 00d4 7B6A     	 ldr r3,[r7,#36]
 2315 00d6 5A62     	 str r2,[r3,#36]
 2316              	.L104:
 2317              	.LBE4:
 793:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 794:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 795:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 2318              	 .loc 1 795 11
 2319 00d8 3B7B     	 ldrb r3,[r7,#12]
 2320 00da 03F00103 	 and r3,r3,#1
 2321 00de DBB2     	 uxtb r3,r3
 2322              	 .loc 1 795 10
 2323 00e0 002B     	 cmp r3,#0
 2324 00e2 4ED0     	 beq .L105
 796:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 797:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2325              	 .loc 1 797 16
 2326 00e4 7B68     	 ldr r3,[r7,#4]
 2327 00e6 5B7B     	 ldrb r3,[r3,#13]
 2328              	 .loc 1 797 12
 2329 00e8 002B     	 cmp r3,#0
 2330 00ea 1DD1     	 bne .L106
 798:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 800:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 2331              	 .loc 1 800 34
 2332 00ec 7A89     	 ldrh r2,[r7,#10]
 2333 00ee 41F6F873 	 movw r3,#8184
 2334 00f2 1340     	 ands r3,r3,r2
 2335 00f4 9BB2     	 uxth r3,r3
 2336              	 .loc 1 800 14
 2337 00f6 002B     	 cmp r3,#0
 2338 00f8 16D1     	 bne .L106
 2339              	 .loc 1 800 65 discriminator 1
 2340 00fa BB68     	 ldr r3,[r7,#8]
 2341 00fc C3F31203 	 ubfx r3,r3,#0,#19
 2342              	 .loc 1 800 41 discriminator 1
 2343 0100 002B     	 cmp r3,#0
 2344 0102 11D1     	 bne .L106
 2345              	.LBB5:
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 802:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 2346              	 .loc 1 802 32
 2347 0104 7B6A     	 ldr r3,[r7,#36]
 2348 0106 9A6A     	 ldr r2,[r3,#40]
 2349              	 .loc 1 802 49
 2350 0108 7B6A     	 ldr r3,[r7,#36]
 2351 010a DB6A     	 ldr r3,[r3,#44]
 2352              	 .loc 1 802 22
 2353 010c D31A     	 subs r3,r2,r3
 2354 010e BB61     	 str r3,[r7,#24]
 803:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2355              	 .loc 1 803 27
 2356 0110 7B6A     	 ldr r3,[r7,#36]
 2357 0112 DA6A     	 ldr r2,[r3,#44]
 2358 0114 BB69     	 ldr r3,[r7,#24]
 2359 0116 1A44     	 add r2,r2,r3
 2360 0118 7B6A     	 ldr r3,[r7,#36]
 2361 011a DA62     	 str r2,[r3,#44]
 804:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2362              	 .loc 1 804 28
 2363 011c 7B6A     	 ldr r3,[r7,#36]
 2364 011e 5A6A     	 ldr r2,[r3,#36]
 2365 0120 BB69     	 ldr r3,[r7,#24]
 2366 0122 1A44     	 add r2,r2,r3
 2367 0124 7B6A     	 ldr r3,[r7,#36]
 2368 0126 5A62     	 str r2,[r3,#36]
 2369              	.L106:
 2370              	.LBE5:
 805:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 806:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 807:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 2371              	 .loc 1 807 15
 2372 0128 7B6A     	 ldr r3,[r7,#36]
 2373 012a 1A6B     	 ldr r2,[r3,#48]
 2374              	 .loc 1 807 32
 2375 012c 7B6A     	 ldr r3,[r7,#36]
 2376 012e 9B6A     	 ldr r3,[r3,#40]
 2377              	 .loc 1 807 12
 2378 0130 9A42     	 cmp r2,r3
 2379 0132 23D1     	 bne .L107
 808:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2380              	 .loc 1 809 23
 2381 0134 7A6A     	 ldr r2,[r7,#36]
 2382 0136 5368     	 ldr r3,[r2,#4]
 2383 0138 6FF3C303 	 bfc r3,#3,#1
 2384 013c 5360     	 str r3,[r2,#4]
 810:../Libraries/XMCLib/src/xmc_usbd.c ****           if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2385              	 .loc 1 810 18
 2386 013e 7B68     	 ldr r3,[r7,#4]
 2387 0140 5B7B     	 ldrb r3,[r3,#13]
 2388              	 .loc 1 810 14
 2389 0142 012B     	 cmp r3,#1
 2390 0144 0ED1     	 bne .L108
 811:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 812:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 813:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 814:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2391              	 .loc 1 814 36
 2392 0146 1C4B     	 ldr r3,.L110
 2393 0148 D3F8A431 	 ldr r3,[r3,#420]
 2394              	 .loc 1 814 52
 2395 014c 596B     	 ldr r1,[r3,#52]
 2396              	 .loc 1 814 93
 2397 014e 97F82F30 	 ldrb r3,[r7,#47]
 2398 0152 0122     	 movs r2,#1
 2399 0154 02FA03F3 	 lsl r3,r2,r3
 2400              	 .loc 1 814 77
 2401 0158 DA43     	 mvns r2,r3
 813:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2402              	 .loc 1 813 23
 2403 015a 174B     	 ldr r3,.L110
 2404 015c D3F8A431 	 ldr r3,[r3,#420]
 2405              	 .loc 1 814 15
 2406 0160 0A40     	 ands r2,r2,r1
 813:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2407              	 .loc 1 813 62
 2408 0162 5A63     	 str r2,[r3,#52]
 2409              	.L108:
 815:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 816:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num, XMC_USBD_EP_EVENT_IN);
 2410              	 .loc 1 816 21
 2411 0164 144B     	 ldr r3,.L110
 2412 0166 D3F80432 	 ldr r3,[r3,#516]
 2413              	 .loc 1 816 11
 2414 016a 97F82F20 	 ldrb r2,[r7,#47]
 2415 016e 62F07F02 	 orn r2,r2,#127
 2416 0172 D2B2     	 uxtb r2,r2
 2417 0174 0221     	 movs r1,#2
 2418 0176 1046     	 mov r0,r2
 2419 0178 9847     	 blx r3
 2420              	.LVL5:
 2421 017a 02E0     	 b .L105
 2422              	.L107:
 817:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 818:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 820:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 821:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2423              	 .loc 1 821 11
 2424 017c 786A     	 ldr r0,[r7,#36]
 2425 017e FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2426              	.L105:
 822:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 823:../Libraries/XMCLib/src/xmc_usbd.c **** 
 824:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 825:../Libraries/XMCLib/src/xmc_usbd.c **** 
 826:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32, ep_num);
 2427              	 .loc 1 826 48
 2428 0182 FB68     	 ldr r3,[r7,#12]
 2429              	 .loc 1 826 7
 2430 0184 97F82F20 	 ldrb r2,[r7,#47]
 2431 0188 1146     	 mov r1,r2
 2432 018a 1846     	 mov r0,r3
 2433 018c FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2434              	.L102:
 827:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 828:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2435              	 .loc 1 828 11
 2436 0190 97F82F30 	 ldrb r3,[r7,#47]
 2437 0194 0133     	 adds r3,r3,#1
 2438 0196 87F82F30 	 strb r3,[r7,#47]
 2439              	.L101:
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2440              	 .loc 1 770 10
 2441 019a BA8D     	 ldrh r2,[r7,#44]
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2442              	 .loc 1 770 25
 2443 019c 97F82F30 	 ldrb r3,[r7,#47]
 2444 01a0 42FA03F3 	 asr r3,r2,r3
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2445              	 .loc 1 770 9
 2446 01a4 002B     	 cmp r3,#0
 2447 01a6 7FF441AF 	 bne .L109
 829:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 830:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2448              	 .loc 1 830 3
 2449 01aa 0E20     	 movs r0,#14
 2450 01ac FFF7FEFF 	 bl XMC_USBD_ClearEvent
 831:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2451              	 .loc 1 831 1
 2452 01b0 00BF     	 nop
 2453 01b2 3037     	 adds r7,r7,#48
 2454              	.LCFI77:
 2455              	 .cfi_def_cfa_offset 8
 2456 01b4 BD46     	 mov sp,r7
 2457              	.LCFI78:
 2458              	 .cfi_def_cfa_register 13
 2459              	 
 2460 01b6 80BD     	 pop {r7,pc}
 2461              	.L111:
 2462              	 .align 2
 2463              	.L110:
 2464 01b8 00000000 	 .word xmc_device
 2465              	 .cfi_endproc
 2466              	.LFE184:
 2468              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2469              	 .align 1
 2470              	 .syntax unified
 2471              	 .thumb
 2472              	 .thumb_func
 2473              	 .fpu fpv4-sp-d16
 2475              	XMC_USBD_lHandleRxFLvl:
 2476              	.LFB185:
 832:../Libraries/XMCLib/src/xmc_usbd.c **** 
 833:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 835:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 836:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 837:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 838:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void)
 839:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2477              	 .loc 1 839 1
 2478              	 .cfi_startproc
 2479              	 
 2480              	 
 2481 0000 80B5     	 push {r7,lr}
 2482              	.LCFI79:
 2483              	 .cfi_def_cfa_offset 8
 2484              	 .cfi_offset 7,-8
 2485              	 .cfi_offset 14,-4
 2486 0002 82B0     	 sub sp,sp,#8
 2487              	.LCFI80:
 2488              	 .cfi_def_cfa_offset 16
 2489 0004 00AF     	 add r7,sp,#0
 2490              	.LCFI81:
 2491              	 .cfi_def_cfa_register 7
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;
 841:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2492              	 .loc 1 841 24
 2493 0006 1E4B     	 ldr r3,.L122
 2494 0008 D3F8A031 	 ldr r3,[r3,#416]
 2495              	 .loc 1 841 40
 2496 000c 1B6A     	 ldr r3,[r3,#32]
 2497              	 .loc 1 841 12
 2498 000e 7B60     	 str r3,[r7,#4]
 842:../Libraries/XMCLib/src/xmc_usbd.c **** 
 843:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2499              	 .loc 1 843 17
 2500 0010 BB79     	 ldrb r3,[r7,#6]
 2501 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2502 0016 DBB2     	 uxtb r3,r3
 2503 0018 013B     	 subs r3,r3,#1
 2504 001a 052B     	 cmp r3,#5
 2505 001c 2AD8     	 bhi .L121
 2506 001e 01A2     	 adr r2,.L115
 2507 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2508              	 .p2align 2
 2509              	.L115:
 2510 0024 75000000 	 .word .L121+1
 2511 0028 3D000000 	 .word .L118+1
 2512 002c 75000000 	 .word .L121+1
 2513 0030 75000000 	 .word .L121+1
 2514 0034 75000000 	 .word .L121+1
 2515 0038 59000000 	 .word .L114+1
 2516              	 .p2align 1
 2517              	.L118:
 844:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 845:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 846:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 847:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum, (uint32_t)data.b.bcnt);
 2518              	 .loc 1 850 42
 2519 003c 3B79     	 ldrb r3,[r7,#4]
 2520 003e C3F30303 	 ubfx r3,r3,#0,#4
 2521 0042 DBB2     	 uxtb r3,r3
 2522              	 .loc 1 850 7
 2523 0044 1A46     	 mov r2,r3
 2524              	 .loc 1 850 66
 2525 0046 BB88     	 ldrh r3,[r7,#4]
 2526 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2527 004c 9BB2     	 uxth r3,r3
 2528              	 .loc 1 850 7
 2529 004e 1946     	 mov r1,r3
 2530 0050 1046     	 mov r0,r2
 2531 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2532              	 .loc 1 851 7
 2533 0056 0EE0     	 b .L120
 2534              	.L114:
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum, (uint32_t)data.b.bcnt);
 2535              	 .loc 1 853 42
 2536 0058 3B79     	 ldrb r3,[r7,#4]
 2537 005a C3F30303 	 ubfx r3,r3,#0,#4
 2538 005e DBB2     	 uxtb r3,r3
 2539              	 .loc 1 853 7
 2540 0060 1A46     	 mov r2,r3
 2541              	 .loc 1 853 66
 2542 0062 BB88     	 ldrh r3,[r7,#4]
 2543 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2544 0068 9BB2     	 uxth r3,r3
 2545              	 .loc 1 853 7
 2546 006a 1946     	 mov r1,r3
 2547 006c 1046     	 mov r0,r2
 2548 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 854:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2549              	 .loc 1 854 7
 2550 0072 00E0     	 b .L120
 2551              	.L121:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 856:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 857:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 858:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2552              	 .loc 1 858 7
 2553 0074 00BF     	 nop
 2554              	.L120:
 859:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 860:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 861:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2555              	 .loc 1 861 1
 2556 0076 00BF     	 nop
 2557 0078 0837     	 adds r7,r7,#8
 2558              	.LCFI82:
 2559              	 .cfi_def_cfa_offset 8
 2560 007a BD46     	 mov sp,r7
 2561              	.LCFI83:
 2562              	 .cfi_def_cfa_register 13
 2563              	 
 2564 007c 80BD     	 pop {r7,pc}
 2565              	.L123:
 2566 007e 00BF     	 .align 2
 2567              	.L122:
 2568 0080 00000000 	 .word xmc_device
 2569              	 .cfi_endproc
 2570              	.LFE185:
 2572              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2573              	 .align 1
 2574              	 .global XMC_USBD_IRQHandler
 2575              	 .syntax unified
 2576              	 .thumb
 2577              	 .thumb_func
 2578              	 .fpu fpv4-sp-d16
 2580              	XMC_USBD_IRQHandler:
 2581              	.LFB186:
 862:../Libraries/XMCLib/src/xmc_usbd.c **** 
 863:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 866:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 867:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 868:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 869:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj)
 870:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2582              	 .loc 1 870 1
 2583              	 .cfi_startproc
 2584              	 
 2585              	 
 2586 0000 80B5     	 push {r7,lr}
 2587              	.LCFI84:
 2588              	 .cfi_def_cfa_offset 8
 2589              	 .cfi_offset 7,-8
 2590              	 .cfi_offset 14,-4
 2591 0002 84B0     	 sub sp,sp,#16
 2592              	.LCFI85:
 2593              	 .cfi_def_cfa_offset 24
 2594 0004 00AF     	 add r7,sp,#0
 2595              	.LCFI86:
 2596              	 .cfi_def_cfa_register 7
 2597 0006 7860     	 str r0,[r7,#4]
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2598              	 .loc 1 874 27
 2599 0008 504B     	 ldr r3,.L137
 2600 000a D3F8A031 	 ldr r3,[r3,#416]
 2601              	 .loc 1 874 43
 2602 000e 9B69     	 ldr r3,[r3,#24]
 2603              	 .loc 1 874 15
 2604 0010 FB60     	 str r3,[r7,#12]
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2605              	 .loc 1 875 24
 2606 0012 4E4B     	 ldr r3,.L137
 2607 0014 D3F8A031 	 ldr r3,[r3,#416]
 2608              	 .loc 1 875 40
 2609 0018 5A69     	 ldr r2,[r3,#20]
 2610              	 .loc 1 875 59
 2611 001a FB68     	 ldr r3,[r7,#12]
 2612              	 .loc 1 875 50
 2613 001c 1340     	 ands r3,r3,r2
 2614              	 .loc 1 875 12
 2615 001e BB60     	 str r3,[r7,#8]
 876:../Libraries/XMCLib/src/xmc_usbd.c **** 
 877:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2616              	 .loc 1 877 7
 2617 0020 3B7A     	 ldrb r3,[r7,#8]
 2618 0022 03F00803 	 and r3,r3,#8
 2619 0026 DBB2     	 uxtb r3,r3
 2620              	 .loc 1 877 6
 2621 0028 002B     	 cmp r3,#0
 2622 002a 07D0     	 beq .L125
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 879:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2623              	 .loc 1 879 15
 2624 002c 474B     	 ldr r3,.L137
 2625 002e D3F80032 	 ldr r3,[r3,#512]
 2626              	 .loc 1 879 5
 2627 0032 0920     	 movs r0,#9
 2628 0034 9847     	 blx r3
 2629              	.LVL6:
 880:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2630              	 .loc 1 880 5
 2631 0036 0920     	 movs r0,#9
 2632 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2633              	.L125:
 881:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 882:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2634              	 .loc 1 882 10
 2635 003c 7B68     	 ldr r3,[r7,#4]
 2636 003e 5B7B     	 ldrb r3,[r3,#13]
 2637              	 .loc 1 882 6
 2638 0040 012B     	 cmp r3,#1
 2639 0042 19D1     	 bne .L126
 883:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 884:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2640              	 .loc 1 884 9
 2641 0044 3B7A     	 ldrb r3,[r7,#8]
 2642 0046 03F01003 	 and r3,r3,#16
 2643 004a DBB2     	 uxtb r3,r3
 2644              	 .loc 1 884 8
 2645 004c 002B     	 cmp r3,#0
 2646 004e 13D0     	 beq .L126
 885:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2647              	 .loc 1 887 27
 2648 0050 3B7B     	 ldrb r3,[r7,#12]
 2649 0052 6FF30413 	 bfc r3,#4,#1
 2650 0056 3B73     	 strb r3,[r7,#12]
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2651              	 .loc 1 888 17
 2652 0058 3C4B     	 ldr r3,.L137
 2653 005a D3F8A031 	 ldr r3,[r3,#416]
 2654              	 .loc 1 888 52
 2655 005e FA68     	 ldr r2,[r7,#12]
 2656              	 .loc 1 888 43
 2657 0060 9A61     	 str r2,[r3,#24]
 889:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2658              	 .loc 1 889 7
 2659 0062 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 890:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2660              	 .loc 1 890 27
 2661 0066 3B7B     	 ldrb r3,[r7,#12]
 2662 0068 43F01003 	 orr r3,r3,#16
 2663 006c 3B73     	 strb r3,[r7,#12]
 891:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2664              	 .loc 1 891 17
 2665 006e 374B     	 ldr r3,.L137
 2666 0070 D3F8A031 	 ldr r3,[r3,#416]
 2667              	 .loc 1 891 52
 2668 0074 FA68     	 ldr r2,[r7,#12]
 2669              	 .loc 1 891 43
 2670 0076 9A61     	 str r2,[r3,#24]
 2671              	.L126:
 892:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 893:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2672              	 .loc 1 894 7
 2673 0078 7B7A     	 ldrb r3,[r7,#9]
 2674 007a 03F00403 	 and r3,r3,#4
 2675 007e DBB2     	 uxtb r3,r3
 2676              	 .loc 1 894 6
 2677 0080 002B     	 cmp r3,#0
 2678 0082 02D0     	 beq .L127
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 896:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2679              	 .loc 1 896 5
 2680 0084 0A20     	 movs r0,#10
 2681 0086 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2682              	.L127:
 897:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 898:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2683              	 .loc 1 898 7
 2684 008a 7B7A     	 ldrb r3,[r7,#9]
 2685 008c 03F00803 	 and r3,r3,#8
 2686 0090 DBB2     	 uxtb r3,r3
 2687              	 .loc 1 898 6
 2688 0092 002B     	 cmp r3,#0
 2689 0094 07D0     	 beq .L128
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 900:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2690              	 .loc 1 900 15
 2691 0096 2D4B     	 ldr r3,.L137
 2692 0098 D3F80032 	 ldr r3,[r3,#512]
 2693              	 .loc 1 900 5
 2694 009c 0620     	 movs r0,#6
 2695 009e 9847     	 blx r3
 2696              	.LVL7:
 901:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2697              	 .loc 1 901 5
 2698 00a0 0620     	 movs r0,#6
 2699 00a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2700              	.L128:
 902:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 903:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2701              	 .loc 1 903 7
 2702 00a6 FB7A     	 ldrb r3,[r7,#11]
 2703 00a8 23F07F03 	 bic r3,r3,#127
 2704 00ac DBB2     	 uxtb r3,r3
 2705              	 .loc 1 903 6
 2706 00ae 002B     	 cmp r3,#0
 2707 00b0 07D0     	 beq .L129
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 905:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2708              	 .loc 1 905 15
 2709 00b2 264B     	 ldr r3,.L137
 2710 00b4 D3F80032 	 ldr r3,[r3,#512]
 2711              	 .loc 1 905 5
 2712 00b8 0820     	 movs r0,#8
 2713 00ba 9847     	 blx r3
 2714              	.LVL8:
 906:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2715              	 .loc 1 906 5
 2716 00bc 0820     	 movs r0,#8
 2717 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2718              	.L129:
 907:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 908:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2719              	 .loc 1 908 7
 2720 00c2 FB7A     	 ldrb r3,[r7,#11]
 2721 00c4 03F04003 	 and r3,r3,#64
 2722 00c8 DBB2     	 uxtb r3,r3
 2723              	 .loc 1 908 6
 2724 00ca 002B     	 cmp r3,#0
 2725 00cc 0ED0     	 beq .L130
 909:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 910:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2726              	 .loc 1 910 26
 2727 00ce 1F4A     	 ldr r2,.L137
 2728 00d0 92F8FE31 	 ldrb r3,[r2,#510]
 2729 00d4 43F00403 	 orr r3,r3,#4
 2730 00d8 82F8FE31 	 strb r3,[r2,#510]
 911:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2731              	 .loc 1 911 15
 2732 00dc 1B4B     	 ldr r3,.L137
 2733 00de D3F80032 	 ldr r3,[r3,#512]
 2734              	 .loc 1 911 5
 2735 00e2 0020     	 movs r0,#0
 2736 00e4 9847     	 blx r3
 2737              	.LVL9:
 912:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2738              	 .loc 1 912 5
 2739 00e6 0020     	 movs r0,#0
 2740 00e8 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2741              	.L130:
 913:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2742              	 .loc 1 914 7
 2743 00ec 7B7A     	 ldrb r3,[r7,#9]
 2744 00ee 03F01003 	 and r3,r3,#16
 2745 00f2 DBB2     	 uxtb r3,r3
 2746              	 .loc 1 914 6
 2747 00f4 002B     	 cmp r3,#0
 2748 00f6 02D0     	 beq .L131
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 916:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2749              	 .loc 1 916 5
 2750 00f8 7868     	 ldr r0,[r7,#4]
 2751 00fa FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2752              	.L131:
 917:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2753              	 .loc 1 918 7
 2754 00fe 7B7A     	 ldrb r3,[r7,#9]
 2755 0100 03F02003 	 and r3,r3,#32
 2756 0104 DBB2     	 uxtb r3,r3
 2757              	 .loc 1 918 6
 2758 0106 002B     	 cmp r3,#0
 2759 0108 01D0     	 beq .L132
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 920:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2760              	 .loc 1 920 5
 2761 010a FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2762              	.L132:
 921:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2763              	 .loc 1 922 7
 2764 010e BB7A     	 ldrb r3,[r7,#10]
 2765 0110 03F00403 	 and r3,r3,#4
 2766 0114 DBB2     	 uxtb r3,r3
 2767              	 .loc 1 922 6
 2768 0116 002B     	 cmp r3,#0
 2769 0118 02D0     	 beq .L133
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 924:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2770              	 .loc 1 924 5
 2771 011a 7868     	 ldr r0,[r7,#4]
 2772 011c FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2773              	.L133:
 925:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2774              	 .loc 1 926 7
 2775 0120 BB7A     	 ldrb r3,[r7,#10]
 2776 0122 03F00803 	 and r3,r3,#8
 2777 0126 DBB2     	 uxtb r3,r3
 2778              	 .loc 1 926 6
 2779 0128 002B     	 cmp r3,#0
 2780 012a 02D0     	 beq .L134
 927:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 928:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleOEPInt(obj);
 2781              	 .loc 1 928 5
 2782 012c 7868     	 ldr r0,[r7,#4]
 2783 012e FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2784              	.L134:
 929:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.otgintr)
 2785              	 .loc 1 930 7
 2786 0132 3B7A     	 ldrb r3,[r7,#8]
 2787 0134 03F00403 	 and r3,r3,#4
 2788 0138 DBB2     	 uxtb r3,r3
 2789              	 .loc 1 930 6
 2790 013a 002B     	 cmp r3,#0
 2791 013c 01D0     	 beq .L136
 931:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 932:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleOTGInt();
 2792              	 .loc 1 932 5
 2793 013e FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2794              	.L136:
 933:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2795              	 .loc 1 935 1
 2796 0142 00BF     	 nop
 2797 0144 1037     	 adds r7,r7,#16
 2798              	.LCFI87:
 2799              	 .cfi_def_cfa_offset 8
 2800 0146 BD46     	 mov sp,r7
 2801              	.LCFI88:
 2802              	 .cfi_def_cfa_register 13
 2803              	 
 2804 0148 80BD     	 pop {r7,pc}
 2805              	.L138:
 2806 014a 00BF     	 .align 2
 2807              	.L137:
 2808 014c 00000000 	 .word xmc_device
 2809              	 .cfi_endproc
 2810              	.LFE186:
 2812              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2813              	 .align 1
 2814              	 .global XMC_USBD_Enable
 2815              	 .syntax unified
 2816              	 .thumb
 2817              	 .thumb_func
 2818              	 .fpu fpv4-sp-d16
 2820              	XMC_USBD_Enable:
 2821              	.LFB187:
 936:../Libraries/XMCLib/src/xmc_usbd.c **** 
 937:../Libraries/XMCLib/src/xmc_usbd.c **** 
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 942:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 943:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 944:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void)
 945:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2822              	 .loc 1 945 1
 2823              	 .cfi_startproc
 2824              	 
 2825              	 
 2826 0000 80B5     	 push {r7,lr}
 2827              	.LCFI89:
 2828              	 .cfi_def_cfa_offset 8
 2829              	 .cfi_offset 7,-8
 2830              	 .cfi_offset 14,-4
 2831 0002 00AF     	 add r7,sp,#0
 2832              	.LCFI90:
 2833              	 .cfi_def_cfa_register 7
 946:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2834              	 .loc 1 947 3
 2835 0004 0448     	 ldr r0,.L140
 2836 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 948:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 949:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 950:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2837              	 .loc 1 950 3
 2838 000a 0348     	 ldr r0,.L140
 2839 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 951:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2840              	 .loc 1 951 3
 2841 0010 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 952:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2842              	 .loc 1 952 1
 2843 0014 00BF     	 nop
 2844 0016 80BD     	 pop {r7,pc}
 2845              	.L141:
 2846              	 .align 2
 2847              	.L140:
 2848 0018 80000020 	 .word 536871040
 2849              	 .cfi_endproc
 2850              	.LFE187:
 2852              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2853              	 .align 1
 2854              	 .global XMC_USBD_Disable
 2855              	 .syntax unified
 2856              	 .thumb
 2857              	 .thumb_func
 2858              	 .fpu fpv4-sp-d16
 2860              	XMC_USBD_Disable:
 2861              	.LFB188:
 953:../Libraries/XMCLib/src/xmc_usbd.c **** 
 954:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 955:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 956:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 957:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void)
 958:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2862              	 .loc 1 958 1
 2863              	 .cfi_startproc
 2864              	 
 2865              	 
 2866 0000 80B5     	 push {r7,lr}
 2867              	.LCFI91:
 2868              	 .cfi_def_cfa_offset 8
 2869              	 .cfi_offset 7,-8
 2870              	 .cfi_offset 14,-4
 2871 0002 00AF     	 add r7,sp,#0
 2872              	.LCFI92:
 2873              	 .cfi_def_cfa_register 7
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 960:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2874              	 .loc 1 960 3
 2875 0004 0448     	 ldr r0,.L143
 2876 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 961:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 962:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2877              	 .loc 1 962 3
 2878 000a 0348     	 ldr r0,.L143
 2879 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 963:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 964:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2880              	 .loc 1 964 3
 2881 0010 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 965:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2882              	 .loc 1 965 1
 2883 0014 00BF     	 nop
 2884 0016 80BD     	 pop {r7,pc}
 2885              	.L144:
 2886              	 .align 2
 2887              	.L143:
 2888 0018 80000020 	 .word 536871040
 2889              	 .cfi_endproc
 2890              	.LFE188:
 2892              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2893              	 .align 1
 2894              	 .global XMC_USBD_ClearEvent
 2895              	 .syntax unified
 2896              	 .thumb
 2897              	 .thumb_func
 2898              	 .fpu fpv4-sp-d16
 2900              	XMC_USBD_ClearEvent:
 2901              	.LFB189:
 966:../Libraries/XMCLib/src/xmc_usbd.c **** 
 967:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 968:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 969:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 970:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event)
 971:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2902              	 .loc 1 971 1
 2903              	 .cfi_startproc
 2904              	 
 2905              	 
 2906              	 
 2907 0000 80B4     	 push {r7}
 2908              	.LCFI93:
 2909              	 .cfi_def_cfa_offset 4
 2910              	 .cfi_offset 7,-4
 2911 0002 85B0     	 sub sp,sp,#20
 2912              	.LCFI94:
 2913              	 .cfi_def_cfa_offset 24
 2914 0004 00AF     	 add r7,sp,#0
 2915              	.LCFI95:
 2916              	 .cfi_def_cfa_register 7
 2917 0006 0346     	 mov r3,r0
 2918 0008 FB71     	 strb r3,[r7,#7]
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 973:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2919              	 .loc 1 973 13
 2920 000a 0023     	 movs r3,#0
 2921 000c FB60     	 str r3,[r7,#12]
 974:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (event)
 2922              	 .loc 1 974 3
 2923 000e FB79     	 ldrb r3,[r7,#7]
 2924 0010 0D2B     	 cmp r3,#13
 2925 0012 4CD8     	 bhi .L158
 2926 0014 01A2     	 adr r2,.L148
 2927 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2928 001a 00BF     	 .p2align 2
 2929              	.L148:
 2930 001c 55000000 	 .word .L156+1
 2931 0020 AF000000 	 .word .L158+1
 2932 0024 AF000000 	 .word .L158+1
 2933 0028 AF000000 	 .word .L158+1
 2934 002c 5F000000 	 .word .L155+1
 2935 0030 AF000000 	 .word .L158+1
 2936 0034 69000000 	 .word .L154+1
 2937 0038 73000000 	 .word .L153+1
 2938 003c 7D000000 	 .word .L152+1
 2939 0040 87000000 	 .word .L151+1
 2940 0044 91000000 	 .word .L150+1
 2941 0048 9B000000 	 .word .L149+1
 2942 004c AF000000 	 .word .L158+1
 2943 0050 A5000000 	 .word .L147+1
 2944              	 .p2align 1
 2945              	.L156:
 975:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 977:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.sessreqintr = 1U;
 2946              	 .loc 1 977 27
 2947 0054 FB7B     	 ldrb r3,[r7,#15]
 2948 0056 43F04003 	 orr r3,r3,#64
 2949 005a FB73     	 strb r3,[r7,#15]
 978:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2950              	 .loc 1 978 7
 2951 005c 28E0     	 b .L157
 2952              	.L155:
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 980:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.usbreset = 1U;
 2953              	 .loc 1 980 24
 2954 005e 7B7B     	 ldrb r3,[r7,#13]
 2955 0060 43F01003 	 orr r3,r3,#16
 2956 0064 7B73     	 strb r3,[r7,#13]
 981:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2957              	 .loc 1 981 7
 2958 0066 23E0     	 b .L157
 2959              	.L154:
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 983:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.usbsuspend = 1U;
 2960              	 .loc 1 983 26
 2961 0068 7B7B     	 ldrb r3,[r7,#13]
 2962 006a 43F00803 	 orr r3,r3,#8
 2963 006e 7B73     	 strb r3,[r7,#13]
 984:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2964              	 .loc 1 984 7
 2965 0070 1EE0     	 b .L157
 2966              	.L153:
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 986:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.wkupintr = 1U;
 2967              	 .loc 1 986 24
 2968 0072 FB7B     	 ldrb r3,[r7,#15]
 2969 0074 43F08003 	 orr r3,r3,#128
 2970 0078 FB73     	 strb r3,[r7,#15]
 987:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2971              	 .loc 1 987 7
 2972 007a 19E0     	 b .L157
 2973              	.L152:
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 989:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.wkupintr = 1U;
 2974              	 .loc 1 989 24
 2975 007c FB7B     	 ldrb r3,[r7,#15]
 2976 007e 43F08003 	 orr r3,r3,#128
 2977 0082 FB73     	 strb r3,[r7,#15]
 990:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2978              	 .loc 1 990 7
 2979 0084 14E0     	 b .L157
 2980              	.L151:
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 992:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.sofintr = 1U;
 2981              	 .loc 1 992 23
 2982 0086 3B7B     	 ldrb r3,[r7,#12]
 2983 0088 43F00803 	 orr r3,r3,#8
 2984 008c 3B73     	 strb r3,[r7,#12]
 993:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2985              	 .loc 1 993 7
 2986 008e 0FE0     	 b .L157
 2987              	.L150:
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 995:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.erlysuspend = 1U;
 2988              	 .loc 1 995 27
 2989 0090 7B7B     	 ldrb r3,[r7,#13]
 2990 0092 43F00403 	 orr r3,r3,#4
 2991 0096 7B73     	 strb r3,[r7,#13]
 996:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2992              	 .loc 1 996 7
 2993 0098 0AE0     	 b .L157
 2994              	.L149:
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 998:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.enumdone = 1U;
 2995              	 .loc 1 998 24
 2996 009a 7B7B     	 ldrb r3,[r7,#13]
 2997 009c 43F02003 	 orr r3,r3,#32
 2998 00a0 7B73     	 strb r3,[r7,#13]
 999:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2999              	 .loc 1 999 7
 3000 00a2 05E0     	 b .L157
 3001              	.L147:
1000:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
1001:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.outepintr = 1U;
 3002              	 .loc 1 1001 25
 3003 00a4 BB7B     	 ldrb r3,[r7,#14]
 3004 00a6 43F00803 	 orr r3,r3,#8
 3005 00aa BB73     	 strb r3,[r7,#14]
1002:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 3006              	 .loc 1 1002 7
 3007 00ac 00E0     	 b .L157
 3008              	.L158:
1003:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
1004:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 3009              	 .loc 1 1004 7
 3010 00ae 00BF     	 nop
 3011              	.L157:
1005:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1006:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = clear.d32;
 3012              	 .loc 1 1006 13
 3013 00b0 054B     	 ldr r3,.L159
 3014 00b2 D3F8A031 	 ldr r3,[r3,#416]
 3015              	 .loc 1 1006 46
 3016 00b6 FA68     	 ldr r2,[r7,#12]
 3017              	 .loc 1 1006 39
 3018 00b8 5A61     	 str r2,[r3,#20]
1007:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3019              	 .loc 1 1007 1
 3020 00ba 00BF     	 nop
 3021 00bc 1437     	 adds r7,r7,#20
 3022              	.LCFI96:
 3023              	 .cfi_def_cfa_offset 4
 3024 00be BD46     	 mov sp,r7
 3025              	.LCFI97:
 3026              	 .cfi_def_cfa_register 13
 3027              	 
 3028 00c0 5DF8047B 	 ldr r7,[sp],#4
 3029              	.LCFI98:
 3030              	 .cfi_restore 7
 3031              	 .cfi_def_cfa_offset 0
 3032 00c4 7047     	 bx lr
 3033              	.L160:
 3034 00c6 00BF     	 .align 2
 3035              	.L159:
 3036 00c8 00000000 	 .word xmc_device
 3037              	 .cfi_endproc
 3038              	.LFE189:
 3040              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 3041              	 .align 1
 3042              	 .syntax unified
 3043              	 .thumb
 3044              	 .thumb_func
 3045              	 .fpu fpv4-sp-d16
 3047              	XMC_USBD_lClearEventOTG:
 3048              	.LFB190:
1008:../Libraries/XMCLib/src/xmc_usbd.c **** 
1009:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1010:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1011:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1012:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1013:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3049              	 .loc 1 1013 1
 3050              	 .cfi_startproc
 3051              	 
 3052              	 
 3053              	 
 3054 0000 80B4     	 push {r7}
 3055              	.LCFI99:
 3056              	 .cfi_def_cfa_offset 4
 3057              	 .cfi_offset 7,-4
 3058 0002 85B0     	 sub sp,sp,#20
 3059              	.LCFI100:
 3060              	 .cfi_def_cfa_offset 24
 3061 0004 00AF     	 add r7,sp,#0
 3062              	.LCFI101:
 3063              	 .cfi_def_cfa_register 7
 3064 0006 7860     	 str r0,[r7,#4]
1014:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 3065              	 .loc 1 1014 18
 3066 0008 0023     	 movs r3,#0
 3067 000a FB60     	 str r3,[r7,#12]
1015:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 3068              	 .loc 1 1015 13
 3069 000c 7B68     	 ldr r3,[r7,#4]
 3070 000e FB60     	 str r3,[r7,#12]
1016:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 3071              	 .loc 1 1016 13
 3072 0010 054B     	 ldr r3,.L162
 3073 0012 D3F8A031 	 ldr r3,[r3,#416]
 3074              	 .loc 1 1016 46
 3075 0016 FA68     	 ldr r2,[r7,#12]
 3076              	 .loc 1 1016 39
 3077 0018 5A60     	 str r2,[r3,#4]
1017:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3078              	 .loc 1 1017 1
 3079 001a 00BF     	 nop
 3080 001c 1437     	 adds r7,r7,#20
 3081              	.LCFI102:
 3082              	 .cfi_def_cfa_offset 4
 3083 001e BD46     	 mov sp,r7
 3084              	.LCFI103:
 3085              	 .cfi_def_cfa_register 13
 3086              	 
 3087 0020 5DF8047B 	 ldr r7,[sp],#4
 3088              	.LCFI104:
 3089              	 .cfi_restore 7
 3090              	 .cfi_def_cfa_offset 0
 3091 0024 7047     	 bx lr
 3092              	.L163:
 3093 0026 00BF     	 .align 2
 3094              	.L162:
 3095 0028 00000000 	 .word xmc_device
 3096              	 .cfi_endproc
 3097              	.LFE190:
 3099              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 3100              	 .align 1
 3101              	 .global XMC_USBD_ClearEventINEP
 3102              	 .syntax unified
 3103              	 .thumb
 3104              	 .thumb_func
 3105              	 .fpu fpv4-sp-d16
 3107              	XMC_USBD_ClearEventINEP:
 3108              	.LFB191:
1018:../Libraries/XMCLib/src/xmc_usbd.c **** 
1019:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1020:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1021:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1022:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event, const uint8_t ep_num)
1023:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3109              	 .loc 1 1023 1
 3110              	 .cfi_startproc
 3111              	 
 3112              	 
 3113              	 
 3114 0000 80B4     	 push {r7}
 3115              	.LCFI105:
 3116              	 .cfi_def_cfa_offset 4
 3117              	 .cfi_offset 7,-4
 3118 0002 85B0     	 sub sp,sp,#20
 3119              	.LCFI106:
 3120              	 .cfi_def_cfa_offset 24
 3121 0004 00AF     	 add r7,sp,#0
 3122              	.LCFI107:
 3123              	 .cfi_def_cfa_register 7
 3124 0006 7860     	 str r0,[r7,#4]
 3125 0008 0B46     	 mov r3,r1
 3126 000a FB70     	 strb r3,[r7,#3]
1024:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1025:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 3127              	 .loc 1 1025 13
 3128 000c 7B68     	 ldr r3,[r7,#4]
 3129 000e FB60     	 str r3,[r7,#12]
1026:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 3130              	 .loc 1 1026 34
 3131 0010 FB78     	 ldrb r3,[r7,#3]
 3132 0012 064A     	 ldr r2,.L165
 3133 0014 6A33     	 adds r3,r3,#106
 3134 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3135              	 .loc 1 1026 59
 3136 001a FA68     	 ldr r2,[r7,#12]
 3137              	 .loc 1 1026 52
 3138 001c 9A60     	 str r2,[r3,#8]
1027:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3139              	 .loc 1 1027 1
 3140 001e 00BF     	 nop
 3141 0020 1437     	 adds r7,r7,#20
 3142              	.LCFI108:
 3143              	 .cfi_def_cfa_offset 4
 3144 0022 BD46     	 mov sp,r7
 3145              	.LCFI109:
 3146              	 .cfi_def_cfa_register 13
 3147              	 
 3148 0024 5DF8047B 	 ldr r7,[sp],#4
 3149              	.LCFI110:
 3150              	 .cfi_restore 7
 3151              	 .cfi_def_cfa_offset 0
 3152 0028 7047     	 bx lr
 3153              	.L166:
 3154 002a 00BF     	 .align 2
 3155              	.L165:
 3156 002c 00000000 	 .word xmc_device
 3157              	 .cfi_endproc
 3158              	.LFE191:
 3160              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 3161              	 .align 1
 3162              	 .global XMC_USBD_ClearEventOUTEP
 3163              	 .syntax unified
 3164              	 .thumb
 3165              	 .thumb_func
 3166              	 .fpu fpv4-sp-d16
 3168              	XMC_USBD_ClearEventOUTEP:
 3169              	.LFB192:
1028:../Libraries/XMCLib/src/xmc_usbd.c **** 
1029:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1030:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1031:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1032:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event, const uint8_t ep_num)
1033:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3170              	 .loc 1 1033 1
 3171              	 .cfi_startproc
 3172              	 
 3173              	 
 3174              	 
 3175 0000 80B4     	 push {r7}
 3176              	.LCFI111:
 3177              	 .cfi_def_cfa_offset 4
 3178              	 .cfi_offset 7,-4
 3179 0002 85B0     	 sub sp,sp,#20
 3180              	.LCFI112:
 3181              	 .cfi_def_cfa_offset 24
 3182 0004 00AF     	 add r7,sp,#0
 3183              	.LCFI113:
 3184              	 .cfi_def_cfa_register 7
 3185 0006 7860     	 str r0,[r7,#4]
 3186 0008 0B46     	 mov r3,r1
 3187 000a FB70     	 strb r3,[r7,#3]
1034:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1035:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 3188              	 .loc 1 1035 13
 3189 000c 7B68     	 ldr r3,[r7,#4]
 3190 000e FB60     	 str r3,[r7,#12]
1036:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 3191              	 .loc 1 1036 35
 3192 0010 FB78     	 ldrb r3,[r7,#3]
 3193 0012 064A     	 ldr r2,.L168
 3194 0014 7033     	 adds r3,r3,#112
 3195 0016 9B00     	 lsls r3,r3,#2
 3196 0018 1344     	 add r3,r3,r2
 3197 001a 5B68     	 ldr r3,[r3,#4]
 3198              	 .loc 1 1036 60
 3199 001c FA68     	 ldr r2,[r7,#12]
 3200              	 .loc 1 1036 53
 3201 001e 9A60     	 str r2,[r3,#8]
1037:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3202              	 .loc 1 1037 1
 3203 0020 00BF     	 nop
 3204 0022 1437     	 adds r7,r7,#20
 3205              	.LCFI114:
 3206              	 .cfi_def_cfa_offset 4
 3207 0024 BD46     	 mov sp,r7
 3208              	.LCFI115:
 3209              	 .cfi_def_cfa_register 13
 3210              	 
 3211 0026 5DF8047B 	 ldr r7,[sp],#4
 3212              	.LCFI116:
 3213              	 .cfi_restore 7
 3214              	 .cfi_def_cfa_offset 0
 3215 002a 7047     	 bx lr
 3216              	.L169:
 3217              	 .align 2
 3218              	.L168:
 3219 002c 00000000 	 .word xmc_device
 3220              	 .cfi_endproc
 3221              	.LFE192:
 3223              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 3224              	 .align 1
 3225              	 .global XMC_USBD_EnableEventOUTEP
 3226              	 .syntax unified
 3227              	 .thumb
 3228              	 .thumb_func
 3229              	 .fpu fpv4-sp-d16
 3231              	XMC_USBD_EnableEventOUTEP:
 3232              	.LFB193:
1038:../Libraries/XMCLib/src/xmc_usbd.c **** 
1039:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1040:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1041:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1042:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1043:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3233              	 .loc 1 1043 1
 3234              	 .cfi_startproc
 3235              	 
 3236              	 
 3237              	 
 3238 0000 80B4     	 push {r7}
 3239              	.LCFI117:
 3240              	 .cfi_def_cfa_offset 4
 3241              	 .cfi_offset 7,-4
 3242 0002 85B0     	 sub sp,sp,#20
 3243              	.LCFI118:
 3244              	 .cfi_def_cfa_offset 24
 3245 0004 00AF     	 add r7,sp,#0
 3246              	.LCFI119:
 3247              	 .cfi_def_cfa_register 7
 3248 0006 7860     	 str r0,[r7,#4]
1044:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
1045:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint.d32 = event;
 3249              	 .loc 1 1045 15
 3250 0008 7B68     	 ldr r3,[r7,#4]
 3251 000a FB60     	 str r3,[r7,#12]
1046:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->doepmsk |= doepint.d32;
 3252              	 .loc 1 1046 13
 3253 000c 074B     	 ldr r3,.L171
 3254 000e D3F8A431 	 ldr r3,[r3,#420]
 3255              	 .loc 1 1046 39
 3256 0012 5969     	 ldr r1,[r3,#20]
 3257              	 .loc 1 1046 49
 3258 0014 FA68     	 ldr r2,[r7,#12]
 3259              	 .loc 1 1046 13
 3260 0016 054B     	 ldr r3,.L171
 3261 0018 D3F8A431 	 ldr r3,[r3,#420]
 3262              	 .loc 1 1046 39
 3263 001c 0A43     	 orrs r2,r2,r1
 3264 001e 5A61     	 str r2,[r3,#20]
1047:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3265              	 .loc 1 1047 1
 3266 0020 00BF     	 nop
 3267 0022 1437     	 adds r7,r7,#20
 3268              	.LCFI120:
 3269              	 .cfi_def_cfa_offset 4
 3270 0024 BD46     	 mov sp,r7
 3271              	.LCFI121:
 3272              	 .cfi_def_cfa_register 13
 3273              	 
 3274 0026 5DF8047B 	 ldr r7,[sp],#4
 3275              	.LCFI122:
 3276              	 .cfi_restore 7
 3277              	 .cfi_def_cfa_offset 0
 3278 002a 7047     	 bx lr
 3279              	.L172:
 3280              	 .align 2
 3281              	.L171:
 3282 002c 00000000 	 .word xmc_device
 3283              	 .cfi_endproc
 3284              	.LFE193:
 3286              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 3287              	 .align 1
 3288              	 .global XMC_USBD_EnableEventINEP
 3289              	 .syntax unified
 3290              	 .thumb
 3291              	 .thumb_func
 3292              	 .fpu fpv4-sp-d16
 3294              	XMC_USBD_EnableEventINEP:
 3295              	.LFB194:
1048:../Libraries/XMCLib/src/xmc_usbd.c **** 
1049:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1050:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1051:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1052:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1053:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3296              	 .loc 1 1053 1
 3297              	 .cfi_startproc
 3298              	 
 3299              	 
 3300              	 
 3301 0000 80B4     	 push {r7}
 3302              	.LCFI123:
 3303              	 .cfi_def_cfa_offset 4
 3304              	 .cfi_offset 7,-4
 3305 0002 85B0     	 sub sp,sp,#20
 3306              	.LCFI124:
 3307              	 .cfi_def_cfa_offset 24
 3308 0004 00AF     	 add r7,sp,#0
 3309              	.LCFI125:
 3310              	 .cfi_def_cfa_register 7
 3311 0006 7860     	 str r0,[r7,#4]
1054:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
1055:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint.d32 = event;
 3312              	 .loc 1 1055 15
 3313 0008 7B68     	 ldr r3,[r7,#4]
 3314 000a FB60     	 str r3,[r7,#12]
1056:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->diepmsk |= diepint.d32;
 3315              	 .loc 1 1056 13
 3316 000c 074B     	 ldr r3,.L174
 3317 000e D3F8A431 	 ldr r3,[r3,#420]
 3318              	 .loc 1 1056 39
 3319 0012 1969     	 ldr r1,[r3,#16]
 3320              	 .loc 1 1056 49
 3321 0014 FA68     	 ldr r2,[r7,#12]
 3322              	 .loc 1 1056 13
 3323 0016 054B     	 ldr r3,.L174
 3324 0018 D3F8A431 	 ldr r3,[r3,#420]
 3325              	 .loc 1 1056 39
 3326 001c 0A43     	 orrs r2,r2,r1
 3327 001e 1A61     	 str r2,[r3,#16]
1057:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3328              	 .loc 1 1057 1
 3329 0020 00BF     	 nop
 3330 0022 1437     	 adds r7,r7,#20
 3331              	.LCFI126:
 3332              	 .cfi_def_cfa_offset 4
 3333 0024 BD46     	 mov sp,r7
 3334              	.LCFI127:
 3335              	 .cfi_def_cfa_register 13
 3336              	 
 3337 0026 5DF8047B 	 ldr r7,[sp],#4
 3338              	.LCFI128:
 3339              	 .cfi_restore 7
 3340              	 .cfi_def_cfa_offset 0
 3341 002a 7047     	 bx lr
 3342              	.L175:
 3343              	 .align 2
 3344              	.L174:
 3345 002c 00000000 	 .word xmc_device
 3346              	 .cfi_endproc
 3347              	.LFE194:
 3349              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 3350              	 .align 1
 3351              	 .global XMC_USBD_GetCapabilities
 3352              	 .syntax unified
 3353              	 .thumb
 3354              	 .thumb_func
 3355              	 .fpu fpv4-sp-d16
 3357              	XMC_USBD_GetCapabilities:
 3358              	.LFB195:
1058:../Libraries/XMCLib/src/xmc_usbd.c **** 
1059:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1060:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1061:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1062:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1063:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3359              	 .loc 1 1063 1
 3360              	 .cfi_startproc
 3361              	 
 3362              	 
 3363              	 
 3364 0000 80B4     	 push {r7}
 3365              	.LCFI129:
 3366              	 .cfi_def_cfa_offset 4
 3367              	 .cfi_offset 7,-4
 3368 0002 83B0     	 sub sp,sp,#12
 3369              	.LCFI130:
 3370              	 .cfi_def_cfa_offset 16
 3371 0004 00AF     	 add r7,sp,#0
 3372              	.LCFI131:
 3373              	 .cfi_def_cfa_register 7
1064:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap = {0U};
 3374              	 .loc 1 1064 27
 3375 0006 0023     	 movs r3,#0
 3376 0008 7B60     	 str r3,[r7,#4]
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 3377              	 .loc 1 1065 21
 3378 000a 3B79     	 ldrb r3,[r7,#4]
 3379 000c 43F00403 	 orr r3,r3,#4
 3380 0010 3B71     	 strb r3,[r7,#4]
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 3381              	 .loc 1 1066 24
 3382 0012 3B79     	 ldrb r3,[r7,#4]
 3383 0014 43F00803 	 orr r3,r3,#8
 3384 0018 3B71     	 strb r3,[r7,#4]
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
 3385              	 .loc 1 1071 23
 3386 001a 3B79     	 ldrb r3,[r7,#4]
 3387 001c 6FF34103 	 bfc r3,#1,#1
 3388 0020 3B71     	 strb r3,[r7,#4]
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
 3389              	 .loc 1 1072 22
 3390 0022 3B79     	 ldrb r3,[r7,#4]
 3391 0024 6FF30003 	 bfc r3,#0,#1
 3392 0028 3B71     	 strb r3,[r7,#4]
1073:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 3393              	 .loc 1 1074 24
 3394 002a 3B79     	 ldrb r3,[r7,#4]
 3395 002c 6FF34513 	 bfc r3,#5,#1
 3396 0030 3B71     	 strb r3,[r7,#4]
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 3397              	 .loc 1 1075 27
 3398 0032 7B79     	 ldrb r3,[r7,#5]
 3399 0034 43F00103 	 orr r3,r3,#1
 3400 0038 7B71     	 strb r3,[r7,#5]
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 3401              	 .loc 1 1076 19
 3402 003a 3B79     	 ldrb r3,[r7,#4]
 3403 003c 43F01003 	 orr r3,r3,#16
 3404 0040 3B71     	 strb r3,[r7,#4]
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 3405              	 .loc 1 1077 20
 3406 0042 3B79     	 ldrb r3,[r7,#4]
 3407 0044 43F08003 	 orr r3,r3,#128
 3408 0048 3B71     	 strb r3,[r7,#4]
1078:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 3409              	 .loc 1 1078 21
 3410 004a 3B79     	 ldrb r3,[r7,#4]
 3411 004c 43F04003 	 orr r3,r3,#64
 3412 0050 3B71     	 strb r3,[r7,#4]
1079:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 3413              	 .loc 1 1079 16
 3414 0052 7B68     	 ldr r3,[r7,#4]
 3415 0054 6FF35F23 	 bfc r3,#9,#23
 3416 0058 7B60     	 str r3,[r7,#4]
1080:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 3417              	 .loc 1 1080 10
 3418 005a 7B68     	 ldr r3,[r7,#4]
1081:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3419              	 .loc 1 1081 1
 3420 005c 1846     	 mov r0,r3
 3421 005e 0C37     	 adds r7,r7,#12
 3422              	.LCFI132:
 3423              	 .cfi_def_cfa_offset 4
 3424 0060 BD46     	 mov sp,r7
 3425              	.LCFI133:
 3426              	 .cfi_def_cfa_register 13
 3427              	 
 3428 0062 5DF8047B 	 ldr r7,[sp],#4
 3429              	.LCFI134:
 3430              	 .cfi_restore 7
 3431              	 .cfi_def_cfa_offset 0
 3432 0066 7047     	 bx lr
 3433              	 .cfi_endproc
 3434              	.LFE195:
 3436              	 .section .text.XMC_USBD_Init,"ax",%progbits
 3437              	 .align 1
 3438              	 .global XMC_USBD_Init
 3439              	 .syntax unified
 3440              	 .thumb
 3441              	 .thumb_func
 3442              	 .fpu fpv4-sp-d16
 3444              	XMC_USBD_Init:
 3445              	.LFB196:
1082:../Libraries/XMCLib/src/xmc_usbd.c **** 
1083:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1084:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1085:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1086:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1087:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3446              	 .loc 1 1087 1
 3447              	 .cfi_startproc
 3448              	 
 3449              	 
 3450 0000 80B5     	 push {r7,lr}
 3451              	.LCFI135:
 3452              	 .cfi_def_cfa_offset 8
 3453              	 .cfi_offset 7,-8
 3454              	 .cfi_offset 14,-4
 3455 0002 8AB0     	 sub sp,sp,#40
 3456              	.LCFI136:
 3457              	 .cfi_def_cfa_offset 48
 3458 0004 00AF     	 add r7,sp,#0
 3459              	.LCFI137:
 3460              	 .cfi_def_cfa_register 7
 3461 0006 7860     	 str r0,[r7,#4]
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1092:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1094:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1095:../Libraries/XMCLib/src/xmc_usbd.c **** 
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1097:../Libraries/XMCLib/src/xmc_usbd.c ****              XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
1099:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 3462              	 .loc 1 1099 3
 3463 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1100:../Libraries/XMCLib/src/xmc_usbd.c **** 
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 3464              	 .loc 1 1101 13
 3465 000c 874A     	 ldr r2,.L191
 3466 000e 7B68     	 ldr r3,[r7,#4]
 3467 0010 1360     	 str r3,[r2]
1102:../Libraries/XMCLib/src/xmc_usbd.c **** 
1103:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3468              	 .loc 1 1104 10
 3469 0012 0023     	 movs r3,#0
 3470 0014 7B62     	 str r3,[r7,#36]
 3471              	 .loc 1 1104 3
 3472 0016 0CE0     	 b .L179
 3473              	.L180:
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1106:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 3474              	 .loc 1 1106 35 discriminator 3
 3475 0018 854A     	 ldr r2,.L191+4
 3476 001a 7B6A     	 ldr r3,[r7,#36]
 3477 001c 4021     	 movs r1,#64
 3478 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1107:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 3479              	 .loc 1 1107 35 discriminator 3
 3480 0022 844A     	 ldr r2,.L191+8
 3481 0024 7B6A     	 ldr r3,[r7,#36]
 3482 0026 4021     	 movs r1,#64
 3483 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3484              	 .loc 1 1104 49 discriminator 3
 3485 002c 7B6A     	 ldr r3,[r7,#36]
 3486 002e 0133     	 adds r3,r3,#1
 3487 0030 7B62     	 str r3,[r7,#36]
 3488              	.L179:
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3489              	 .loc 1 1104 3 discriminator 1
 3490 0032 7B6A     	 ldr r3,[r7,#36]
 3491 0034 062B     	 cmp r3,#6
 3492 0036 EFD9     	 bls .L180
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)&xmc_device, 0x0U, sizeof(XMC_USBD_DEVICE_t));
 3493              	 .loc 1 1111 3
 3494 0038 4FF40272 	 mov r2,#520
 3495 003c 0021     	 movs r1,#0
 3496 003e 7E48     	 ldr r0,.L191+12
 3497 0040 FFF7FEFF 	 bl memset
1112:../Libraries/XMCLib/src/xmc_usbd.c **** 
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 3498              	 .loc 1 1114 34
 3499 0044 7B68     	 ldr r3,[r7,#4]
 3500 0046 5B68     	 ldr r3,[r3,#4]
 3501              	 .loc 1 1114 29
 3502 0048 7B4A     	 ldr r2,.L191+12
 3503 004a C2F80032 	 str r3,[r2,#512]
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 3504              	 .loc 1 1115 36
 3505 004e 7B68     	 ldr r3,[r7,#4]
 3506 0050 9B68     	 ldr r3,[r3,#8]
 3507              	 .loc 1 1115 31
 3508 0052 794A     	 ldr r2,.L191+12
 3509 0054 C2F80432 	 str r3,[r2,#516]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 3510              	 .loc 1 1116 25
 3511 0058 7B68     	 ldr r3,[r7,#4]
 3512 005a 1B68     	 ldr r3,[r3]
 3513 005c 3B62     	 str r3,[r7,#32]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t *)(obj->usbd);
 3514              	 .loc 1 1118 66
 3515 005e 7B68     	 ldr r3,[r7,#4]
 3516 0060 1B68     	 ldr r3,[r3]
 3517              	 .loc 1 1118 30
 3518 0062 754A     	 ldr r2,.L191+12
 3519 0064 C2F8A031 	 str r3,[r2,#416]
1119:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t *)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GL
 3520              	 .loc 1 1119 88
 3521 0068 3B6A     	 ldr r3,[r7,#32]
 3522 006a 03F50063 	 add r3,r3,#2048
 3523              	 .loc 1 1119 30
 3524 006e 724A     	 ldr r2,.L191+12
 3525 0070 C2F8A431 	 str r3,[r2,#420]
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3526              	 .loc 1 1120 10
 3527 0074 0023     	 movs r3,#0
 3528 0076 7B62     	 str r3,[r7,#36]
 3529              	 .loc 1 1120 3
 3530 0078 0CE0     	 b .L181
 3531              	.L182:
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1122:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t *)(XMC_USBD_BASE_ADDRESS + DWC_D
 3532              	 .loc 1 1122 120 discriminator 3
 3533 007a 7B6A     	 ldr r3,[r7,#36]
 3534 007c 4833     	 adds r3,r3,#72
 3535 007e 5B01     	 lsls r3,r3,#5
 3536 0080 3A6A     	 ldr r2,[r7,#32]
 3537 0082 1A44     	 add r2,r2,r3
 3538              	 .loc 1 1122 40 discriminator 3
 3539 0084 6C49     	 ldr r1,.L191+12
 3540 0086 7B6A     	 ldr r3,[r7,#36]
 3541 0088 6A33     	 adds r3,r3,#106
 3542 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3543              	 .loc 1 1120 49 discriminator 3
 3544 008e 7B6A     	 ldr r3,[r7,#36]
 3545 0090 0133     	 adds r3,r3,#1
 3546 0092 7B62     	 str r3,[r7,#36]
 3547              	.L181:
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3548              	 .loc 1 1120 3 discriminator 1
 3549 0094 7B6A     	 ldr r3,[r7,#36]
 3550 0096 062B     	 cmp r3,#6
 3551 0098 EFD9     	 bls .L182
1123:../Libraries/XMCLib/src/xmc_usbd.c ****                                          ((uint32_t)DWC_EP_REG_OFFSET * i));
1124:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3552              	 .loc 1 1125 10
 3553 009a 0023     	 movs r3,#0
 3554 009c 7B62     	 str r3,[r7,#36]
 3555              	 .loc 1 1125 3
 3556 009e 0DE0     	 b .L183
 3557              	.L184:
1126:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1127:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t *)(XMC_USBD_BASE_ADDRESS +
1128:../Libraries/XMCLib/src/xmc_usbd.c ****                                           DWC_DEV_OUT_EP_REG_OFFSET +
 3558              	 .loc 1 1128 69 discriminator 3
 3559 00a0 7B6A     	 ldr r3,[r7,#36]
 3560 00a2 5833     	 adds r3,r3,#88
 3561 00a4 5B01     	 lsls r3,r3,#5
 3562 00a6 3A6A     	 ldr r2,[r7,#32]
 3563 00a8 1A44     	 add r2,r2,r3
1127:../Libraries/XMCLib/src/xmc_usbd.c ****                                           DWC_DEV_OUT_EP_REG_OFFSET +
 3564              	 .loc 1 1127 41 discriminator 3
 3565 00aa 6349     	 ldr r1,.L191+12
 3566 00ac 7B6A     	 ldr r3,[r7,#36]
 3567 00ae 7033     	 adds r3,r3,#112
 3568 00b0 9B00     	 lsls r3,r3,#2
 3569 00b2 0B44     	 add r3,r3,r1
 3570 00b4 5A60     	 str r2,[r3,#4]
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3571              	 .loc 1 1125 49 discriminator 3
 3572 00b6 7B6A     	 ldr r3,[r7,#36]
 3573 00b8 0133     	 adds r3,r3,#1
 3574 00ba 7B62     	 str r3,[r7,#36]
 3575              	.L183:
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3576              	 .loc 1 1125 3 discriminator 1
 3577 00bc 7B6A     	 ldr r3,[r7,#36]
 3578 00be 062B     	 cmp r3,#6
 3579 00c0 EED9     	 bls .L184
1129:../Libraries/XMCLib/src/xmc_usbd.c ****                                           ((uint32_t)DWC_EP_REG_OFFSET * i));
1130:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_TX_FIFOS; i++)
 3580              	 .loc 1 1131 10
 3581 00c2 0023     	 movs r3,#0
 3582 00c4 7B62     	 str r3,[r7,#36]
 3583              	 .loc 1 1131 3
 3584 00c6 0CE0     	 b .L185
 3585              	.L186:
1132:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1133:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t *)(XMC_USBD_BASE_ADDRESS +
1134:../Libraries/XMCLib/src/xmc_usbd.c ****                                       XMC_USBD_TX_FIFO_REG_OFFSET +
 3586              	 .loc 1 1134 67 discriminator 3
 3587 00c8 7B6A     	 ldr r3,[r7,#36]
 3588 00ca 0133     	 adds r3,r3,#1
 3589 00cc 1B03     	 lsls r3,r3,#12
 3590 00ce 3A6A     	 ldr r2,[r7,#32]
 3591 00d0 1A44     	 add r2,r2,r3
1133:../Libraries/XMCLib/src/xmc_usbd.c ****                                       XMC_USBD_TX_FIFO_REG_OFFSET +
 3592              	 .loc 1 1133 24 discriminator 3
 3593 00d2 5949     	 ldr r1,.L191+12
 3594 00d4 7B6A     	 ldr r3,[r7,#36]
 3595 00d6 7833     	 adds r3,r3,#120
 3596 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3597              	 .loc 1 1131 54 discriminator 3
 3598 00dc 7B6A     	 ldr r3,[r7,#36]
 3599 00de 0133     	 adds r3,r3,#1
 3600 00e0 7B62     	 str r3,[r7,#36]
 3601              	.L185:
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3602              	 .loc 1 1131 3 discriminator 1
 3603 00e2 7B6A     	 ldr r3,[r7,#36]
 3604 00e4 062B     	 cmp r3,#6
 3605 00e6 EFD9     	 bls .L186
1135:../Libraries/XMCLib/src/xmc_usbd.c ****                                       (i * XMC_USBD_TX_FIFO_OFFSET));
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3606              	 .loc 1 1140 27
 3607 00e8 534B     	 ldr r3,.L191+12
 3608 00ea D3F8A031 	 ldr r3,[r3,#416]
 3609              	 .loc 1 1140 43
 3610 00ee 9B68     	 ldr r3,[r3,#8]
 3611              	 .loc 1 1140 15
 3612 00f0 FB61     	 str r3,[r7,#28]
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3613              	 .loc 1 1141 25
 3614 00f2 3B7F     	 ldrb r3,[r7,#28]
 3615 00f4 43F00103 	 orr r3,r3,#1
 3616 00f8 3B77     	 strb r3,[r7,#28]
1142:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3617              	 .loc 1 1142 35
 3618 00fa 3B7F     	 ldrb r3,[r7,#28]
 3619 00fc 43F08003 	 orr r3,r3,#128
 3620 0100 3B77     	 strb r3,[r7,#28]
1143:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3621              	 .loc 1 1143 10
 3622 0102 7B68     	 ldr r3,[r7,#4]
 3623 0104 5B7B     	 ldrb r3,[r3,#13]
 3624              	 .loc 1 1143 6
 3625 0106 002B     	 cmp r3,#0
 3626 0108 04D1     	 bne .L187
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1145:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1146:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3627              	 .loc 1 1146 25
 3628 010a 3B7F     	 ldrb r3,[r7,#28]
 3629 010c 43F02003 	 orr r3,r3,#32
 3630 0110 3B77     	 strb r3,[r7,#28]
 3631 0112 03E0     	 b .L188
 3632              	.L187:
1147:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1150:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3633              	 .loc 1 1150 25
 3634 0114 3B7F     	 ldrb r3,[r7,#28]
 3635 0116 6FF34513 	 bfc r3,#5,#1
 3636 011a 3B77     	 strb r3,[r7,#28]
 3637              	.L188:
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3638              	 .loc 1 1152 13
 3639 011c 464B     	 ldr r3,.L191+12
 3640 011e D3F8A031 	 ldr r3,[r3,#416]
 3641              	 .loc 1 1152 48
 3642 0122 FA69     	 ldr r2,[r7,#28]
 3643              	 .loc 1 1152 39
 3644 0124 9A60     	 str r2,[r3,#8]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 3645              	 .loc 1 1154 27
 3646 0126 444B     	 ldr r3,.L191+12
 3647 0128 D3F8A031 	 ldr r3,[r3,#416]
 3648              	 .loc 1 1154 43
 3649 012c DB68     	 ldr r3,[r3,#12]
 3650              	 .loc 1 1154 15
 3651 012e BB61     	 str r3,[r7,#24]
1155:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3652              	 .loc 1 1155 28
 3653 0130 FB7E     	 ldrb r3,[r7,#27]
 3654 0132 43F04003 	 orr r3,r3,#64
 3655 0136 FB76     	 strb r3,[r7,#27]
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3656              	 .loc 1 1156 20
 3657 0138 7B7E     	 ldrb r3,[r7,#25]
 3658 013a 43F00103 	 orr r3,r3,#1
 3659 013e 7B76     	 strb r3,[r7,#25]
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3660              	 .loc 1 1157 13
 3661 0140 3D4B     	 ldr r3,.L191+12
 3662 0142 D3F8A031 	 ldr r3,[r3,#416]
 3663              	 .loc 1 1157 48
 3664 0146 BA69     	 ldr r2,[r7,#24]
 3665              	 .loc 1 1157 39
 3666 0148 DA60     	 str r2,[r3,#12]
1158:../Libraries/XMCLib/src/xmc_usbd.c **** 
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3667              	 .loc 1 1161 24
 3668 014a 3B4B     	 ldr r3,.L191+12
 3669 014c D3F8A431 	 ldr r3,[r3,#420]
 3670              	 .loc 1 1161 40
 3671 0150 1B68     	 ldr r3,[r3]
 3672              	 .loc 1 1161 12
 3673 0152 7B61     	 str r3,[r7,#20]
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3674              	 .loc 1 1162 17
 3675 0154 3B7D     	 ldrb r3,[r7,#20]
 3676 0156 43F00303 	 orr r3,r3,#3
 3677 015a 3B75     	 strb r3,[r7,#20]
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3678              	 .loc 1 1163 18
 3679 015c BB7D     	 ldrb r3,[r7,#22]
 3680 015e 6FF3C713 	 bfc r3,#7,#1
 3681 0162 BB75     	 strb r3,[r7,#22]
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3682              	 .loc 1 1164 13
 3683 0164 344B     	 ldr r3,.L191+12
 3684 0166 D3F8A431 	 ldr r3,[r3,#420]
 3685              	 .loc 1 1164 42
 3686 016a 7A69     	 ldr r2,[r7,#20]
 3687              	 .loc 1 1164 36
 3688 016c 1A60     	 str r2,[r3]
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3689              	 .loc 1 1166 24
 3690 016e 324B     	 ldr r3,.L191+12
 3691 0170 D3F8A431 	 ldr r3,[r3,#420]
 3692              	 .loc 1 1166 40
 3693 0174 5B68     	 ldr r3,[r3,#4]
 3694              	 .loc 1 1166 12
 3695 0176 3B61     	 str r3,[r7,#16]
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3696              	 .loc 1 1167 20
 3697 0178 3B7C     	 ldrb r3,[r7,#16]
 3698 017a 43F00203 	 orr r3,r3,#2
 3699 017e 3B74     	 strb r3,[r7,#16]
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3700              	 .loc 1 1169 13
 3701 0180 2D4B     	 ldr r3,.L191+12
 3702 0182 D3F8A431 	 ldr r3,[r3,#420]
 3703              	 .loc 1 1169 42
 3704 0186 3A69     	 ldr r2,[r7,#16]
 3705              	 .loc 1 1169 36
 3706 0188 5A60     	 str r2,[r3,#4]
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3707              	 .loc 1 1171 3
 3708 018a 1020     	 movs r0,#16
 3709 018c FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3710              	 .loc 1 1172 3
 3711 0190 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1174:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3712              	 .loc 1 1175 13
 3713 0194 284B     	 ldr r3,.L191+12
 3714 0196 D3F8A031 	 ldr r3,[r3,#416]
 3715              	 .loc 1 1175 39
 3716 019a 0022     	 movs r2,#0
 3717 019c 9A61     	 str r2,[r3,#24]
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3718              	 .loc 1 1176 13
 3719 019e 264B     	 ldr r3,.L191+12
 3720 01a0 D3F8A031 	 ldr r3,[r3,#416]
 3721              	 .loc 1 1176 39
 3722 01a4 4FF0FF32 	 mov r2,#-1
 3723 01a8 5A61     	 str r2,[r3,#20]
1177:../Libraries/XMCLib/src/xmc_usbd.c **** 
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3724              	 .loc 1 1178 15
 3725 01aa 0023     	 movs r3,#0
 3726 01ac FB60     	 str r3,[r7,#12]
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3727              	 .loc 1 1180 26
 3728 01ae 3B7B     	 ldrb r3,[r7,#12]
 3729 01b0 43F00203 	 orr r3,r3,#2
 3730 01b4 3B73     	 strb r3,[r7,#12]
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3731              	 .loc 1 1181 21
 3732 01b6 3B7B     	 ldrb r3,[r7,#12]
 3733 01b8 43F00403 	 orr r3,r3,#4
 3734 01bc 3B73     	 strb r3,[r7,#12]
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3735              	 .loc 1 1182 25
 3736 01be FB7B     	 ldrb r3,[r7,#15]
 3737 01c0 43F04003 	 orr r3,r3,#64
 3738 01c4 FB73     	 strb r3,[r7,#15]
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3739              	 .loc 1 1184 22
 3740 01c6 7B7B     	 ldrb r3,[r7,#13]
 3741 01c8 43F01003 	 orr r3,r3,#16
 3742 01cc 7B73     	 strb r3,[r7,#13]
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3743              	 .loc 1 1185 22
 3744 01ce 7B7B     	 ldrb r3,[r7,#13]
 3745 01d0 43F02003 	 orr r3,r3,#32
 3746 01d4 7B73     	 strb r3,[r7,#13]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3747              	 .loc 1 1186 25
 3748 01d6 7B7B     	 ldrb r3,[r7,#13]
 3749 01d8 43F00403 	 orr r3,r3,#4
 3750 01dc 7B73     	 strb r3,[r7,#13]
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3751              	 .loc 1 1187 24
 3752 01de 7B7B     	 ldrb r3,[r7,#13]
 3753 01e0 43F00803 	 orr r3,r3,#8
 3754 01e4 7B73     	 strb r3,[r7,#13]
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3755              	 .loc 1 1188 22
 3756 01e6 FB7B     	 ldrb r3,[r7,#15]
 3757 01e8 43F08003 	 orr r3,r3,#128
 3758 01ec FB73     	 strb r3,[r7,#15]
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3759              	 .loc 1 1189 21
 3760 01ee 3B7B     	 ldrb r3,[r7,#12]
 3761 01f0 43F00803 	 orr r3,r3,#8
 3762 01f4 3B73     	 strb r3,[r7,#12]
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3763              	 .loc 1 1190 10
 3764 01f6 7B68     	 ldr r3,[r7,#4]
 3765 01f8 5B7B     	 ldrb r3,[r3,#13]
 3766              	 .loc 1 1190 6
 3767 01fa 012B     	 cmp r3,#1
 3768 01fc 03D1     	 bne .L189
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1192:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3769              	 .loc 1 1192 25
 3770 01fe 3B7B     	 ldrb r3,[r7,#12]
 3771 0200 43F01003 	 orr r3,r3,#16
 3772 0204 3B73     	 strb r3,[r7,#12]
 3773              	.L189:
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3774              	 .loc 1 1194 23
 3775 0206 BB7B     	 ldrb r3,[r7,#14]
 3776 0208 43F00803 	 orr r3,r3,#8
 3777 020c BB73     	 strb r3,[r7,#14]
1195:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3778              	 .loc 1 1195 22
 3779 020e BB7B     	 ldrb r3,[r7,#14]
 3780 0210 43F00403 	 orr r3,r3,#4
 3781 0214 BB73     	 strb r3,[r7,#14]
1196:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3782              	 .loc 1 1196 13
 3783 0216 084B     	 ldr r3,.L191+12
 3784 0218 D3F8A031 	 ldr r3,[r3,#416]
 3785              	 .loc 1 1196 48
 3786 021c FA68     	 ldr r2,[r7,#12]
 3787              	 .loc 1 1196 39
 3788 021e 9A61     	 str r2,[r3,#24]
1197:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3789              	 .loc 1 1197 10
 3790 0220 0023     	 movs r3,#0
1198:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3791              	 .loc 1 1198 1
 3792 0222 1846     	 mov r0,r3
 3793 0224 2837     	 adds r7,r7,#40
 3794              	.LCFI138:
 3795              	 .cfi_def_cfa_offset 8
 3796 0226 BD46     	 mov sp,r7
 3797              	.LCFI139:
 3798              	 .cfi_def_cfa_register 13
 3799              	 
 3800 0228 80BD     	 pop {r7,pc}
 3801              	.L192:
 3802 022a 00BF     	 .align 2
 3803              	.L191:
 3804 022c 00000000 	 .word usbd_init
 3805 0230 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3806 0234 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3807 0238 00000000 	 .word xmc_device
 3808              	 .cfi_endproc
 3809              	.LFE196:
 3811              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3812              	 .align 1
 3813              	 .global XMC_USBD_Uninitialize
 3814              	 .syntax unified
 3815              	 .thumb
 3816              	 .thumb_func
 3817              	 .fpu fpv4-sp-d16
 3819              	XMC_USBD_Uninitialize:
 3820              	.LFB197:
1199:../Libraries/XMCLib/src/xmc_usbd.c **** 
1200:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1201:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1202:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1203:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize()
1204:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3821              	 .loc 1 1204 1
 3822              	 .cfi_startproc
 3823              	 
 3824              	 
 3825 0000 80B5     	 push {r7,lr}
 3826              	.LCFI140:
 3827              	 .cfi_def_cfa_offset 8
 3828              	 .cfi_offset 7,-8
 3829              	 .cfi_offset 14,-4
 3830 0002 82B0     	 sub sp,sp,#8
 3831              	.LCFI141:
 3832              	 .cfi_def_cfa_offset 16
 3833 0004 00AF     	 add r7,sp,#0
 3834              	.LCFI142:
 3835              	 .cfi_def_cfa_register 7
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3836              	 .loc 1 1207 24
 3837 0006 0C4B     	 ldr r3,.L195
 3838 0008 D3F8A431 	 ldr r3,[r3,#420]
 3839              	 .loc 1 1207 40
 3840 000c 5B68     	 ldr r3,[r3,#4]
 3841              	 .loc 1 1207 12
 3842 000e 7B60     	 str r3,[r7,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3843              	 .loc 1 1208 20
 3844 0010 3B79     	 ldrb r3,[r7,#4]
 3845 0012 43F00203 	 orr r3,r3,#2
 3846 0016 3B71     	 strb r3,[r7,#4]
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3847              	 .loc 1 1209 13
 3848 0018 074B     	 ldr r3,.L195
 3849 001a D3F8A431 	 ldr r3,[r3,#420]
 3850              	 .loc 1 1209 42
 3851 001e 7A68     	 ldr r2,[r7,#4]
 3852              	 .loc 1 1209 36
 3853 0020 5A60     	 str r2,[r3,#4]
1210:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1211:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)&xmc_device, 0U, sizeof(xmc_device));
 3854              	 .loc 1 1211 3
 3855 0022 4FF40272 	 mov r2,#520
 3856 0026 0021     	 movs r1,#0
 3857 0028 0348     	 ldr r0,.L195
 3858 002a FFF7FEFF 	 bl memset
1212:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3859              	 .loc 1 1212 10
 3860 002e 0023     	 movs r3,#0
1213:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3861              	 .loc 1 1213 1
 3862 0030 1846     	 mov r0,r3
 3863 0032 0837     	 adds r7,r7,#8
 3864              	.LCFI143:
 3865              	 .cfi_def_cfa_offset 8
 3866 0034 BD46     	 mov sp,r7
 3867              	.LCFI144:
 3868              	 .cfi_def_cfa_register 13
 3869              	 
 3870 0036 80BD     	 pop {r7,pc}
 3871              	.L196:
 3872              	 .align 2
 3873              	.L195:
 3874 0038 00000000 	 .word xmc_device
 3875              	 .cfi_endproc
 3876              	.LFE197:
 3878              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3879              	 .align 1
 3880              	 .global XMC_USBD_DeviceConnect
 3881              	 .syntax unified
 3882              	 .thumb
 3883              	 .thumb_func
 3884              	 .fpu fpv4-sp-d16
 3886              	XMC_USBD_DeviceConnect:
 3887              	.LFB198:
1214:../Libraries/XMCLib/src/xmc_usbd.c **** 
1215:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1216:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1217:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1218:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect()
1219:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3888              	 .loc 1 1219 1
 3889              	 .cfi_startproc
 3890              	 
 3891              	 
 3892              	 
 3893 0000 80B4     	 push {r7}
 3894              	.LCFI145:
 3895              	 .cfi_def_cfa_offset 4
 3896              	 .cfi_offset 7,-4
 3897 0002 83B0     	 sub sp,sp,#12
 3898              	.LCFI146:
 3899              	 .cfi_def_cfa_offset 16
 3900 0004 00AF     	 add r7,sp,#0
 3901              	.LCFI147:
 3902              	 .cfi_def_cfa_register 7
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3903              	 .loc 1 1222 24
 3904 0006 0A4B     	 ldr r3,.L199
 3905 0008 D3F8A431 	 ldr r3,[r3,#420]
 3906              	 .loc 1 1222 40
 3907 000c 5B68     	 ldr r3,[r3,#4]
 3908              	 .loc 1 1222 12
 3909 000e 7B60     	 str r3,[r7,#4]
1223:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3910              	 .loc 1 1223 20
 3911 0010 3B79     	 ldrb r3,[r7,#4]
 3912 0012 6FF34103 	 bfc r3,#1,#1
 3913 0016 3B71     	 strb r3,[r7,#4]
1224:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3914              	 .loc 1 1224 13
 3915 0018 054B     	 ldr r3,.L199
 3916 001a D3F8A431 	 ldr r3,[r3,#420]
 3917              	 .loc 1 1224 42
 3918 001e 7A68     	 ldr r2,[r7,#4]
 3919              	 .loc 1 1224 36
 3920 0020 5A60     	 str r2,[r3,#4]
1225:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3921              	 .loc 1 1225 10
 3922 0022 0023     	 movs r3,#0
1226:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3923              	 .loc 1 1226 1
 3924 0024 1846     	 mov r0,r3
 3925 0026 0C37     	 adds r7,r7,#12
 3926              	.LCFI148:
 3927              	 .cfi_def_cfa_offset 4
 3928 0028 BD46     	 mov sp,r7
 3929              	.LCFI149:
 3930              	 .cfi_def_cfa_register 13
 3931              	 
 3932 002a 5DF8047B 	 ldr r7,[sp],#4
 3933              	.LCFI150:
 3934              	 .cfi_restore 7
 3935              	 .cfi_def_cfa_offset 0
 3936 002e 7047     	 bx lr
 3937              	.L200:
 3938              	 .align 2
 3939              	.L199:
 3940 0030 00000000 	 .word xmc_device
 3941              	 .cfi_endproc
 3942              	.LFE198:
 3944              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3945              	 .align 1
 3946              	 .global XMC_USBD_DeviceDisconnect
 3947              	 .syntax unified
 3948              	 .thumb
 3949              	 .thumb_func
 3950              	 .fpu fpv4-sp-d16
 3952              	XMC_USBD_DeviceDisconnect:
 3953              	.LFB199:
1227:../Libraries/XMCLib/src/xmc_usbd.c **** 
1228:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1229:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1230:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1231:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect()
1232:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3954              	 .loc 1 1232 1
 3955              	 .cfi_startproc
 3956              	 
 3957              	 
 3958              	 
 3959 0000 80B4     	 push {r7}
 3960              	.LCFI151:
 3961              	 .cfi_def_cfa_offset 4
 3962              	 .cfi_offset 7,-4
 3963 0002 83B0     	 sub sp,sp,#12
 3964              	.LCFI152:
 3965              	 .cfi_def_cfa_offset 16
 3966 0004 00AF     	 add r7,sp,#0
 3967              	.LCFI153:
 3968              	 .cfi_def_cfa_register 7
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3969              	 .loc 1 1234 24
 3970 0006 0A4B     	 ldr r3,.L203
 3971 0008 D3F8A431 	 ldr r3,[r3,#420]
 3972              	 .loc 1 1234 40
 3973 000c 5B68     	 ldr r3,[r3,#4]
 3974              	 .loc 1 1234 12
 3975 000e 7B60     	 str r3,[r7,#4]
1235:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3976              	 .loc 1 1235 20
 3977 0010 3B79     	 ldrb r3,[r7,#4]
 3978 0012 43F00203 	 orr r3,r3,#2
 3979 0016 3B71     	 strb r3,[r7,#4]
1236:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3980              	 .loc 1 1236 13
 3981 0018 054B     	 ldr r3,.L203
 3982 001a D3F8A431 	 ldr r3,[r3,#420]
 3983              	 .loc 1 1236 42
 3984 001e 7A68     	 ldr r2,[r7,#4]
 3985              	 .loc 1 1236 36
 3986 0020 5A60     	 str r2,[r3,#4]
1237:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3987              	 .loc 1 1237 10
 3988 0022 0023     	 movs r3,#0
1238:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3989              	 .loc 1 1238 1
 3990 0024 1846     	 mov r0,r3
 3991 0026 0C37     	 adds r7,r7,#12
 3992              	.LCFI154:
 3993              	 .cfi_def_cfa_offset 4
 3994 0028 BD46     	 mov sp,r7
 3995              	.LCFI155:
 3996              	 .cfi_def_cfa_register 13
 3997              	 
 3998 002a 5DF8047B 	 ldr r7,[sp],#4
 3999              	.LCFI156:
 4000              	 .cfi_restore 7
 4001              	 .cfi_def_cfa_offset 0
 4002 002e 7047     	 bx lr
 4003              	.L204:
 4004              	 .align 2
 4005              	.L203:
 4006 0030 00000000 	 .word xmc_device
 4007              	 .cfi_endproc
 4008              	.LFE199:
 4010              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 4011              	 .align 1
 4012              	 .global XMC_USBD_DeviceGetState
 4013              	 .syntax unified
 4014              	 .thumb
 4015              	 .thumb_func
 4016              	 .fpu fpv4-sp-d16
 4018              	XMC_USBD_DeviceGetState:
 4019              	.LFB200:
1239:../Libraries/XMCLib/src/xmc_usbd.c **** 
1240:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1241:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1242:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1243:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj)
1244:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4020              	 .loc 1 1244 1
 4021              	 .cfi_startproc
 4022              	 
 4023              	 
 4024 0000 80B5     	 push {r7,lr}
 4025              	.LCFI157:
 4026              	 .cfi_def_cfa_offset 8
 4027              	 .cfi_offset 7,-8
 4028              	 .cfi_offset 14,-4
 4029 0002 84B0     	 sub sp,sp,#16
 4030              	.LCFI158:
 4031              	 .cfi_def_cfa_offset 24
 4032 0004 00AF     	 add r7,sp,#0
 4033              	.LCFI159:
 4034              	 .cfi_def_cfa_register 7
 4035 0006 7860     	 str r0,[r7,#4]
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state = {0U};
 4036              	 .loc 1 1245 20
 4037 0008 0023     	 movs r3,#0
 4038 000a FB60     	 str r3,[r7,#12]
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 4039              	 .loc 1 1246 15
 4040 000c 3B7B     	 ldrb r3,[r7,#12]
 4041 000e 0122     	 movs r2,#1
 4042 0010 62F3C403 	 bfi r3,r2,#3,#2
 4043 0014 3B73     	 strb r3,[r7,#12]
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 4044              	 .loc 1 1247 31
 4045 0016 124B     	 ldr r3,.L207
 4046 0018 93F8FE31 	 ldrb r3,[r3,#510]
 4047 001c C3F30003 	 ubfx r3,r3,#0,#1
 4048 0020 DAB2     	 uxtb r2,r3
 4049              	 .loc 1 1247 19
 4050 0022 3B7B     	 ldrb r3,[r7,#12]
 4051 0024 62F34103 	 bfi r3,r2,#1,#1
 4052 0028 3B73     	 strb r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 4053              	 .loc 1 1248 18
 4054 002a 7868     	 ldr r0,[r7,#4]
 4055 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 4056 0030 0346     	 mov r3,r0
 4057 0032 03F00103 	 and r3,r3,#1
 4058 0036 DAB2     	 uxtb r2,r3
 4059              	 .loc 1 1248 16
 4060 0038 3B7B     	 ldrb r3,[r7,#12]
 4061 003a 62F38203 	 bfi r3,r2,#2,#1
 4062 003e 3B73     	 strb r3,[r7,#12]
1249:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 4063              	 .loc 1 1249 29
 4064 0040 074B     	 ldr r3,.L207
 4065 0042 93F8FE31 	 ldrb r3,[r3,#510]
 4066 0046 C3F38003 	 ubfx r3,r3,#2,#1
 4067 004a DAB2     	 uxtb r2,r3
 4068              	 .loc 1 1249 17
 4069 004c 3B7B     	 ldrb r3,[r7,#12]
 4070 004e 62F30003 	 bfi r3,r2,#0,#1
 4071 0052 3B73     	 strb r3,[r7,#12]
1250:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 4072              	 .loc 1 1250 10
 4073 0054 FB68     	 ldr r3,[r7,#12]
1251:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4074              	 .loc 1 1251 1
 4075 0056 1846     	 mov r0,r3
 4076 0058 1037     	 adds r7,r7,#16
 4077              	.LCFI160:
 4078              	 .cfi_def_cfa_offset 8
 4079 005a BD46     	 mov sp,r7
 4080              	.LCFI161:
 4081              	 .cfi_def_cfa_register 13
 4082              	 
 4083 005c 80BD     	 pop {r7,pc}
 4084              	.L208:
 4085 005e 00BF     	 .align 2
 4086              	.L207:
 4087 0060 00000000 	 .word xmc_device
 4088              	 .cfi_endproc
 4089              	.LFE200:
 4091              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 4092              	 .align 1
 4093              	 .global XMC_USBD_EndpointReadStart
 4094              	 .syntax unified
 4095              	 .thumb
 4096              	 .thumb_func
 4097              	 .fpu fpv4-sp-d16
 4099              	XMC_USBD_EndpointReadStart:
 4100              	.LFB201:
1252:../Libraries/XMCLib/src/xmc_usbd.c **** 
1253:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1254:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1255:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1256:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size)
1257:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4101              	 .loc 1 1257 1
 4102              	 .cfi_startproc
 4103              	 
 4104              	 
 4105 0000 80B5     	 push {r7,lr}
 4106              	.LCFI162:
 4107              	 .cfi_def_cfa_offset 8
 4108              	 .cfi_offset 7,-8
 4109              	 .cfi_offset 14,-4
 4110 0002 84B0     	 sub sp,sp,#16
 4111              	.LCFI163:
 4112              	 .cfi_def_cfa_offset 24
 4113 0004 00AF     	 add r7,sp,#0
 4114              	.LCFI164:
 4115              	 .cfi_def_cfa_register 7
 4116 0006 0346     	 mov r3,r0
 4117 0008 3960     	 str r1,[r7]
 4118 000a FB71     	 strb r3,[r7,#7]
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 4119              	 .loc 1 1258 46
 4120 000c FB79     	 ldrb r3,[r7,#7]
 4121 000e 03F00F03 	 and r3,r3,#15
 4122              	 .loc 1 1258 18
 4123 0012 3422     	 movs r2,#52
 4124 0014 02FB03F3 	 mul r3,r2,r3
 4125 0018 1A4A     	 ldr r2,.L215
 4126 001a 1344     	 add r3,r3,r2
 4127 001c BB60     	 str r3,[r7,#8]
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1260:../Libraries/XMCLib/src/xmc_usbd.c **** 
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 4128              	 .loc 1 1261 9
 4129 001e BB68     	 ldr r3,[r7,#8]
 4130 0020 5B68     	 ldr r3,[r3,#4]
 4131 0022 C3F30013 	 ubfx r3,r3,#4,#1
 4132 0026 DBB2     	 uxtb r3,r3
 4133              	 .loc 1 1261 6
 4134 0028 002B     	 cmp r3,#0
 4135 002a 06D1     	 bne .L210
 4136              	 .loc 1 1261 23 discriminator 1
 4137 002c BB68     	 ldr r3,[r7,#8]
 4138 002e 1B79     	 ldrb r3,[r3,#4]
 4139 0030 03F00403 	 and r3,r3,#4
 4140 0034 DBB2     	 uxtb r3,r3
 4141              	 .loc 1 1261 20 discriminator 1
 4142 0036 002B     	 cmp r3,#0
 4143 0038 02D1     	 bne .L211
 4144              	.L210:
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1263:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 4145              	 .loc 1 1263 12
 4146 003a 0123     	 movs r3,#1
 4147 003c FB73     	 strb r3,[r7,#15]
 4148 003e 1CE0     	 b .L212
 4149              	.L211:
1264:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1265:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1266:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 4150              	 .loc 1 1268 18
 4151 0040 BB68     	 ldr r3,[r7,#8]
 4152 0042 5B69     	 ldr r3,[r3,#20]
 4153              	 .loc 1 1268 8
 4154 0044 3A68     	 ldr r2,[r7]
 4155 0046 9A42     	 cmp r2,r3
 4156 0048 02D9     	 bls .L213
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1270:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 4157              	 .loc 1 1270 12
 4158 004a BB68     	 ldr r3,[r7,#8]
 4159 004c 5B69     	 ldr r3,[r3,#20]
 4160 004e 3B60     	 str r3,[r7]
 4161              	.L213:
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 4162              	 .loc 1 1273 19
 4163 0050 BB68     	 ldr r3,[r7,#8]
 4164 0052 3A68     	 ldr r2,[r7]
 4165 0054 1A63     	 str r2,[r3,#48]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 4166              	 .loc 1 1274 19
 4167 0056 BB68     	 ldr r3,[r7,#8]
 4168 0058 0022     	 movs r2,#0
 4169 005a DA62     	 str r2,[r3,#44]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 4170              	 .loc 1 1275 20
 4171 005c BB68     	 ldr r3,[r7,#8]
 4172 005e 0022     	 movs r2,#0
 4173 0060 9A62     	 str r2,[r3,#40]
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 4174              	 .loc 1 1276 24
 4175 0062 BB68     	 ldr r3,[r7,#8]
 4176 0064 DA68     	 ldr r2,[r3,#12]
 4177              	 .loc 1 1276 20
 4178 0066 BB68     	 ldr r3,[r7,#8]
 4179 0068 5A62     	 str r2,[r3,#36]
1277:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 4180              	 .loc 1 1277 27
 4181 006a BB68     	 ldr r3,[r7,#8]
 4182 006c 0022     	 movs r2,#0
 4183 006e 1A61     	 str r2,[r3,#16]
1278:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 4184              	 .loc 1 1278 5
 4185 0070 B868     	 ldr r0,[r7,#8]
 4186 0072 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1279:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 4187              	 .loc 1 1279 12
 4188 0076 0023     	 movs r3,#0
 4189 0078 FB73     	 strb r3,[r7,#15]
 4190              	.L212:
1280:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1281:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 4191              	 .loc 1 1281 10
 4192 007a FB7B     	 ldrb r3,[r7,#15]
1282:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4193              	 .loc 1 1282 1
 4194 007c 1846     	 mov r0,r3
 4195 007e 1037     	 adds r7,r7,#16
 4196              	.LCFI165:
 4197              	 .cfi_def_cfa_offset 8
 4198 0080 BD46     	 mov sp,r7
 4199              	.LCFI166:
 4200              	 .cfi_def_cfa_register 13
 4201              	 
 4202 0082 80BD     	 pop {r7,pc}
 4203              	.L216:
 4204              	 .align 2
 4205              	.L215:
 4206 0084 00000000 	 .word xmc_device
 4207              	 .cfi_endproc
 4208              	.LFE201:
 4210              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 4211              	 .align 1
 4212              	 .global XMC_USBD_EndpointRead
 4213              	 .syntax unified
 4214              	 .thumb
 4215              	 .thumb_func
 4216              	 .fpu fpv4-sp-d16
 4218              	XMC_USBD_EndpointRead:
 4219              	.LFB202:
1283:../Libraries/XMCLib/src/xmc_usbd.c **** 
1284:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1285:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1286:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1287:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num, uint8_t *buffer, uint32_t length)
1288:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4220              	 .loc 1 1288 1
 4221              	 .cfi_startproc
 4222              	 
 4223              	 
 4224 0000 80B5     	 push {r7,lr}
 4225              	.LCFI167:
 4226              	 .cfi_def_cfa_offset 8
 4227              	 .cfi_offset 7,-8
 4228              	 .cfi_offset 14,-4
 4229 0002 86B0     	 sub sp,sp,#24
 4230              	.LCFI168:
 4231              	 .cfi_def_cfa_offset 32
 4232 0004 00AF     	 add r7,sp,#0
 4233              	.LCFI169:
 4234              	 .cfi_def_cfa_register 7
 4235 0006 0346     	 mov r3,r0
 4236 0008 B960     	 str r1,[r7,#8]
 4237 000a 7A60     	 str r2,[r7,#4]
 4238 000c FB73     	 strb r3,[r7,#15]
1289:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 4239              	 .loc 1 1289 37
 4240 000e FB7B     	 ldrb r3,[r7,#15]
 4241              	 .loc 1 1289 18
 4242 0010 3422     	 movs r2,#52
 4243 0012 02FB03F3 	 mul r3,r2,r3
 4244 0016 174A     	 ldr r2,.L222
 4245 0018 1344     	 add r3,r3,r2
 4246 001a 7B61     	 str r3,[r7,#20]
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 4247              	 .loc 1 1290 18
 4248 001c 7B69     	 ldr r3,[r7,#20]
 4249 001e 1B69     	 ldr r3,[r3,#16]
 4250              	 .loc 1 1290 6
 4251 0020 7A68     	 ldr r2,[r7,#4]
 4252 0022 9A42     	 cmp r2,r3
 4253 0024 02D9     	 bls .L218
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1292:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 4254              	 .loc 1 1292 12
 4255 0026 7B69     	 ldr r3,[r7,#20]
 4256 0028 1B69     	 ldr r3,[r3,#16]
 4257 002a 7B60     	 str r3,[r7,#4]
 4258              	.L218:
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer, &ep->outBuffer[ep->outOffset], length);
 4259              	 .loc 1 1294 21
 4260 002c 7B69     	 ldr r3,[r7,#20]
 4261 002e DA68     	 ldr r2,[r3,#12]
 4262              	 .loc 1 1294 35
 4263 0030 7B69     	 ldr r3,[r7,#20]
 4264 0032 9B69     	 ldr r3,[r3,#24]
 4265              	 .loc 1 1294 18
 4266 0034 1344     	 add r3,r3,r2
 4267              	 .loc 1 1294 3
 4268 0036 7A68     	 ldr r2,[r7,#4]
 4269 0038 1946     	 mov r1,r3
 4270 003a B868     	 ldr r0,[r7,#8]
 4271 003c FFF7FEFF 	 bl memcpy
1295:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 4272              	 .loc 1 1295 25
 4273 0040 7B69     	 ldr r3,[r7,#20]
 4274 0042 1A69     	 ldr r2,[r3,#16]
 4275 0044 7B68     	 ldr r3,[r7,#4]
 4276 0046 D21A     	 subs r2,r2,r3
 4277 0048 7B69     	 ldr r3,[r7,#20]
 4278 004a 1A61     	 str r2,[r3,#16]
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 4279              	 .loc 1 1296 9
 4280 004c 7B69     	 ldr r3,[r7,#20]
 4281 004e 1B69     	 ldr r3,[r3,#16]
 4282              	 .loc 1 1296 6
 4283 0050 002B     	 cmp r3,#0
 4284 0052 06D0     	 beq .L219
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1298:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 4285              	 .loc 1 1298 19
 4286 0054 7B69     	 ldr r3,[r7,#20]
 4287 0056 9A69     	 ldr r2,[r3,#24]
 4288 0058 7B68     	 ldr r3,[r7,#4]
 4289 005a 1A44     	 add r2,r2,r3
 4290 005c 7B69     	 ldr r3,[r7,#20]
 4291 005e 9A61     	 str r2,[r3,#24]
 4292 0060 02E0     	 b .L220
 4293              	.L219:
1299:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1302:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 4294              	 .loc 1 1302 19
 4295 0062 7B69     	 ldr r3,[r7,#20]
 4296 0064 0022     	 movs r2,#0
 4297 0066 9A61     	 str r2,[r3,#24]
 4298              	.L220:
1303:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1304:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 4299              	 .loc 1 1304 10
 4300 0068 7B68     	 ldr r3,[r7,#4]
1305:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4301              	 .loc 1 1305 1
 4302 006a 1846     	 mov r0,r3
 4303 006c 1837     	 adds r7,r7,#24
 4304              	.LCFI170:
 4305              	 .cfi_def_cfa_offset 8
 4306 006e BD46     	 mov sp,r7
 4307              	.LCFI171:
 4308              	 .cfi_def_cfa_register 13
 4309              	 
 4310 0070 80BD     	 pop {r7,pc}
 4311              	.L223:
 4312 0072 00BF     	 .align 2
 4313              	.L222:
 4314 0074 00000000 	 .word xmc_device
 4315              	 .cfi_endproc
 4316              	.LFE202:
 4318              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 4319              	 .align 1
 4320              	 .global XMC_USBD_EndpointWrite
 4321              	 .syntax unified
 4322              	 .thumb
 4323              	 .thumb_func
 4324              	 .fpu fpv4-sp-d16
 4326              	XMC_USBD_EndpointWrite:
 4327              	.LFB203:
1306:../Libraries/XMCLib/src/xmc_usbd.c **** 
1307:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1308:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1309:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1310:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num, const uint8_t *buffer, uint32_t length)
1311:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4328              	 .loc 1 1311 1
 4329              	 .cfi_startproc
 4330              	 
 4331              	 
 4332 0000 80B5     	 push {r7,lr}
 4333              	.LCFI172:
 4334              	 .cfi_def_cfa_offset 8
 4335              	 .cfi_offset 7,-8
 4336              	 .cfi_offset 14,-4
 4337 0002 86B0     	 sub sp,sp,#24
 4338              	.LCFI173:
 4339              	 .cfi_def_cfa_offset 32
 4340 0004 00AF     	 add r7,sp,#0
 4341              	.LCFI174:
 4342              	 .cfi_def_cfa_register 7
 4343 0006 0346     	 mov r3,r0
 4344 0008 B960     	 str r1,[r7,#8]
 4345 000a 7A60     	 str r2,[r7,#4]
 4346 000c FB73     	 strb r3,[r7,#15]
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 4347              	 .loc 1 1312 45
 4348 000e FB7B     	 ldrb r3,[r7,#15]
 4349 0010 03F00F03 	 and r3,r3,#15
 4350              	 .loc 1 1312 18
 4351 0014 3422     	 movs r2,#52
 4352 0016 02FB03F3 	 mul r3,r2,r3
 4353 001a 214A     	 ldr r2,.L230
 4354 001c 1344     	 add r3,r3,r2
 4355 001e 3B61     	 str r3,[r7,#16]
1313:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4356              	 .loc 1 1314 7
 4357 0020 3B69     	 ldr r3,[r7,#16]
 4358 0022 1B79     	 ldrb r3,[r3,#4]
 4359 0024 03F00403 	 and r3,r3,#4
 4360 0028 DBB2     	 uxtb r3,r3
 4361              	 .loc 1 1314 6
 4362 002a 002B     	 cmp r3,#0
 4363 002c 02D1     	 bne .L225
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1316:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 4364              	 .loc 1 1316 12
 4365 002e 0123     	 movs r3,#1
 4366 0030 7B61     	 str r3,[r7,#20]
 4367 0032 30E0     	 b .L226
 4368              	.L225:
1317:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 4369              	 .loc 1 1318 14
 4370 0034 3B69     	 ldr r3,[r7,#16]
 4371 0036 5B68     	 ldr r3,[r3,#4]
 4372 0038 C3F3C003 	 ubfx r3,r3,#3,#1
 4373 003c DBB2     	 uxtb r3,r3
 4374              	 .loc 1 1318 11
 4375 003e 012B     	 cmp r3,#1
 4376 0040 02D1     	 bne .L227
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1320:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)0;
 4377              	 .loc 1 1320 12
 4378 0042 0023     	 movs r3,#0
 4379 0044 7B61     	 str r3,[r7,#20]
 4380 0046 26E0     	 b .L226
 4381              	.L227:
1321:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1322:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1323:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 4382              	 .loc 1 1324 20
 4383 0048 3B69     	 ldr r3,[r7,#16]
 4384 004a 1B6A     	 ldr r3,[r3,#32]
 4385              	 .loc 1 1324 8
 4386 004c 7A68     	 ldr r2,[r7,#4]
 4387 004e 9A42     	 cmp r2,r3
 4388 0050 02D9     	 bls .L228
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1326:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 4389              	 .loc 1 1326 14
 4390 0052 3B69     	 ldr r3,[r7,#16]
 4391 0054 1B6A     	 ldr r3,[r3,#32]
 4392 0056 7B60     	 str r3,[r7,#4]
 4393              	.L228:
1327:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     memcpy(ep->inBuffer, (const void *)buffer, length);
 4394              	 .loc 1 1329 14
 4395 0058 3B69     	 ldr r3,[r7,#16]
 4396 005a DB69     	 ldr r3,[r3,#28]
 4397              	 .loc 1 1329 5
 4398 005c 7A68     	 ldr r2,[r7,#4]
 4399 005e B968     	 ldr r1,[r7,#8]
 4400 0060 1846     	 mov r0,r3
 4401 0062 FFF7FEFF 	 bl memcpy
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->inBuffer;
 4402              	 .loc 1 1330 24
 4403 0066 3B69     	 ldr r3,[r7,#16]
 4404 0068 DA69     	 ldr r2,[r3,#28]
 4405              	 .loc 1 1330 20
 4406 006a 3B69     	 ldr r3,[r7,#16]
 4407 006c 5A62     	 str r2,[r3,#36]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 4408              	 .loc 1 1331 19
 4409 006e 3B69     	 ldr r3,[r7,#16]
 4410 0070 7A68     	 ldr r2,[r7,#4]
 4411 0072 1A63     	 str r2,[r3,#48]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 4412              	 .loc 1 1333 20
 4413 0074 3B69     	 ldr r3,[r7,#16]
 4414 0076 0022     	 movs r2,#0
 4415 0078 9A62     	 str r2,[r3,#40]
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 4416              	 .loc 1 1334 19
 4417 007a 3B69     	 ldr r3,[r7,#16]
 4418 007c 0022     	 movs r2,#0
 4419 007e DA62     	 str r2,[r3,#44]
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 4420              	 .loc 1 1335 17
 4421 0080 3A69     	 ldr r2,[r7,#16]
 4422 0082 5368     	 ldr r3,[r2,#4]
 4423 0084 43F00803 	 orr r3,r3,#8
 4424 0088 5360     	 str r3,[r2,#4]
1336:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1337:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 4425              	 .loc 1 1337 5
 4426 008a 3869     	 ldr r0,[r7,#16]
 4427 008c FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1338:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)ep->xferTotal;
 4428              	 .loc 1 1338 25
 4429 0090 3B69     	 ldr r3,[r7,#16]
 4430 0092 1B6B     	 ldr r3,[r3,#48]
 4431              	 .loc 1 1338 12
 4432 0094 7B61     	 str r3,[r7,#20]
 4433              	.L226:
1339:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1340:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 4434              	 .loc 1 1340 10
 4435 0096 7B69     	 ldr r3,[r7,#20]
1341:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4436              	 .loc 1 1341 1
 4437 0098 1846     	 mov r0,r3
 4438 009a 1837     	 adds r7,r7,#24
 4439              	.LCFI175:
 4440              	 .cfi_def_cfa_offset 8
 4441 009c BD46     	 mov sp,r7
 4442              	.LCFI176:
 4443              	 .cfi_def_cfa_register 13
 4444              	 
 4445 009e 80BD     	 pop {r7,pc}
 4446              	.L231:
 4447              	 .align 2
 4448              	.L230:
 4449 00a0 00000000 	 .word xmc_device
 4450              	 .cfi_endproc
 4451              	.LFE203:
 4453              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 4454              	 .align 1
 4455              	 .global XMC_USBD_DeviceSetAddress
 4456              	 .syntax unified
 4457              	 .thumb
 4458              	 .thumb_func
 4459              	 .fpu fpv4-sp-d16
 4461              	XMC_USBD_DeviceSetAddress:
 4462              	.LFB204:
1342:../Libraries/XMCLib/src/xmc_usbd.c **** 
1343:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1344:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1345:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1346:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address, const XMC_USBD_SET_ADDRESS_STAGE
1347:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4463              	 .loc 1 1347 1
 4464              	 .cfi_startproc
 4465              	 
 4466              	 
 4467              	 
 4468 0000 80B4     	 push {r7}
 4469              	.LCFI177:
 4470              	 .cfi_def_cfa_offset 4
 4471              	 .cfi_offset 7,-4
 4472 0002 85B0     	 sub sp,sp,#20
 4473              	.LCFI178:
 4474              	 .cfi_def_cfa_offset 24
 4475 0004 00AF     	 add r7,sp,#0
 4476              	.LCFI179:
 4477              	 .cfi_def_cfa_register 7
 4478 0006 0346     	 mov r3,r0
 4479 0008 0A46     	 mov r2,r1
 4480 000a FB71     	 strb r3,[r7,#7]
 4481 000c 1346     	 mov r3,r2
 4482 000e BB71     	 strb r3,[r7,#6]
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1349:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 4483              	 .loc 1 1349 24
 4484 0010 0D4B     	 ldr r3,.L235
 4485 0012 D3F8A431 	 ldr r3,[r3,#420]
 4486              	 .loc 1 1349 40
 4487 0016 1B68     	 ldr r3,[r3]
 4488              	 .loc 1 1349 12
 4489 0018 FB60     	 str r3,[r7,#12]
1350:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 4490              	 .loc 1 1350 6
 4491 001a BB79     	 ldrb r3,[r7,#6]
 4492 001c 002B     	 cmp r3,#0
 4493 001e 0CD1     	 bne .L233
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1352:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 4494              	 .loc 1 1352 20
 4495 0020 FB79     	 ldrb r3,[r7,#7]
 4496 0022 03F07F03 	 and r3,r3,#127
 4497 0026 DAB2     	 uxtb r2,r3
 4498 0028 BB89     	 ldrh r3,[r7,#12]
 4499 002a 62F30A13 	 bfi r3,r2,#4,#7
 4500 002e BB81     	 strh r3,[r7,#12]
1353:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 4501              	 .loc 1 1353 15
 4502 0030 054B     	 ldr r3,.L235
 4503 0032 D3F8A431 	 ldr r3,[r3,#420]
 4504              	 .loc 1 1353 44
 4505 0036 FA68     	 ldr r2,[r7,#12]
 4506              	 .loc 1 1353 38
 4507 0038 1A60     	 str r2,[r3]
 4508              	.L233:
1354:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1355:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4509              	 .loc 1 1355 10
 4510 003a 0023     	 movs r3,#0
1356:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4511              	 .loc 1 1356 1
 4512 003c 1846     	 mov r0,r3
 4513 003e 1437     	 adds r7,r7,#20
 4514              	.LCFI180:
 4515              	 .cfi_def_cfa_offset 4
 4516 0040 BD46     	 mov sp,r7
 4517              	.LCFI181:
 4518              	 .cfi_def_cfa_register 13
 4519              	 
 4520 0042 5DF8047B 	 ldr r7,[sp],#4
 4521              	.LCFI182:
 4522              	 .cfi_restore 7
 4523              	 .cfi_def_cfa_offset 0
 4524 0046 7047     	 bx lr
 4525              	.L236:
 4526              	 .align 2
 4527              	.L235:
 4528 0048 00000000 	 .word xmc_device
 4529              	 .cfi_endproc
 4530              	.LFE204:
 4532              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 4533              	 .align 1
 4534              	 .global XMC_USBD_EndpointStall
 4535              	 .syntax unified
 4536              	 .thumb
 4537              	 .thumb_func
 4538              	 .fpu fpv4-sp-d16
 4540              	XMC_USBD_EndpointStall:
 4541              	.LFB205:
1357:../Libraries/XMCLib/src/xmc_usbd.c **** 
1358:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1359:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1360:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1361:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall)
1362:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4542              	 .loc 1 1362 1
 4543              	 .cfi_startproc
 4544              	 
 4545              	 
 4546              	 
 4547 0000 80B4     	 push {r7}
 4548              	.LCFI183:
 4549              	 .cfi_def_cfa_offset 4
 4550              	 .cfi_offset 7,-4
 4551 0002 85B0     	 sub sp,sp,#20
 4552              	.LCFI184:
 4553              	 .cfi_def_cfa_offset 24
 4554 0004 00AF     	 add r7,sp,#0
 4555              	.LCFI185:
 4556              	 .cfi_def_cfa_register 7
 4557 0006 0346     	 mov r3,r0
 4558 0008 0A46     	 mov r2,r1
 4559 000a FB71     	 strb r3,[r7,#7]
 4560 000c 1346     	 mov r3,r2
 4561 000e BB71     	 strb r3,[r7,#6]
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1364:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 4562              	 .loc 1 1364 47
 4563 0010 FB79     	 ldrb r3,[r7,#7]
 4564 0012 03F00F03 	 and r3,r3,#15
 4565              	 .loc 1 1364 18
 4566 0016 3422     	 movs r2,#52
 4567 0018 02FB03F3 	 mul r3,r2,r3
 4568 001c 4A4A     	 ldr r2,.L245
 4569 001e 1344     	 add r3,r3,r2
 4570 0020 FB60     	 str r3,[r7,#12]
1365:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 4571              	 .loc 1 1365 6
 4572 0022 BB79     	 ldrb r3,[r7,#6]
 4573 0024 002B     	 cmp r3,#0
 4574 0026 40D0     	 beq .L238
1366:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1367:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4575              	 .loc 1 1367 9
 4576 0028 97F90730 	 ldrsb r3,[r7,#7]
 4577              	 .loc 1 1367 8
 4578 002c 002B     	 cmp r3,#0
 4579 002e 1ADA     	 bge .L239
1368:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1370:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4580              	 .loc 1 1370 74
 4581 0030 FB68     	 ldr r3,[r7,#12]
 4582 0032 1B78     	 ldrb r3,[r3]
 4583 0034 C3F30303 	 ubfx r3,r3,#0,#4
 4584 0038 DBB2     	 uxtb r3,r3
 4585              	 .loc 1 1370 49
 4586 003a 434A     	 ldr r2,.L245
 4587 003c 6A33     	 adds r3,r3,#106
 4588 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4589              	 .loc 1 1370 82
 4590 0042 1B68     	 ldr r3,[r3]
 4591              	 .loc 1 1370 16
 4592 0044 BB60     	 str r3,[r7,#8]
1371:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4593              	 .loc 1 1371 20
 4594 0046 BB7A     	 ldrb r3,[r7,#10]
 4595 0048 43F02003 	 orr r3,r3,#32
 4596 004c BB72     	 strb r3,[r7,#10]
1372:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4597              	 .loc 1 1372 63
 4598 004e FB68     	 ldr r3,[r7,#12]
 4599 0050 1B78     	 ldrb r3,[r3]
 4600 0052 C3F30303 	 ubfx r3,r3,#0,#4
 4601 0056 DBB2     	 uxtb r3,r3
 4602              	 .loc 1 1372 38
 4603 0058 3B4A     	 ldr r2,.L245
 4604 005a 6A33     	 adds r3,r3,#106
 4605 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4606              	 .loc 1 1372 87
 4607 0060 BA68     	 ldr r2,[r7,#8]
 4608              	 .loc 1 1372 81
 4609 0062 1A60     	 str r2,[r3]
 4610 0064 1BE0     	 b .L240
 4611              	.L239:
1373:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1374:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1375:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1377:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4612              	 .loc 1 1377 75
 4613 0066 FB68     	 ldr r3,[r7,#12]
 4614 0068 1B78     	 ldrb r3,[r3]
 4615 006a C3F30303 	 ubfx r3,r3,#0,#4
 4616 006e DBB2     	 uxtb r3,r3
 4617              	 .loc 1 1377 50
 4618 0070 354A     	 ldr r2,.L245
 4619 0072 7033     	 adds r3,r3,#112
 4620 0074 9B00     	 lsls r3,r3,#2
 4621 0076 1344     	 add r3,r3,r2
 4622 0078 5B68     	 ldr r3,[r3,#4]
 4623              	 .loc 1 1377 83
 4624 007a 1B68     	 ldr r3,[r3]
 4625              	 .loc 1 1377 16
 4626 007c BB60     	 str r3,[r7,#8]
1378:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4627              	 .loc 1 1378 20
 4628 007e BB7A     	 ldrb r3,[r7,#10]
 4629 0080 43F02003 	 orr r3,r3,#32
 4630 0084 BB72     	 strb r3,[r7,#10]
1379:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4631              	 .loc 1 1379 64
 4632 0086 FB68     	 ldr r3,[r7,#12]
 4633 0088 1B78     	 ldrb r3,[r3]
 4634 008a C3F30303 	 ubfx r3,r3,#0,#4
 4635 008e DBB2     	 uxtb r3,r3
 4636              	 .loc 1 1379 39
 4637 0090 2D4A     	 ldr r2,.L245
 4638 0092 7033     	 adds r3,r3,#112
 4639 0094 9B00     	 lsls r3,r3,#2
 4640 0096 1344     	 add r3,r3,r2
 4641 0098 5B68     	 ldr r3,[r3,#4]
 4642              	 .loc 1 1379 88
 4643 009a BA68     	 ldr r2,[r7,#8]
 4644              	 .loc 1 1379 82
 4645 009c 1A60     	 str r2,[r3]
 4646              	.L240:
1380:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1381:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 4647              	 .loc 1 1381 19
 4648 009e FA68     	 ldr r2,[r7,#12]
 4649 00a0 1379     	 ldrb r3,[r2,#4]
 4650 00a2 43F02003 	 orr r3,r3,#32
 4651 00a6 1371     	 strb r3,[r2,#4]
 4652 00a8 47E0     	 b .L241
 4653              	.L238:
1382:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1383:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1384:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1385:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1386:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4654              	 .loc 1 1386 9
 4655 00aa 97F90730 	 ldrsb r3,[r7,#7]
 4656              	 .loc 1 1386 8
 4657 00ae 002B     	 cmp r3,#0
 4658 00b0 1EDA     	 bge .L242
1387:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1388:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4659              	 .loc 1 1388 74
 4660 00b2 FB68     	 ldr r3,[r7,#12]
 4661 00b4 1B78     	 ldrb r3,[r3]
 4662 00b6 C3F30303 	 ubfx r3,r3,#0,#4
 4663 00ba DBB2     	 uxtb r3,r3
 4664              	 .loc 1 1388 49
 4665 00bc 224A     	 ldr r2,.L245
 4666 00be 6A33     	 adds r3,r3,#106
 4667 00c0 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4668              	 .loc 1 1388 82
 4669 00c4 1B68     	 ldr r3,[r3]
 4670              	 .loc 1 1388 16
 4671 00c6 BB60     	 str r3,[r7,#8]
1389:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 0U;
 4672              	 .loc 1 1389 20
 4673 00c8 BB7A     	 ldrb r3,[r7,#10]
 4674 00ca 6FF34513 	 bfc r3,#5,#1
 4675 00ce BB72     	 strb r3,[r7,#10]
1390:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.setd0pid = 1U; /* reset pid to 0 */
 4676              	 .loc 1 1390 23
 4677 00d0 FB7A     	 ldrb r3,[r7,#11]
 4678 00d2 43F01003 	 orr r3,r3,#16
 4679 00d6 FB72     	 strb r3,[r7,#11]
1391:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4680              	 .loc 1 1391 63
 4681 00d8 FB68     	 ldr r3,[r7,#12]
 4682 00da 1B78     	 ldrb r3,[r3]
 4683 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4684 00e0 DBB2     	 uxtb r3,r3
 4685              	 .loc 1 1391 38
 4686 00e2 194A     	 ldr r2,.L245
 4687 00e4 6A33     	 adds r3,r3,#106
 4688 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4689              	 .loc 1 1391 87
 4690 00ea BA68     	 ldr r2,[r7,#8]
 4691              	 .loc 1 1391 81
 4692 00ec 1A60     	 str r2,[r3]
 4693 00ee 1FE0     	 b .L243
 4694              	.L242:
1392:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1393:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1394:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1395:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4695              	 .loc 1 1395 75
 4696 00f0 FB68     	 ldr r3,[r7,#12]
 4697 00f2 1B78     	 ldrb r3,[r3]
 4698 00f4 C3F30303 	 ubfx r3,r3,#0,#4
 4699 00f8 DBB2     	 uxtb r3,r3
 4700              	 .loc 1 1395 50
 4701 00fa 134A     	 ldr r2,.L245
 4702 00fc 7033     	 adds r3,r3,#112
 4703 00fe 9B00     	 lsls r3,r3,#2
 4704 0100 1344     	 add r3,r3,r2
 4705 0102 5B68     	 ldr r3,[r3,#4]
 4706              	 .loc 1 1395 83
 4707 0104 1B68     	 ldr r3,[r3]
 4708              	 .loc 1 1395 16
 4709 0106 BB60     	 str r3,[r7,#8]
1396:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 0U;
 4710              	 .loc 1 1396 20
 4711 0108 BB7A     	 ldrb r3,[r7,#10]
 4712 010a 6FF34513 	 bfc r3,#5,#1
 4713 010e BB72     	 strb r3,[r7,#10]
1397:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.setd0pid = 1U; /* reset pid to 0 */
 4714              	 .loc 1 1397 23
 4715 0110 FB7A     	 ldrb r3,[r7,#11]
 4716 0112 43F01003 	 orr r3,r3,#16
 4717 0116 FB72     	 strb r3,[r7,#11]
1398:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4718              	 .loc 1 1398 64
 4719 0118 FB68     	 ldr r3,[r7,#12]
 4720 011a 1B78     	 ldrb r3,[r3]
 4721 011c C3F30303 	 ubfx r3,r3,#0,#4
 4722 0120 DBB2     	 uxtb r3,r3
 4723              	 .loc 1 1398 39
 4724 0122 094A     	 ldr r2,.L245
 4725 0124 7033     	 adds r3,r3,#112
 4726 0126 9B00     	 lsls r3,r3,#2
 4727 0128 1344     	 add r3,r3,r2
 4728 012a 5B68     	 ldr r3,[r3,#4]
 4729              	 .loc 1 1398 88
 4730 012c BA68     	 ldr r2,[r7,#8]
 4731              	 .loc 1 1398 82
 4732 012e 1A60     	 str r2,[r3]
 4733              	.L243:
1399:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1400:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 0U;
 4734              	 .loc 1 1400 19
 4735 0130 FA68     	 ldr r2,[r7,#12]
 4736 0132 1379     	 ldrb r3,[r2,#4]
 4737 0134 6FF34513 	 bfc r3,#5,#1
 4738 0138 1371     	 strb r3,[r2,#4]
 4739              	.L241:
1401:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1402:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4740              	 .loc 1 1402 10
 4741 013a 0023     	 movs r3,#0
1403:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4742              	 .loc 1 1403 1
 4743 013c 1846     	 mov r0,r3
 4744 013e 1437     	 adds r7,r7,#20
 4745              	.LCFI186:
 4746              	 .cfi_def_cfa_offset 4
 4747 0140 BD46     	 mov sp,r7
 4748              	.LCFI187:
 4749              	 .cfi_def_cfa_register 13
 4750              	 
 4751 0142 5DF8047B 	 ldr r7,[sp],#4
 4752              	.LCFI188:
 4753              	 .cfi_restore 7
 4754              	 .cfi_def_cfa_offset 0
 4755 0146 7047     	 bx lr
 4756              	.L246:
 4757              	 .align 2
 4758              	.L245:
 4759 0148 00000000 	 .word xmc_device
 4760              	 .cfi_endproc
 4761              	.LFE205:
 4763              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4764              	 .align 1
 4765              	 .global XMC_USBD_EndpointAbort
 4766              	 .syntax unified
 4767              	 .thumb
 4768              	 .thumb_func
 4769              	 .fpu fpv4-sp-d16
 4771              	XMC_USBD_EndpointAbort:
 4772              	.LFB206:
1404:../Libraries/XMCLib/src/xmc_usbd.c **** 
1405:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1406:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1407:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1408:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr)
1409:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4773              	 .loc 1 1409 1
 4774              	 .cfi_startproc
 4775              	 
 4776              	 
 4777              	 
 4778 0000 80B4     	 push {r7}
 4779              	.LCFI189:
 4780              	 .cfi_def_cfa_offset 4
 4781              	 .cfi_offset 7,-4
 4782 0002 85B0     	 sub sp,sp,#20
 4783              	.LCFI190:
 4784              	 .cfi_def_cfa_offset 24
 4785 0004 00AF     	 add r7,sp,#0
 4786              	.LCFI191:
 4787              	 .cfi_def_cfa_register 7
 4788 0006 0346     	 mov r3,r0
 4789 0008 FB71     	 strb r3,[r7,#7]
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4790              	 .loc 1 1410 46
 4791 000a FB79     	 ldrb r3,[r7,#7]
 4792 000c 03F00F03 	 and r3,r3,#15
 4793              	 .loc 1 1410 18
 4794 0010 3422     	 movs r2,#52
 4795 0012 02FB03F3 	 mul r3,r2,r3
 4796 0016 1B4A     	 ldr r2,.L251
 4797 0018 1344     	 add r3,r3,r2
 4798 001a FB60     	 str r3,[r7,#12]
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4799              	 .loc 1 1411 7
 4800 001c FB68     	 ldr r3,[r7,#12]
 4801 001e 1B78     	 ldrb r3,[r3]
 4802 0020 23F07F03 	 bic r3,r3,#127
 4803 0024 DBB2     	 uxtb r3,r3
 4804              	 .loc 1 1411 6
 4805 0026 002B     	 cmp r3,#0
 4806 0028 04D0     	 beq .L248
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4807              	 .loc 1 1413 17
 4808 002a FA68     	 ldr r2,[r7,#12]
 4809 002c 5368     	 ldr r3,[r2,#4]
 4810 002e 6FF3C303 	 bfc r3,#3,#1
 4811 0032 5360     	 str r3,[r2,#4]
 4812              	.L248:
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4813              	 .loc 1 1415 7
 4814 0034 FB68     	 ldr r3,[r7,#12]
 4815 0036 1B78     	 ldrb r3,[r3]
 4816 0038 23F07F03 	 bic r3,r3,#127
 4817 003c DBB2     	 uxtb r3,r3
 4818              	 .loc 1 1415 6
 4819 003e 002B     	 cmp r3,#0
 4820 0040 04D1     	 bne .L249
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4821              	 .loc 1 1417 18
 4822 0042 FA68     	 ldr r2,[r7,#12]
 4823 0044 5368     	 ldr r3,[r2,#4]
 4824 0046 6FF30413 	 bfc r3,#4,#1
 4825 004a 5360     	 str r3,[r2,#4]
 4826              	.L249:
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4827              	 .loc 1 1419 17
 4828 004c FA68     	 ldr r2,[r7,#12]
 4829 004e 1379     	 ldrb r3,[r2,#4]
 4830 0050 6FF34513 	 bfc r3,#5,#1
 4831 0054 1371     	 strb r3,[r2,#4]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4832              	 .loc 1 1420 25
 4833 0056 FB68     	 ldr r3,[r7,#12]
 4834 0058 0022     	 movs r2,#0
 4835 005a 1A61     	 str r2,[r3,#16]
1421:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4836              	 .loc 1 1421 17
 4837 005c FB68     	 ldr r3,[r7,#12]
 4838 005e 0022     	 movs r2,#0
 4839 0060 9A61     	 str r2,[r3,#24]
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4840              	 .loc 1 1422 18
 4841 0062 FB68     	 ldr r3,[r7,#12]
 4842 0064 0022     	 movs r2,#0
 4843 0066 9A62     	 str r2,[r3,#40]
1423:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4844              	 .loc 1 1423 17
 4845 0068 FB68     	 ldr r3,[r7,#12]
 4846 006a 0022     	 movs r2,#0
 4847 006c DA62     	 str r2,[r3,#44]
1424:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4848              	 .loc 1 1424 17
 4849 006e FB68     	 ldr r3,[r7,#12]
 4850 0070 0022     	 movs r2,#0
 4851 0072 1A63     	 str r2,[r3,#48]
1425:../Libraries/XMCLib/src/xmc_usbd.c **** 
1426:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4852              	 .loc 1 1426 10
 4853 0074 0023     	 movs r3,#0
1427:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4854              	 .loc 1 1427 1
 4855 0076 1846     	 mov r0,r3
 4856 0078 1437     	 adds r7,r7,#20
 4857              	.LCFI192:
 4858              	 .cfi_def_cfa_offset 4
 4859 007a BD46     	 mov sp,r7
 4860              	.LCFI193:
 4861              	 .cfi_def_cfa_register 13
 4862              	 
 4863 007c 5DF8047B 	 ldr r7,[sp],#4
 4864              	.LCFI194:
 4865              	 .cfi_restore 7
 4866              	 .cfi_def_cfa_offset 0
 4867 0080 7047     	 bx lr
 4868              	.L252:
 4869 0082 00BF     	 .align 2
 4870              	.L251:
 4871 0084 00000000 	 .word xmc_device
 4872              	 .cfi_endproc
 4873              	.LFE206:
 4875              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4876              	 .align 1
 4877              	 .global XMC_USBD_EndpointConfigure
 4878              	 .syntax unified
 4879              	 .thumb
 4880              	 .thumb_func
 4881              	 .fpu fpv4-sp-d16
 4883              	XMC_USBD_EndpointConfigure:
 4884              	.LFB207:
1428:../Libraries/XMCLib/src/xmc_usbd.c **** 
1429:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1430:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1431:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1432:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1433:../Libraries/XMCLib/src/xmc_usbd.c ****     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1434:../Libraries/XMCLib/src/xmc_usbd.c ****     const uint16_t ep_max_packet_size)
1435:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4885              	 .loc 1 1435 1
 4886              	 .cfi_startproc
 4887              	 
 4888              	 
 4889 0000 80B5     	 push {r7,lr}
 4890              	.LCFI195:
 4891              	 .cfi_def_cfa_offset 8
 4892              	 .cfi_offset 7,-8
 4893              	 .cfi_offset 14,-4
 4894 0002 86B0     	 sub sp,sp,#24
 4895              	.LCFI196:
 4896              	 .cfi_def_cfa_offset 32
 4897 0004 00AF     	 add r7,sp,#0
 4898              	.LCFI197:
 4899              	 .cfi_def_cfa_register 7
 4900 0006 0346     	 mov r3,r0
 4901 0008 FB71     	 strb r3,[r7,#7]
 4902 000a 0B46     	 mov r3,r1
 4903 000c BB71     	 strb r3,[r7,#6]
 4904 000e 1346     	 mov r3,r2
 4905 0010 BB80     	 strh r3,[r7,#4]
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 4906              	 .loc 1 1438 28
 4907 0012 9D4B     	 ldr r3,.L279
 4908 0014 D3F8A431 	 ldr r3,[r3,#420]
 4909              	 .loc 1 1438 44
 4910 0018 DB69     	 ldr r3,[r3,#28]
 4911              	 .loc 1 1438 16
 4912 001a 3B61     	 str r3,[r7,#16]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep = &xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4913              	 .loc 1 1439 31
 4914 001c FB79     	 ldrb r3,[r7,#7]
 4915 001e 03F00F03 	 and r3,r3,#15
 4916              	 .loc 1 1439 6
 4917 0022 3422     	 movs r2,#52
 4918 0024 02FB03F3 	 mul r3,r2,r3
 4919 0028 974A     	 ldr r2,.L279
 4920 002a 1344     	 add r3,r3,r2
 4921 002c 7B61     	 str r3,[r7,#20]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)ep, 0x0U, sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4922              	 .loc 1 1440 3
 4923 002e 3422     	 movs r2,#52
 4924 0030 0021     	 movs r1,#0
 4925 0032 7869     	 ldr r0,[r7,#20]
 4926 0034 FFF7FEFF 	 bl memset
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4927              	 .loc 1 1442 25
 4928 0038 7B69     	 ldr r3,[r7,#20]
 4929 003a FA79     	 ldrb r2,[r7,#7]
 4930 003c 1A70     	 strb r2,[r3]
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4931              	 .loc 1 1443 20
 4932 003e 7A69     	 ldr r2,[r7,#20]
 4933 0040 1379     	 ldrb r3,[r2,#4]
 4934 0042 43F00403 	 orr r3,r3,#4
 4935 0046 1371     	 strb r3,[r2,#4]
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4936              	 .loc 1 1444 23
 4937 0048 BB88     	 ldrh r3,[r7,#4]
 4938 004a 03F07F03 	 and r3,r3,#127
 4939 004e D9B2     	 uxtb r1,r3
 4940              	 .loc 1 1444 21
 4941 0050 7A69     	 ldr r2,[r7,#20]
 4942 0052 5368     	 ldr r3,[r2,#4]
 4943 0054 61F3D123 	 bfi r3,r1,#11,#7
 4944 0058 5360     	 str r3,[r2,#4]
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4945              	 .loc 1 1445 20
 4946 005a 7B69     	 ldr r3,[r7,#20]
 4947 005c 1B78     	 ldrb r3,[r3]
 4948              	 .loc 1 1445 6
 4949 005e 002B     	 cmp r3,#0
 4950 0060 07D0     	 beq .L254
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4951              	 .loc 1 1447 25
 4952 0062 7A69     	 ldr r2,[r7,#20]
 4953 0064 9368     	 ldr r3,[r2,#8]
 4954 0066 4FF6C071 	 movw r1,#65472
 4955 006a 61F31203 	 bfi r3,r1,#0,#19
 4956 006e 9360     	 str r3,[r2,#8]
 4957 0070 05E0     	 b .L255
 4958              	.L254:
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1451:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4959              	 .loc 1 1451 25
 4960 0072 7A69     	 ldr r2,[r7,#20]
 4961 0074 9368     	 ldr r3,[r2,#8]
 4962 0076 4021     	 movs r1,#64
 4963 0078 61F31203 	 bfi r3,r1,#0,#19
 4964 007c 9360     	 str r3,[r2,#8]
 4965              	.L255:
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4966              	 .loc 1 1454 64
 4967 007e 7B69     	 ldr r3,[r7,#20]
 4968 0080 1B78     	 ldrb r3,[r3]
 4969 0082 C3F30303 	 ubfx r3,r3,#0,#4
 4970 0086 DBB2     	 uxtb r3,r3
 4971              	 .loc 1 1454 18
 4972 0088 1B02     	 lsls r3,r3,#8
 4973 008a 804A     	 ldr r2,.L279+4
 4974 008c 1A44     	 add r2,r2,r3
 4975              	 .loc 1 1454 16
 4976 008e 7B69     	 ldr r3,[r7,#20]
 4977 0090 DA61     	 str r2,[r3,#28]
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4978              	 .loc 1 1455 66
 4979 0092 7B69     	 ldr r3,[r7,#20]
 4980 0094 1B78     	 ldrb r3,[r3]
 4981 0096 C3F30303 	 ubfx r3,r3,#0,#4
 4982 009a DBB2     	 uxtb r3,r3
 4983              	 .loc 1 1455 19
 4984 009c 1B02     	 lsls r3,r3,#8
 4985 009e 7C4A     	 ldr r2,.L279+8
 4986 00a0 1A44     	 add r2,r2,r3
 4987              	 .loc 1 1455 17
 4988 00a2 7B69     	 ldr r3,[r7,#20]
 4989 00a4 DA60     	 str r2,[r3,#12]
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4990              	 .loc 1 1457 72
 4991 00a6 7B69     	 ldr r3,[r7,#20]
 4992 00a8 1B78     	 ldrb r3,[r3]
 4993 00aa C3F30303 	 ubfx r3,r3,#0,#4
 4994 00ae DBB2     	 uxtb r3,r3
 4995 00b0 1A46     	 mov r2,r3
 4996              	 .loc 1 1457 47
 4997 00b2 784B     	 ldr r3,.L279+12
 4998 00b4 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4999              	 .loc 1 1457 20
 5000 00b8 7B69     	 ldr r3,[r7,#20]
 5001 00ba 1A62     	 str r2,[r3,#32]
1458:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 5002              	 .loc 1 1458 74
 5003 00bc 7B69     	 ldr r3,[r7,#20]
 5004 00be 1B78     	 ldrb r3,[r3]
 5005 00c0 C3F30303 	 ubfx r3,r3,#0,#4
 5006 00c4 DBB2     	 uxtb r3,r3
 5007 00c6 1A46     	 mov r2,r3
 5008              	 .loc 1 1458 49
 5009 00c8 734B     	 ldr r3,.L279+16
 5010 00ca 53F82220 	 ldr r2,[r3,r2,lsl#2]
 5011              	 .loc 1 1458 21
 5012 00ce 7B69     	 ldr r3,[r7,#20]
 5013 00d0 5A61     	 str r2,[r3,#20]
1459:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1460:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 5014              	 .loc 1 1460 43
 5015 00d2 7B69     	 ldr r3,[r7,#20]
 5016 00d4 1B78     	 ldrb r3,[r3]
 5017 00d6 23F07F03 	 bic r3,r3,#127
 5018 00da DBB2     	 uxtb r3,r3
 5019              	 .loc 1 1460 6
 5020 00dc 002B     	 cmp r3,#0
 5021 00de 02D1     	 bne .L256
 5022              	 .loc 1 1460 50 discriminator 1
 5023 00e0 BB79     	 ldrb r3,[r7,#6]
 5024 00e2 002B     	 cmp r3,#0
 5025 00e4 7CD1     	 bne .L257
 5026              	.L256:
 5027              	.LBB6:
1461:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1462:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1463:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 5028              	 .loc 1 1463 72
 5029 00e6 7B69     	 ldr r3,[r7,#20]
 5030 00e8 1B78     	 ldrb r3,[r3]
 5031 00ea C3F30303 	 ubfx r3,r3,#0,#4
 5032 00ee DBB2     	 uxtb r3,r3
 5033              	 .loc 1 1463 47
 5034 00f0 654A     	 ldr r2,.L279
 5035 00f2 6A33     	 adds r3,r3,#106
 5036 00f4 52F82330 	 ldr r3,[r2,r3,lsl#2]
 5037              	 .loc 1 1463 80
 5038 00f8 1B68     	 ldr r3,[r3]
 5039              	 .loc 1 1463 14
 5040 00fa FB60     	 str r3,[r7,#12]
1464:../Libraries/XMCLib/src/xmc_usbd.c ****     /*enable endpoint */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 1U;
 5041              	 .loc 1 1465 21
 5042 00fc 7B7B     	 ldrb r3,[r7,#13]
 5043 00fe 43F08003 	 orr r3,r3,#128
 5044 0102 7B73     	 strb r3,[r7,#13]
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep type */
1467:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.eptype = (uint8_t)ep_type;
 5045              	 .loc 1 1467 21
 5046 0104 BB79     	 ldrb r3,[r7,#6]
 5047 0106 03F00303 	 and r3,r3,#3
 5048 010a DAB2     	 uxtb r2,r3
 5049              	 .loc 1 1467 19
 5050 010c BB7B     	 ldrb r3,[r7,#14]
 5051 010e 62F38303 	 bfi r3,r2,#2,#2
 5052 0112 BB73     	 strb r3,[r7,#14]
1468:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1469:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 5053              	 .loc 1 1469 8
 5054 0114 BB79     	 ldrb r3,[r7,#6]
 5055 0116 002B     	 cmp r3,#0
 5056 0118 24D1     	 bne .L258
1470:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1471:../Libraries/XMCLib/src/xmc_usbd.c ****       switch (ep_max_packet_size)
 5057              	 .loc 1 1471 7
 5058 011a BB88     	 ldrh r3,[r7,#4]
 5059 011c 402B     	 cmp r3,#64
 5060 011e 0AD0     	 beq .L259
 5061 0120 402B     	 cmp r3,#64
 5062 0122 28DC     	 bgt .L277
 5063 0124 202B     	 cmp r3,#32
 5064 0126 0BD0     	 beq .L261
 5065 0128 202B     	 cmp r3,#32
 5066 012a 24DC     	 bgt .L277
 5067 012c 082B     	 cmp r3,#8
 5068 012e 13D0     	 beq .L262
 5069 0130 102B     	 cmp r3,#16
 5070 0132 0BD0     	 beq .L263
1472:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1473:../Libraries/XMCLib/src/xmc_usbd.c ****         case (64U):
1474:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x0U;
1475:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1476:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
1477:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x1U;
1478:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1479:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
1480:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x2U;
1481:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1482:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
1483:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x3U;
1484:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1485:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
1486:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5071              	 .loc 1 1486 11
 5072 0134 1FE0     	 b .L277
 5073              	.L259:
1474:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5074              	 .loc 1 1474 22
 5075 0136 BB89     	 ldrh r3,[r7,#12]
 5076 0138 6FF30A03 	 bfc r3,#0,#11
 5077 013c BB81     	 strh r3,[r7,#12]
1475:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
 5078              	 .loc 1 1475 11
 5079 013e 1BE0     	 b .L265
 5080              	.L261:
1477:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5081              	 .loc 1 1477 22
 5082 0140 BB89     	 ldrh r3,[r7,#12]
 5083 0142 0122     	 movs r2,#1
 5084 0144 62F30A03 	 bfi r3,r2,#0,#11
 5085 0148 BB81     	 strh r3,[r7,#12]
1478:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
 5086              	 .loc 1 1478 11
 5087 014a 15E0     	 b .L265
 5088              	.L263:
1480:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5089              	 .loc 1 1480 22
 5090 014c BB89     	 ldrh r3,[r7,#12]
 5091 014e 0222     	 movs r2,#2
 5092 0150 62F30A03 	 bfi r3,r2,#0,#11
 5093 0154 BB81     	 strh r3,[r7,#12]
1481:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
 5094              	 .loc 1 1481 11
 5095 0156 0FE0     	 b .L265
 5096              	.L262:
1483:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5097              	 .loc 1 1483 22
 5098 0158 BB89     	 ldrh r3,[r7,#12]
 5099 015a 0322     	 movs r2,#3
 5100 015c 62F30A03 	 bfi r3,r2,#0,#11
 5101 0160 BB81     	 strh r3,[r7,#12]
1484:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
 5102              	 .loc 1 1484 11
 5103 0162 09E0     	 b .L265
 5104              	.L258:
1487:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1488:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1489:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1490:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1491:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.mps = ep_max_packet_size;
 5105              	 .loc 1 1491 18
 5106 0164 BB88     	 ldrh r3,[r7,#4]
 5107 0166 C3F30A03 	 ubfx r3,r3,#0,#11
 5108 016a 9AB2     	 uxth r2,r3
 5109 016c BB89     	 ldrh r3,[r7,#12]
 5110 016e 62F30A03 	 bfi r3,r2,#0,#11
 5111 0172 BB81     	 strh r3,[r7,#12]
 5112 0174 00E0     	 b .L265
 5113              	.L277:
1486:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 5114              	 .loc 1 1486 11
 5115 0176 00BF     	 nop
 5116              	.L265:
1492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1493:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set first data0 pid */
1494:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.setd0pid = 1U;
 5117              	 .loc 1 1494 21
 5118 0178 FB7B     	 ldrb r3,[r7,#15]
 5119 017a 43F01003 	 orr r3,r3,#16
 5120 017e FB73     	 strb r3,[r7,#15]
1495:../Libraries/XMCLib/src/xmc_usbd.c ****     /* clear stall */
1496:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall = 0U;
 5121              	 .loc 1 1496 18
 5122 0180 BB7B     	 ldrb r3,[r7,#14]
 5123 0182 6FF34513 	 bfc r3,#5,#1
 5124 0186 BB73     	 strb r3,[r7,#14]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set tx fifo */
1498:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 5125              	 .loc 1 1498 21
 5126 0188 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 5127 018c 0346     	 mov r3,r0
 5128 018e 03F00F03 	 and r3,r3,#15
 5129 0192 D9B2     	 uxtb r1,r3
 5130              	 .loc 1 1498 19
 5131 0194 7A69     	 ldr r2,[r7,#20]
 5132 0196 9388     	 ldrh r3,[r2,#4]
 5133 0198 61F38913 	 bfi r3,r1,#6,#4
 5134 019c 9380     	 strh r3,[r2,#4]
1499:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.txfnum = ep->txFifoNum;
 5135              	 .loc 1 1499 23
 5136 019e 7B69     	 ldr r3,[r7,#20]
 5137 01a0 9B88     	 ldrh r3,[r3,#4]
 5138 01a2 C3F38313 	 ubfx r3,r3,#6,#4
 5139 01a6 DAB2     	 uxtb r2,r3
 5140              	 .loc 1 1499 19
 5141 01a8 FB89     	 ldrh r3,[r7,#14]
 5142 01aa 62F38913 	 bfi r3,r2,#6,#4
 5143 01ae FB81     	 strh r3,[r7,#14]
1500:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* config
 5144              	 .loc 1 1500 61
 5145 01b0 7B69     	 ldr r3,[r7,#20]
 5146 01b2 1B78     	 ldrb r3,[r3]
 5147 01b4 C3F30303 	 ubfx r3,r3,#0,#4
 5148 01b8 DBB2     	 uxtb r3,r3
 5149              	 .loc 1 1500 36
 5150 01ba 334A     	 ldr r2,.L279
 5151 01bc 6A33     	 adds r3,r3,#106
 5152 01be 52F82330 	 ldr r3,[r2,r3,lsl#2]
 5153              	 .loc 1 1500 85
 5154 01c2 FA68     	 ldr r2,[r7,#12]
 5155              	 .loc 1 1500 79
 5156 01c4 1A60     	 str r2,[r3]
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enab
 5157              	 .loc 1 1501 20
 5158 01c6 3A8A     	 ldrh r2,[r7,#16]
 5159              	 .loc 1 1501 83
 5160 01c8 7B69     	 ldr r3,[r7,#20]
 5161 01ca 1B78     	 ldrb r3,[r3]
 5162 01cc C3F30303 	 ubfx r3,r3,#0,#4
 5163 01d0 DBB2     	 uxtb r3,r3
 5164              	 .loc 1 1501 50
 5165 01d2 1946     	 mov r1,r3
 5166              	 .loc 1 1501 47
 5167 01d4 0123     	 movs r3,#1
 5168 01d6 8B40     	 lsls r3,r3,r1
 5169              	 .loc 1 1501 23
 5170 01d8 9BB2     	 uxth r3,r3
 5171              	 .loc 1 1501 20
 5172 01da 1343     	 orrs r3,r3,r2
 5173 01dc 9BB2     	 uxth r3,r3
 5174 01de 3B82     	 strh r3,[r7,#16]
 5175              	.L257:
 5176              	.LBE6:
1502:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1503:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 5177              	 .loc 1 1503 43
 5178 01e0 7B69     	 ldr r3,[r7,#20]
 5179 01e2 1B78     	 ldrb r3,[r3]
 5180 01e4 23F07F03 	 bic r3,r3,#127
 5181 01e8 DBB2     	 uxtb r3,r3
 5182              	 .loc 1 1503 6
 5183 01ea 002B     	 cmp r3,#0
 5184 01ec 02D0     	 beq .L266
 5185              	 .loc 1 1503 50 discriminator 1
 5186 01ee BB79     	 ldrb r3,[r7,#6]
 5187 01f0 002B     	 cmp r3,#0
 5188 01f2 75D1     	 bne .L267
 5189              	.L266:
 5190              	.LBB7:
1504:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1505:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1506:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 5191              	 .loc 1 1507 73
 5192 01f4 7B69     	 ldr r3,[r7,#20]
 5193 01f6 1B78     	 ldrb r3,[r3]
 5194 01f8 C3F30303 	 ubfx r3,r3,#0,#4
 5195 01fc DBB2     	 uxtb r3,r3
 5196              	 .loc 1 1507 48
 5197 01fe 224A     	 ldr r2,.L279
 5198 0200 7033     	 adds r3,r3,#112
 5199 0202 9B00     	 lsls r3,r3,#2
 5200 0204 1344     	 add r3,r3,r2
 5201 0206 5B68     	 ldr r3,[r3,#4]
 5202              	 .loc 1 1507 81
 5203 0208 1B68     	 ldr r3,[r3]
 5204              	 .loc 1 1507 14
 5205 020a BB60     	 str r3,[r7,#8]
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /*enable endpoint */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 1U;
 5206              	 .loc 1 1509 21
 5207 020c 7B7A     	 ldrb r3,[r7,#9]
 5208 020e 43F08003 	 orr r3,r3,#128
 5209 0212 7B72     	 strb r3,[r7,#9]
1510:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep type */
1511:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.eptype = (uint8_t)ep_type;
 5210              	 .loc 1 1511 21
 5211 0214 BB79     	 ldrb r3,[r7,#6]
 5212 0216 03F00303 	 and r3,r3,#3
 5213 021a DAB2     	 uxtb r2,r3
 5214              	 .loc 1 1511 19
 5215 021c BB7A     	 ldrb r3,[r7,#10]
 5216 021e 62F38303 	 bfi r3,r2,#2,#2
 5217 0222 BB72     	 strb r3,[r7,#10]
1512:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1513:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 5218              	 .loc 1 1513 8
 5219 0224 BB79     	 ldrb r3,[r7,#6]
 5220 0226 002B     	 cmp r3,#0
 5221 0228 24D1     	 bne .L268
1514:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1515:../Libraries/XMCLib/src/xmc_usbd.c ****       switch (ep_max_packet_size)
 5222              	 .loc 1 1515 7
 5223 022a BB88     	 ldrh r3,[r7,#4]
 5224 022c 402B     	 cmp r3,#64
 5225 022e 0AD0     	 beq .L269
 5226 0230 402B     	 cmp r3,#64
 5227 0232 33DC     	 bgt .L278
 5228 0234 202B     	 cmp r3,#32
 5229 0236 0BD0     	 beq .L271
 5230 0238 202B     	 cmp r3,#32
 5231 023a 2FDC     	 bgt .L278
 5232 023c 082B     	 cmp r3,#8
 5233 023e 13D0     	 beq .L272
 5234 0240 102B     	 cmp r3,#16
 5235 0242 0BD0     	 beq .L273
1516:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1517:../Libraries/XMCLib/src/xmc_usbd.c ****         case (64U):
1518:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x0U;
1519:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1520:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
1521:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x1U;
1522:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1523:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
1524:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x2U;
1525:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1526:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
1527:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x3U;
1528:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1529:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
1530:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5236              	 .loc 1 1530 11
 5237 0244 2AE0     	 b .L278
 5238              	.L269:
1518:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5239              	 .loc 1 1518 22
 5240 0246 3B89     	 ldrh r3,[r7,#8]
 5241 0248 6FF30A03 	 bfc r3,#0,#11
 5242 024c 3B81     	 strh r3,[r7,#8]
1519:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
 5243              	 .loc 1 1519 11
 5244 024e 26E0     	 b .L275
 5245              	.L271:
1521:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5246              	 .loc 1 1521 22
 5247 0250 3B89     	 ldrh r3,[r7,#8]
 5248 0252 0122     	 movs r2,#1
 5249 0254 62F30A03 	 bfi r3,r2,#0,#11
 5250 0258 3B81     	 strh r3,[r7,#8]
1522:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
 5251              	 .loc 1 1522 11
 5252 025a 20E0     	 b .L275
 5253              	.L273:
1524:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5254              	 .loc 1 1524 22
 5255 025c 3B89     	 ldrh r3,[r7,#8]
 5256 025e 0222     	 movs r2,#2
 5257 0260 62F30A03 	 bfi r3,r2,#0,#11
 5258 0264 3B81     	 strh r3,[r7,#8]
1525:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
 5259              	 .loc 1 1525 11
 5260 0266 1AE0     	 b .L275
 5261              	.L272:
1527:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 5262              	 .loc 1 1527 22
 5263 0268 3B89     	 ldrh r3,[r7,#8]
 5264 026a 0322     	 movs r2,#3
 5265 026c 62F30A03 	 bfi r3,r2,#0,#11
 5266 0270 3B81     	 strh r3,[r7,#8]
1528:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
 5267              	 .loc 1 1528 11
 5268 0272 14E0     	 b .L275
 5269              	.L268:
1531:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1532:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1533:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1534:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1535:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.mps = ep_max_packet_size;
 5270              	 .loc 1 1535 18
 5271 0274 BB88     	 ldrh r3,[r7,#4]
 5272 0276 C3F30A03 	 ubfx r3,r3,#0,#11
 5273 027a 9AB2     	 uxth r2,r3
 5274 027c 3B89     	 ldrh r3,[r7,#8]
 5275 027e 62F30A03 	 bfi r3,r2,#0,#11
 5276 0282 3B81     	 strh r3,[r7,#8]
 5277 0284 0BE0     	 b .L275
 5278              	.L280:
 5279 0286 00BF     	 .align 2
 5280              	.L279:
 5281 0288 00000000 	 .word xmc_device
 5282 028c 00070000 	 .word XMC_USBD_EP_IN_BUFFER
 5283 0290 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 5284 0294 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 5285 0298 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 5286              	.L278:
1530:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 5287              	 .loc 1 1530 11
 5288 029c 00BF     	 nop
 5289              	.L275:
1536:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1537:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set first data0 pid */
1538:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.setd0pid = 1U;
 5290              	 .loc 1 1538 21
 5291 029e FB7A     	 ldrb r3,[r7,#11]
 5292 02a0 43F01003 	 orr r3,r3,#16
 5293 02a4 FB72     	 strb r3,[r7,#11]
1539:../Libraries/XMCLib/src/xmc_usbd.c ****     /* clear stall */
1540:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall = (uint8_t) 0U;
 5294              	 .loc 1 1540 18
 5295 02a6 BB7A     	 ldrb r3,[r7,#10]
 5296 02a8 6FF34513 	 bfc r3,#5,#1
 5297 02ac BB72     	 strb r3,[r7,#10]
1541:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* confi
 5298              	 .loc 1 1541 62
 5299 02ae 7B69     	 ldr r3,[r7,#20]
 5300 02b0 1B78     	 ldrb r3,[r3]
 5301 02b2 C3F30303 	 ubfx r3,r3,#0,#4
 5302 02b6 DBB2     	 uxtb r3,r3
 5303              	 .loc 1 1541 37
 5304 02b8 0E4A     	 ldr r2,.L281
 5305 02ba 7033     	 adds r3,r3,#112
 5306 02bc 9B00     	 lsls r3,r3,#2
 5307 02be 1344     	 add r3,r3,r2
 5308 02c0 5B68     	 ldr r3,[r3,#4]
 5309              	 .loc 1 1541 86
 5310 02c2 BA68     	 ldr r2,[r7,#8]
 5311              	 .loc 1 1541 80
 5312 02c4 1A60     	 str r2,[r3]
1542:../Libraries/XMCLib/src/xmc_usbd.c ****     daintmsk.ep.out |= (uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* en
 5313              	 .loc 1 1542 21
 5314 02c6 7A8A     	 ldrh r2,[r7,#18]
 5315              	 .loc 1 1542 85
 5316 02c8 7B69     	 ldr r3,[r7,#20]
 5317 02ca 1B78     	 ldrb r3,[r3]
 5318 02cc C3F30303 	 ubfx r3,r3,#0,#4
 5319 02d0 DBB2     	 uxtb r3,r3
 5320              	 .loc 1 1542 52
 5321 02d2 1946     	 mov r1,r3
 5322              	 .loc 1 1542 49
 5323 02d4 0123     	 movs r3,#1
 5324 02d6 8B40     	 lsls r3,r3,r1
 5325              	 .loc 1 1542 24
 5326 02d8 9BB2     	 uxth r3,r3
 5327              	 .loc 1 1542 21
 5328 02da 1343     	 orrs r3,r3,r2
 5329 02dc 9BB2     	 uxth r3,r3
 5330 02de 7B82     	 strh r3,[r7,#18]
 5331              	.L267:
 5332              	.LBE7:
1543:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1544:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 5333              	 .loc 1 1544 13
 5334 02e0 044B     	 ldr r3,.L281
 5335 02e2 D3F8A431 	 ldr r3,[r3,#420]
 5336              	 .loc 1 1544 50
 5337 02e6 3A69     	 ldr r2,[r7,#16]
 5338              	 .loc 1 1544 40
 5339 02e8 DA61     	 str r2,[r3,#28]
1545:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 5340              	 .loc 1 1545 10
 5341 02ea 0023     	 movs r3,#0
1546:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5342              	 .loc 1 1546 1
 5343 02ec 1846     	 mov r0,r3
 5344 02ee 1837     	 adds r7,r7,#24
 5345              	.LCFI198:
 5346              	 .cfi_def_cfa_offset 8
 5347 02f0 BD46     	 mov sp,r7
 5348              	.LCFI199:
 5349              	 .cfi_def_cfa_register 13
 5350              	 
 5351 02f2 80BD     	 pop {r7,pc}
 5352              	.L282:
 5353              	 .align 2
 5354              	.L281:
 5355 02f4 00000000 	 .word xmc_device
 5356              	 .cfi_endproc
 5357              	.LFE207:
 5359              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 5360              	 .align 1
 5361              	 .global XMC_USBD_EndpointUnconfigure
 5362              	 .syntax unified
 5363              	 .thumb
 5364              	 .thumb_func
 5365              	 .fpu fpv4-sp-d16
 5367              	XMC_USBD_EndpointUnconfigure:
 5368              	.LFB208:
1547:../Libraries/XMCLib/src/xmc_usbd.c **** 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1549:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1550:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1551:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr)
1552:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5369              	 .loc 1 1552 1
 5370              	 .cfi_startproc
 5371              	 
 5372              	 
 5373 0000 80B5     	 push {r7,lr}
 5374              	.LCFI200:
 5375              	 .cfi_def_cfa_offset 8
 5376              	 .cfi_offset 7,-8
 5377              	 .cfi_offset 14,-4
 5378 0002 88B0     	 sub sp,sp,#32
 5379              	.LCFI201:
 5380              	 .cfi_def_cfa_offset 40
 5381 0004 00AF     	 add r7,sp,#0
 5382              	.LCFI202:
 5383              	 .cfi_def_cfa_register 7
 5384 0006 0346     	 mov r3,r0
 5385 0008 FB71     	 strb r3,[r7,#7]
1553:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 5386              	 .loc 1 1553 46
 5387 000a FB79     	 ldrb r3,[r7,#7]
 5388 000c 03F00F03 	 and r3,r3,#15
 5389              	 .loc 1 1553 18
 5390 0010 3422     	 movs r2,#52
 5391 0012 02FB03F3 	 mul r3,r2,r3
 5392 0016 544A     	 ldr r2,.L291
 5393 0018 1344     	 add r3,r3,r2
 5394 001a BB61     	 str r3,[r7,#24]
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t number_temp;
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 5395              	 .loc 1 1558 12
 5396 001c 0023     	 movs r3,#0
 5397 001e 3B61     	 str r3,[r7,#16]
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 5398              	 .loc 1 1559 28
 5399 0020 514B     	 ldr r3,.L291
 5400 0022 D3F8A431 	 ldr r3,[r3,#420]
 5401              	 .loc 1 1559 44
 5402 0026 DB69     	 ldr r3,[r3,#28]
 5403              	 .loc 1 1559 16
 5404 0028 FB60     	 str r3,[r7,#12]
1560:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 5405              	 .loc 1 1560 77
 5406 002a BB69     	 ldr r3,[r7,#24]
 5407 002c 1B78     	 ldrb r3,[r3]
 5408 002e C3F30303 	 ubfx r3,r3,#0,#4
 5409 0032 DBB2     	 uxtb r3,r3
 5410              	 .loc 1 1560 44
 5411 0034 1A46     	 mov r2,r3
 5412              	 .loc 1 1560 15
 5413 0036 0123     	 movs r3,#1
 5414 0038 9340     	 lsls r3,r3,r2
 5415 003a 7B61     	 str r3,[r7,#20]
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 5416              	 .loc 1 1562 7
 5417 003c BB69     	 ldr r3,[r7,#24]
 5418 003e 1B79     	 ldrb r3,[r3,#4]
 5419 0040 03F00403 	 and r3,r3,#4
 5420 0044 DBB2     	 uxtb r3,r3
 5421              	 .loc 1 1562 6
 5422 0046 002B     	 cmp r3,#0
 5423 0048 02D1     	 bne .L284
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 5424              	 .loc 1 1564 12
 5425 004a 0123     	 movs r3,#1
 5426 004c FB77     	 strb r3,[r7,#31]
 5427 004e 85E0     	 b .L285
 5428              	.L284:
1565:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1566:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1567:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 5429              	 .loc 1 1569 21
 5430 0050 7B7C     	 ldrb r3,[r7,#17]
 5431 0052 6FF3C713 	 bfc r3,#7,#1
 5432 0056 7B74     	 strb r3,[r7,#17]
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 5433              	 .loc 1 1570 18
 5434 0058 FB7C     	 ldrb r3,[r7,#19]
 5435 005a 43F04003 	 orr r3,r3,#64
 5436 005e FB74     	 strb r3,[r7,#19]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 5437              	 .loc 1 1571 17
 5438 0060 FB7C     	 ldrb r3,[r7,#19]
 5439 0062 43F00803 	 orr r3,r3,#8
 5440 0066 FB74     	 strb r3,[r7,#19]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 5441              	 .loc 1 1572 18
 5442 0068 BB7C     	 ldrb r3,[r7,#18]
 5443 006a 6FF34513 	 bfc r3,#5,#1
 5444 006e BB74     	 strb r3,[r7,#18]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 5445              	 .loc 1 1573 22
 5446 0070 BA69     	 ldr r2,[r7,#24]
 5447 0072 1379     	 ldrb r3,[r2,#4]
 5448 0074 6FF38203 	 bfc r3,#2,#1
 5449 0078 1371     	 strb r3,[r2,#4]
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 5450              	 .loc 1 1574 19
 5451 007a BA69     	 ldr r2,[r7,#24]
 5452 007c 1379     	 ldrb r3,[r2,#4]
 5453 007e 6FF34513 	 bfc r3,#5,#1
 5454 0082 1371     	 strb r3,[r2,#4]
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 5455              	 .loc 1 1575 18
 5456 0084 BA69     	 ldr r2,[r7,#24]
 5457 0086 5368     	 ldr r3,[r2,#4]
 5458 0088 6FF30413 	 bfc r3,#4,#1
 5459 008c 5360     	 str r3,[r2,#4]
1576:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 5460              	 .loc 1 1576 17
 5461 008e BA69     	 ldr r2,[r7,#24]
 5462 0090 5368     	 ldr r3,[r2,#4]
 5463 0092 6FF3C303 	 bfc r3,#3,#1
 5464 0096 5360     	 str r3,[r2,#4]
1577:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1578:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 5465              	 .loc 1 1578 45
 5466 0098 BB69     	 ldr r3,[r7,#24]
 5467 009a 1B78     	 ldrb r3,[r3]
 5468 009c 23F07F03 	 bic r3,r3,#127
 5469 00a0 DBB2     	 uxtb r3,r3
 5470              	 .loc 1 1578 8
 5471 00a2 002B     	 cmp r3,#0
 5472 00a4 06D1     	 bne .L286
 5473              	 .loc 1 1578 65 discriminator 1
 5474 00a6 BB69     	 ldr r3,[r7,#24]
 5475 00a8 1B79     	 ldrb r3,[r3,#4]
 5476 00aa 03F00303 	 and r3,r3,#3
 5477 00ae DBB2     	 uxtb r3,r3
 5478              	 .loc 1 1578 52 discriminator 1
 5479 00b0 002B     	 cmp r3,#0
 5480 00b2 12D1     	 bne .L287
 5481              	.L286:
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1580:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1581:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 5482              	 .loc 1 1581 63
 5483 00b4 BB69     	 ldr r3,[r7,#24]
 5484 00b6 1B78     	 ldrb r3,[r3]
 5485 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 5486 00bc DBB2     	 uxtb r3,r3
 5487              	 .loc 1 1581 38
 5488 00be 2A4A     	 ldr r2,.L291
 5489 00c0 6A33     	 adds r3,r3,#106
 5490 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 5491              	 .loc 1 1581 87
 5492 00c6 3A69     	 ldr r2,[r7,#16]
 5493              	 .loc 1 1581 81
 5494 00c8 1A60     	 str r2,[r3]
1582:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 5495              	 .loc 1 1583 56
 5496 00ca BA89     	 ldrh r2,[r7,#12]
 5497              	 .loc 1 1583 24
 5498 00cc 7B69     	 ldr r3,[r7,#20]
 5499 00ce 9BB2     	 uxth r3,r3
 5500 00d0 DB43     	 mvns r3,r3
 5501 00d2 9BB2     	 uxth r3,r3
 5502 00d4 1340     	 ands r3,r3,r2
 5503 00d6 9BB2     	 uxth r3,r3
 5504              	 .loc 1 1583 22
 5505 00d8 BB81     	 strh r3,[r7,#12]
 5506              	.L287:
1584:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1585:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 5507              	 .loc 1 1585 45
 5508 00da BB69     	 ldr r3,[r7,#24]
 5509 00dc 1B78     	 ldrb r3,[r3]
 5510 00de 23F07F03 	 bic r3,r3,#127
 5511 00e2 DBB2     	 uxtb r3,r3
 5512              	 .loc 1 1585 8
 5513 00e4 002B     	 cmp r3,#0
 5514 00e6 06D0     	 beq .L288
 5515              	 .loc 1 1585 65 discriminator 1
 5516 00e8 BB69     	 ldr r3,[r7,#24]
 5517 00ea 1B79     	 ldrb r3,[r3,#4]
 5518 00ec 03F00303 	 and r3,r3,#3
 5519 00f0 DBB2     	 uxtb r3,r3
 5520              	 .loc 1 1585 52 discriminator 1
 5521 00f2 002B     	 cmp r3,#0
 5522 00f4 23D1     	 bne .L289
 5523              	.L288:
1586:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 5524              	 .loc 1 1587 64
 5525 00f6 BB69     	 ldr r3,[r7,#24]
 5526 00f8 1B78     	 ldrb r3,[r3]
 5527 00fa C3F30303 	 ubfx r3,r3,#0,#4
 5528 00fe DBB2     	 uxtb r3,r3
 5529              	 .loc 1 1587 39
 5530 0100 194A     	 ldr r2,.L291
 5531 0102 7033     	 adds r3,r3,#112
 5532 0104 9B00     	 lsls r3,r3,#2
 5533 0106 1344     	 add r3,r3,r2
 5534 0108 5B68     	 ldr r3,[r3,#4]
 5535              	 .loc 1 1587 88
 5536 010a 3A69     	 ldr r2,[r7,#16]
 5537              	 .loc 1 1587 82
 5538 010c 1A60     	 str r2,[r3]
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 5539              	 .loc 1 1588 57
 5540 010e FA89     	 ldrh r2,[r7,#14]
 5541              	 .loc 1 1588 25
 5542 0110 7B69     	 ldr r3,[r7,#20]
 5543 0112 9BB2     	 uxth r3,r3
 5544 0114 DB43     	 mvns r3,r3
 5545 0116 9BB2     	 uxth r3,r3
 5546 0118 1340     	 ands r3,r3,r2
 5547 011a 9BB2     	 uxth r3,r3
 5548              	 .loc 1 1588 23
 5549 011c FB81     	 strh r3,[r7,#14]
1589:../Libraries/XMCLib/src/xmc_usbd.c ****       if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 5550              	 .loc 1 1589 20
 5551 011e 134B     	 ldr r3,.L291+4
 5552 0120 1B68     	 ldr r3,[r3]
 5553 0122 5B7B     	 ldrb r3,[r3,#13]
 5554              	 .loc 1 1589 10
 5555 0124 012B     	 cmp r3,#1
 5556 0126 0AD1     	 bne .L289
1590:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1591:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 5557              	 .loc 1 1591 19
 5558 0128 0F4B     	 ldr r3,.L291
 5559 012a D3F8A431 	 ldr r3,[r3,#420]
 5560              	 .loc 1 1591 58
 5561 012e 596B     	 ldr r1,[r3,#52]
 5562              	 .loc 1 1591 61
 5563 0130 7B69     	 ldr r3,[r7,#20]
 5564 0132 DA43     	 mvns r2,r3
 5565              	 .loc 1 1591 19
 5566 0134 0C4B     	 ldr r3,.L291
 5567 0136 D3F8A431 	 ldr r3,[r3,#420]
 5568              	 .loc 1 1591 58
 5569 013a 0A40     	 ands r2,r2,r1
 5570 013c 5A63     	 str r2,[r3,#52]
 5571              	.L289:
1592:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1593:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 5572              	 .loc 1 1594 15
 5573 013e 0A4B     	 ldr r3,.L291
 5574 0140 D3F8A431 	 ldr r3,[r3,#420]
 5575              	 .loc 1 1594 52
 5576 0144 FA68     	 ldr r2,[r7,#12]
 5577              	 .loc 1 1594 42
 5578 0146 DA61     	 str r2,[r3,#28]
1595:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 5579              	 .loc 1 1595 30
 5580 0148 BB69     	 ldr r3,[r7,#24]
 5581 014a 9B88     	 ldrh r3,[r3,#4]
 5582 014c C3F38313 	 ubfx r3,r3,#6,#4
 5583 0150 DBB2     	 uxtb r3,r3
 5584              	 .loc 1 1595 5
 5585 0152 1846     	 mov r0,r3
 5586 0154 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1596:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 5587              	 .loc 1 1596 12
 5588 0158 0023     	 movs r3,#0
 5589 015a FB77     	 strb r3,[r7,#31]
 5590              	.L285:
1597:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1598:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5591              	 .loc 1 1598 10
 5592 015c FB7F     	 ldrb r3,[r7,#31]
1599:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5593              	 .loc 1 1599 1
 5594 015e 1846     	 mov r0,r3
 5595 0160 2037     	 adds r7,r7,#32
 5596              	.LCFI203:
 5597              	 .cfi_def_cfa_offset 8
 5598 0162 BD46     	 mov sp,r7
 5599              	.LCFI204:
 5600              	 .cfi_def_cfa_register 13
 5601              	 
 5602 0164 80BD     	 pop {r7,pc}
 5603              	.L292:
 5604 0166 00BF     	 .align 2
 5605              	.L291:
 5606 0168 00000000 	 .word xmc_device
 5607 016c 00000000 	 .word usbd_init
 5608              	 .cfi_endproc
 5609              	.LFE208:
 5611              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 5612              	 .align 1
 5613              	 .global XMC_USBD_GetFrameNumber
 5614              	 .syntax unified
 5615              	 .thumb
 5616              	 .thumb_func
 5617              	 .fpu fpv4-sp-d16
 5619              	XMC_USBD_GetFrameNumber:
 5620              	.LFB209:
1600:../Libraries/XMCLib/src/xmc_usbd.c **** 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1602:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1603:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1604:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void)
1605:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5621              	 .loc 1 1605 1
 5622              	 .cfi_startproc
 5623              	 
 5624              	 
 5625              	 
 5626 0000 80B4     	 push {r7}
 5627              	.LCFI205:
 5628              	 .cfi_def_cfa_offset 4
 5629              	 .cfi_offset 7,-4
 5630 0002 83B0     	 sub sp,sp,#12
 5631              	.LCFI206:
 5632              	 .cfi_def_cfa_offset 16
 5633 0004 00AF     	 add r7,sp,#0
 5634              	.LCFI207:
 5635              	 .cfi_def_cfa_register 7
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1607:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1608:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 5636              	 .loc 1 1608 24
 5637 0006 084B     	 ldr r3,.L295
 5638 0008 D3F8A431 	 ldr r3,[r3,#420]
 5639              	 .loc 1 1608 40
 5640 000c 9B68     	 ldr r3,[r3,#8]
 5641              	 .loc 1 1608 12
 5642 000e 3B60     	 str r3,[r7]
1609:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 5643              	 .loc 1 1609 28
 5644 0010 3B68     	 ldr r3,[r7]
 5645 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 5646 0016 9BB2     	 uxth r3,r3
 5647              	 .loc 1 1609 10
 5648 0018 FB80     	 strh r3,[r7,#6]
1610:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5649              	 .loc 1 1610 10
 5650 001a FB88     	 ldrh r3,[r7,#6]
1611:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5651              	 .loc 1 1611 1
 5652 001c 1846     	 mov r0,r3
 5653 001e 0C37     	 adds r7,r7,#12
 5654              	.LCFI208:
 5655              	 .cfi_def_cfa_offset 4
 5656 0020 BD46     	 mov sp,r7
 5657              	.LCFI209:
 5658              	 .cfi_def_cfa_register 13
 5659              	 
 5660 0022 5DF8047B 	 ldr r7,[sp],#4
 5661              	.LCFI210:
 5662              	 .cfi_restore 7
 5663              	 .cfi_def_cfa_offset 0
 5664 0026 7047     	 bx lr
 5665              	.L296:
 5666              	 .align 2
 5667              	.L295:
 5668 0028 00000000 	 .word xmc_device
 5669              	 .cfi_endproc
 5670              	.LFE209:
 5672              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 5673              	 .align 1
 5674              	 .global XMC_USBD_IsEnumDone
 5675              	 .syntax unified
 5676              	 .thumb
 5677              	 .thumb_func
 5678              	 .fpu fpv4-sp-d16
 5680              	XMC_USBD_IsEnumDone:
 5681              	.LFB210:
1612:../Libraries/XMCLib/src/xmc_usbd.c **** 
1613:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1614:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1615:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1616:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1617:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1618:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1619:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5682              	 .loc 1 1619 1
 5683              	 .cfi_startproc
 5684              	 
 5685              	 
 5686              	 
 5687 0000 80B4     	 push {r7}
 5688              	.LCFI211:
 5689              	 .cfi_def_cfa_offset 4
 5690              	 .cfi_offset 7,-4
 5691 0002 00AF     	 add r7,sp,#0
 5692              	.LCFI212:
 5693              	 .cfi_def_cfa_register 7
1620:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 5694              	 .loc 1 1620 21
 5695 0004 0B4B     	 ldr r3,.L301
 5696 0006 93F8FE31 	 ldrb r3,[r3,#510]
 5697 000a 03F00103 	 and r3,r3,#1
 5698 000e DBB2     	 uxtb r3,r3
 5699              	 .loc 1 1620 53
 5700 0010 002B     	 cmp r3,#0
 5701 0012 09D0     	 beq .L298
 5702              	 .loc 1 1620 53 is_stmt 0 discriminator 1
 5703 0014 074B     	 ldr r3,.L301
 5704 0016 93F8FE31 	 ldrb r3,[r3,#510]
 5705 001a 03F00403 	 and r3,r3,#4
 5706 001e DBB2     	 uxtb r3,r3
 5707 0020 002B     	 cmp r3,#0
 5708 0022 01D0     	 beq .L298
 5709              	 .loc 1 1620 53 discriminator 3
 5710 0024 0123     	 movs r3,#1
 5711 0026 00E0     	 b .L299
 5712              	.L298:
 5713              	 .loc 1 1620 53 discriminator 4
 5714 0028 0023     	 movs r3,#0
 5715              	.L299:
1621:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5716              	 .loc 1 1621 1 is_stmt 1 discriminator 6
 5717 002a 1846     	 mov r0,r3
 5718 002c BD46     	 mov sp,r7
 5719              	.LCFI213:
 5720              	 .cfi_def_cfa_register 13
 5721              	 
 5722 002e 5DF8047B 	 ldr r7,[sp],#4
 5723              	.LCFI214:
 5724              	 .cfi_restore 7
 5725              	 .cfi_def_cfa_offset 0
 5726 0032 7047     	 bx lr
 5727              	.L302:
 5728              	 .align 2
 5729              	.L301:
 5730 0034 00000000 	 .word xmc_device
 5731              	 .cfi_endproc
 5732              	.LFE210:
 5734              	 .text
 5735              	.Letext0:
 5736              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 5737              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 5738              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 5739              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 5740              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc4_scu.h"
 5741              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_usbd.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:17     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:20     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:23     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
    {standard input}:26     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:33     .bss.xmc_device:00000000 xmc_device
    {standard input}:30     .bss.xmc_device:00000000 $d
    {standard input}:36     USB_RAM:00000000 $d
    {standard input}:39     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:44     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
    {standard input}:47     .bss.usbd_init:00000000 $d
    {standard input}:50     .bss.usbd_init:00000000 usbd_init
    {standard input}:57     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:54     .rodata.Driver_USBD0:00000000 $d
    {standard input}:3357   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:3444   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3819   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3886   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3952   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:4018   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:4461   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4883   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:5367   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:4540   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:4099   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:4218   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:4326   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4771   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:5619   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:5680   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:75     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:82     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:170    .text.XMC_USBD_lDeviceActive:00000064 $d
    {standard input}:175    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:181    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:361    .text.XMC_USBD_lReadFifo:000000e4 $d
    {standard input}:366    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:372    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:507    .text.XMC_USBD_lWriteFifo:000000a0 $d
    {standard input}:512    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:518    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:619    .text.XMC_USBD_lFlushTXFifo:0000007c $d
    {standard input}:624    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:630    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:722    .text.XMC_USBD_lFlushRXFifo:00000068 $d
    {standard input}:727    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:733    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:827    .text.XMC_USBD_lAssignTXFifo:0000006c $d
    {standard input}:832    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:838    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:890    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:895    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:901    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:1152   .text.XMC_USBD_lStartReadXfer:00000170 $d
    {standard input}:1158   .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:1164   .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1436   .text.XMC_USBD_lStartWriteXfer:00000190 $d
    {standard input}:1442   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1448   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:3231   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:3294   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2900   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1681   .text.XMC_USBD_lHandleUSBReset:0000014c $d
    {standard input}:1686   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1692   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:3047   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1753   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1758   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1764   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1851   .text.XMC_USBD_lHandleEnumDone:00000074 $d
    {standard input}:1856   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1862   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:3168   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:2157   .text.XMC_USBD_lHandleOEPInt:000001b0 $d
    {standard input}:2162   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:2168   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:3107   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2464   .text.XMC_USBD_lHandleIEPInt:000001b8 $d
    {standard input}:2469   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2475   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2510   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2516   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2568   .text.XMC_USBD_lHandleRxFLvl:00000080 $d
    {standard input}:2573   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2580   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2808   .text.XMC_USBD_IRQHandler:0000014c $d
    {standard input}:2813   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2820   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2848   .text.XMC_USBD_Enable:00000018 $d
    {standard input}:2853   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2860   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2888   .text.XMC_USBD_Disable:00000018 $d
    {standard input}:2893   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2930   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2944   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:3036   .text.XMC_USBD_ClearEvent:000000c8 $d
    {standard input}:3041   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:3095   .text.XMC_USBD_lClearEventOTG:00000028 $d
    {standard input}:3100   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:3156   .text.XMC_USBD_ClearEventINEP:0000002c $d
    {standard input}:3161   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:3219   .text.XMC_USBD_ClearEventOUTEP:0000002c $d
    {standard input}:3224   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:3282   .text.XMC_USBD_EnableEventOUTEP:0000002c $d
    {standard input}:3287   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:3345   .text.XMC_USBD_EnableEventINEP:0000002c $d
    {standard input}:3350   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:3437   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3804   .text.XMC_USBD_Init:0000022c $d
    {standard input}:3812   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3874   .text.XMC_USBD_Uninitialize:00000038 $d
    {standard input}:3879   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3940   .text.XMC_USBD_DeviceConnect:00000030 $d
    {standard input}:3945   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:4006   .text.XMC_USBD_DeviceDisconnect:00000030 $d
    {standard input}:4011   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:4087   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:4092   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:4206   .text.XMC_USBD_EndpointReadStart:00000084 $d
    {standard input}:4211   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:4314   .text.XMC_USBD_EndpointRead:00000074 $d
    {standard input}:4319   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:4449   .text.XMC_USBD_EndpointWrite:000000a0 $d
    {standard input}:4454   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:4528   .text.XMC_USBD_DeviceSetAddress:00000048 $d
    {standard input}:4533   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4759   .text.XMC_USBD_EndpointStall:00000148 $d
    {standard input}:4764   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4871   .text.XMC_USBD_EndpointAbort:00000084 $d
    {standard input}:4876   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:5281   .text.XMC_USBD_EndpointConfigure:00000288 $d
    {standard input}:5288   .text.XMC_USBD_EndpointConfigure:0000029c $t
    {standard input}:5355   .text.XMC_USBD_EndpointConfigure:000002f4 $d
    {standard input}:5360   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:5606   .text.XMC_USBD_EndpointUnconfigure:00000168 $d
    {standard input}:5612   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:5668   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:5673   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:5730   .text.XMC_USBD_IsEnumDone:00000034 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_POWER_DisableUsb
memset
memcpy
