   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc_dma.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_DMA_GetEventStatus:
  25              	.LFB133:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2018-09-18
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2017-09-28:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Improved documentation and added XMC_DMA_CH_EnableFifo() and XMC_DMA_CH_DisableFifo()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2018-09-18:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Added XMC_DMA_CH_GetTransferredData()
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct GPDMA_CH
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #pragma push
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #pragma anon_unions
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning 586
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type (:: XMC_DMA_CH_TRANSFER_TYPE
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority (::XMC_DMA_CH_PRIORITY_t)
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface (:: XMC_DMA_C
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request. See xmc_dma_map.h *
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface (:: XMC_
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request. See xmc_dma_ma
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #pragma pop
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning restore
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
  27              	 .loc 1 541 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  43              	 .loc 1 542 14
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F86033 	 ldr r3,[r3,#864]
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** }
  46              	 .loc 1 543 1
  47 000e 1846     	 mov r0,r3
  48 0010 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0012 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0014 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0018 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE133:
  63              	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  64              	 .align 1
  65              	 .syntax unified
  66              	 .thumb
  67              	 .thumb_func
  68              	 .fpu fpv4-sp-d16
  70              	XMC_DMA_GetChannelsTransferCompleteStatus:
  71              	.LFB134:
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
  72              	 .loc 1 556 1
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  88              	 .loc 1 557 26
  89 0008 7B68     	 ldr r3,[r7,#4]
  90 000a D3F8E832 	 ldr r3,[r3,#744]
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** }
  91              	 .loc 1 558 1
  92 000e 1846     	 mov r0,r3
  93 0010 0C37     	 adds r7,r7,#12
  94              	.LCFI9:
  95              	 .cfi_def_cfa_offset 4
  96 0012 BD46     	 mov sp,r7
  97              	.LCFI10:
  98              	 .cfi_def_cfa_register 13
  99              	 
 100 0014 5DF8047B 	 ldr r7,[sp],#4
 101              	.LCFI11:
 102              	 .cfi_restore 7
 103              	 .cfi_def_cfa_offset 0
 104 0018 7047     	 bx lr
 105              	 .cfi_endproc
 106              	.LFE134:
 108              	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
 109              	 .align 1
 110              	 .syntax unified
 111              	 .thumb
 112              	 .thumb_func
 113              	 .fpu fpv4-sp-d16
 115              	XMC_DMA_GetChannelsBlockCompleteStatus:
 116              	.LFB135:
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 561:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 563:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 564:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 566:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 568:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 569:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 570:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 571:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 117              	 .loc 1 571 1
 118              	 .cfi_startproc
 119              	 
 120              	 
 121              	 
 122 0000 80B4     	 push {r7}
 123              	.LCFI12:
 124              	 .cfi_def_cfa_offset 4
 125              	 .cfi_offset 7,-4
 126 0002 83B0     	 sub sp,sp,#12
 127              	.LCFI13:
 128              	 .cfi_def_cfa_offset 16
 129 0004 00AF     	 add r7,sp,#0
 130              	.LCFI14:
 131              	 .cfi_def_cfa_register 7
 132 0006 7860     	 str r0,[r7,#4]
 572:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 133              	 .loc 1 572 26
 134 0008 7B68     	 ldr r3,[r7,#4]
 135 000a D3F8F032 	 ldr r3,[r3,#752]
 573:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 136              	 .loc 1 573 1
 137 000e 1846     	 mov r0,r3
 138 0010 0C37     	 adds r7,r7,#12
 139              	.LCFI15:
 140              	 .cfi_def_cfa_offset 4
 141 0012 BD46     	 mov sp,r7
 142              	.LCFI16:
 143              	 .cfi_def_cfa_register 13
 144              	 
 145 0014 5DF8047B 	 ldr r7,[sp],#4
 146              	.LCFI17:
 147              	 .cfi_restore 7
 148              	 .cfi_def_cfa_offset 0
 149 0018 7047     	 bx lr
 150              	 .cfi_endproc
 151              	.LFE135:
 153              	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 154              	 .align 1
 155              	 .syntax unified
 156              	 .thumb
 157              	 .thumb_func
 158              	 .fpu fpv4-sp-d16
 160              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 161              	.LFB136:
 574:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 575:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 576:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 577:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 578:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 580:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 581:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 582:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 583:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 584:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 585:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 586:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 587:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 588:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 589:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 590:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 162              	 .loc 1 590 1
 163              	 .cfi_startproc
 164              	 
 165              	 
 166              	 
 167 0000 80B4     	 push {r7}
 168              	.LCFI18:
 169              	 .cfi_def_cfa_offset 4
 170              	 .cfi_offset 7,-4
 171 0002 83B0     	 sub sp,sp,#12
 172              	.LCFI19:
 173              	 .cfi_def_cfa_offset 16
 174 0004 00AF     	 add r7,sp,#0
 175              	.LCFI20:
 176              	 .cfi_def_cfa_register 7
 177 0006 7860     	 str r0,[r7,#4]
 591:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 178              	 .loc 1 591 26
 179 0008 7B68     	 ldr r3,[r7,#4]
 180 000a D3F8F832 	 ldr r3,[r3,#760]
 592:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 181              	 .loc 1 592 1
 182 000e 1846     	 mov r0,r3
 183 0010 0C37     	 adds r7,r7,#12
 184              	.LCFI21:
 185              	 .cfi_def_cfa_offset 4
 186 0012 BD46     	 mov sp,r7
 187              	.LCFI22:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0014 5DF8047B 	 ldr r7,[sp],#4
 191              	.LCFI23:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 0018 7047     	 bx lr
 195              	 .cfi_endproc
 196              	.LFE136:
 198              	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 199              	 .align 1
 200              	 .syntax unified
 201              	 .thumb
 202              	 .thumb_func
 203              	 .fpu fpv4-sp-d16
 205              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 206              	.LFB137:
 593:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 594:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 595:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 596:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 597:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 598:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 599:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 600:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 601:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 602:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 603:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 605:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 606:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 607:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 608:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 609:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 207              	 .loc 1 609 1
 208              	 .cfi_startproc
 209              	 
 210              	 
 211              	 
 212 0000 80B4     	 push {r7}
 213              	.LCFI24:
 214              	 .cfi_def_cfa_offset 4
 215              	 .cfi_offset 7,-4
 216 0002 83B0     	 sub sp,sp,#12
 217              	.LCFI25:
 218              	 .cfi_def_cfa_offset 16
 219 0004 00AF     	 add r7,sp,#0
 220              	.LCFI26:
 221              	 .cfi_def_cfa_register 7
 222 0006 7860     	 str r0,[r7,#4]
 610:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 223              	 .loc 1 610 26
 224 0008 7B68     	 ldr r3,[r7,#4]
 225 000a D3F80033 	 ldr r3,[r3,#768]
 611:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 226              	 .loc 1 611 1
 227 000e 1846     	 mov r0,r3
 228 0010 0C37     	 adds r7,r7,#12
 229              	.LCFI27:
 230              	 .cfi_def_cfa_offset 4
 231 0012 BD46     	 mov sp,r7
 232              	.LCFI28:
 233              	 .cfi_def_cfa_register 13
 234              	 
 235 0014 5DF8047B 	 ldr r7,[sp],#4
 236              	.LCFI29:
 237              	 .cfi_restore 7
 238              	 .cfi_def_cfa_offset 0
 239 0018 7047     	 bx lr
 240              	 .cfi_endproc
 241              	.LFE137:
 243              	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 244              	 .align 1
 245              	 .syntax unified
 246              	 .thumb
 247              	 .thumb_func
 248              	 .fpu fpv4-sp-d16
 250              	XMC_DMA_GetChannelsErrorStatus:
 251              	.LFB138:
 612:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 613:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 614:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 615:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 616:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 617:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 618:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 619:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 620:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 621:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 623:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 624:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 252              	 .loc 1 624 1
 253              	 .cfi_startproc
 254              	 
 255              	 
 256              	 
 257 0000 80B4     	 push {r7}
 258              	.LCFI30:
 259              	 .cfi_def_cfa_offset 4
 260              	 .cfi_offset 7,-4
 261 0002 83B0     	 sub sp,sp,#12
 262              	.LCFI31:
 263              	 .cfi_def_cfa_offset 16
 264 0004 00AF     	 add r7,sp,#0
 265              	.LCFI32:
 266              	 .cfi_def_cfa_register 7
 267 0006 7860     	 str r0,[r7,#4]
 625:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 268              	 .loc 1 625 26
 269 0008 7B68     	 ldr r3,[r7,#4]
 270 000a D3F80833 	 ldr r3,[r3,#776]
 626:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 271              	 .loc 1 626 1
 272 000e 1846     	 mov r0,r3
 273 0010 0C37     	 adds r7,r7,#12
 274              	.LCFI33:
 275              	 .cfi_def_cfa_offset 4
 276 0012 BD46     	 mov sp,r7
 277              	.LCFI34:
 278              	 .cfi_def_cfa_register 13
 279              	 
 280 0014 5DF8047B 	 ldr r7,[sp],#4
 281              	.LCFI35:
 282              	 .cfi_restore 7
 283              	 .cfi_def_cfa_offset 0
 284 0018 7047     	 bx lr
 285              	 .cfi_endproc
 286              	.LFE138:
 288              	 .section .bss.dma0_event_handlers,"aw",%nobits
 289              	 .align 2
 292              	dma0_event_handlers:
 293 0000 00000000 	 .space 32
 293      00000000 
 293      00000000 
 293      00000000 
 293      00000000 
 294              	 .section .bss.dma1_event_handlers,"aw",%nobits
 295              	 .align 2
 298              	dma1_event_handlers:
 299 0000 00000000 	 .space 16
 299      00000000 
 299      00000000 
 299      00000000 
 300              	 .section .text.XMC_DMA_Init,"ax",%progbits
 301              	 .align 1
 302              	 .global XMC_DMA_Init
 303              	 .syntax unified
 304              	 .thumb
 305              	 .thumb_func
 306              	 .fpu fpv4-sp-d16
 308              	XMC_DMA_Init:
 309              	.LFB185:
 310              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2019-05-07
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_dma.c ****  *
  15:../Libraries/XMCLib/src/xmc_dma.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_dma.c ****  *
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_dma.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_dma.c ****  *
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_dma.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_dma.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_dma.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_dma.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *
  42:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *
  45:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *
  48:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  51:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *
  56:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  57:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  58:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  59:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  60:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  61:../Libraries/XMCLib/src/xmc_dma.c ****  *
  62:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-03-09:
  63:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Optimize write only registers
  64:../Libraries/XMCLib/src/xmc_dma.c ****  *
  65:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-04-08:
  66:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Update XMC_DMA_CH_EnableEvent and XMC_DMA_CH_DisableEvent.
  67:../Libraries/XMCLib/src/xmc_dma.c ****  *       Write optimization of MASKCHEV
  68:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_IRQHandler, clear channel event status before processing the event handler.
  69:../Libraries/XMCLib/src/xmc_dma.c ****  *       It corrects event losses if the DMA triggered in the event handler finished before returni
  70:../Libraries/XMCLib/src/xmc_dma.c ****  *
  71:../Libraries/XMCLib/src/xmc_dma.c ****  * 2018-02-08:
  72:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_CH_RequestLastMultiblockTransfer() clearing CTLL_LLP_SRC_EN and CTLL_LLP_DST_E
  73:../Libraries/XMCLib/src/xmc_dma.c ****  *
  74:../Libraries/XMCLib/src/xmc_dma.c ****  * 2019-05-07:
  75:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fixed compilation warnings
  76:../Libraries/XMCLib/src/xmc_dma.c ****  *
  77:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  78:../Libraries/XMCLib/src/xmc_dma.c ****  */
  79:../Libraries/XMCLib/src/xmc_dma.c **** 
  80:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  82:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_dma.c **** 
  84:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  85:../Libraries/XMCLib/src/xmc_dma.c **** 
  86:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  87:../Libraries/XMCLib/src/xmc_dma.c **** 
  88:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  89:../Libraries/XMCLib/src/xmc_dma.c **** 
  90:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  91:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  92:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  93:../Libraries/XMCLib/src/xmc_dma.c **** 
  94:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  95:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  96:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  97:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  98:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  99:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
 100:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
 101:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
 102:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
 103:../Libraries/XMCLib/src/xmc_dma.c **** 
 104:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 105:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
 106:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 107:../Libraries/XMCLib/src/xmc_dma.c **** 
 108:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
 109:../Libraries/XMCLib/src/xmc_dma.c **** static XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
 110:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 111:../Libraries/XMCLib/src/xmc_dma.c **** 
 112:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
 113:../Libraries/XMCLib/src/xmc_dma.c **** static XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
 114:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 115:../Libraries/XMCLib/src/xmc_dma.c **** 
 116:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 117:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
 118:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 119:../Libraries/XMCLib/src/xmc_dma.c **** 
 120:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 121:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 122:../Libraries/XMCLib/src/xmc_dma.c **** {
 311              	 .loc 2 122 1
 312              	 .cfi_startproc
 313              	 
 314              	 
 315 0000 80B5     	 push {r7,lr}
 316              	.LCFI36:
 317              	 .cfi_def_cfa_offset 8
 318              	 .cfi_offset 7,-8
 319              	 .cfi_offset 14,-4
 320 0002 82B0     	 sub sp,sp,#8
 321              	.LCFI37:
 322              	 .cfi_def_cfa_offset 16
 323 0004 00AF     	 add r7,sp,#0
 324              	.LCFI38:
 325              	 .cfi_def_cfa_register 7
 326 0006 7860     	 str r0,[r7,#4]
 123:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 327              	 .loc 2 123 3
 328 0008 7868     	 ldr r0,[r7,#4]
 329 000a FFF7FEFF 	 bl XMC_DMA_Enable
 124:../Libraries/XMCLib/src/xmc_dma.c **** }
 330              	 .loc 2 124 1
 331 000e 00BF     	 nop
 332 0010 0837     	 adds r7,r7,#8
 333              	.LCFI39:
 334              	 .cfi_def_cfa_offset 8
 335 0012 BD46     	 mov sp,r7
 336              	.LCFI40:
 337              	 .cfi_def_cfa_register 13
 338              	 
 339 0014 80BD     	 pop {r7,pc}
 340              	 .cfi_endproc
 341              	.LFE185:
 343              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 344              	 .align 1
 345              	 .global XMC_DMA_Enable
 346              	 .syntax unified
 347              	 .thumb
 348              	 .thumb_func
 349              	 .fpu fpv4-sp-d16
 351              	XMC_DMA_Enable:
 352              	.LFB186:
 125:../Libraries/XMCLib/src/xmc_dma.c **** 
 126:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 127:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 128:../Libraries/XMCLib/src/xmc_dma.c **** {
 353              	 .loc 2 128 1
 354              	 .cfi_startproc
 355              	 
 356              	 
 357 0000 80B5     	 push {r7,lr}
 358              	.LCFI41:
 359              	 .cfi_def_cfa_offset 8
 360              	 .cfi_offset 7,-8
 361              	 .cfi_offset 14,-4
 362 0002 82B0     	 sub sp,sp,#8
 363              	.LCFI42:
 364              	 .cfi_def_cfa_offset 16
 365 0004 00AF     	 add r7,sp,#0
 366              	.LCFI43:
 367              	 .cfi_def_cfa_register 7
 368 0006 7860     	 str r0,[r7,#4]
 129:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 130:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 369              	 .loc 2 130 6
 370 0008 7B68     	 ldr r3,[r7,#4]
 371 000a 0C4A     	 ldr r2,.L17
 372 000c 9342     	 cmp r3,r2
 373 000e 06D1     	 bne .L15
 131:../Libraries/XMCLib/src/xmc_dma.c ****   {
 132:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 133:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 374              	 .loc 2 134 5
 375 0010 0B48     	 ldr r0,.L17+4
 376 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 135:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 136:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 377              	 .loc 2 136 5
 378 0016 0A48     	 ldr r0,.L17+4
 379 0018 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 380 001c 05E0     	 b .L16
 381              	.L15:
 137:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 138:../Libraries/XMCLib/src/xmc_dma.c ****   }
 139:../Libraries/XMCLib/src/xmc_dma.c ****   else
 140:../Libraries/XMCLib/src/xmc_dma.c ****   {
 141:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 142:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 382              	 .loc 2 142 5
 383 001e 0948     	 ldr r0,.L17+8
 384 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 143:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 144:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 385              	 .loc 2 144 5
 386 0024 0748     	 ldr r0,.L17+8
 387 0026 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 388              	.L16:
 145:../Libraries/XMCLib/src/xmc_dma.c ****   }
 146:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 147:../Libraries/XMCLib/src/xmc_dma.c **** 
 148:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 389              	 .loc 2 148 18
 390 002a 7B68     	 ldr r3,[r7,#4]
 391 002c 0122     	 movs r2,#1
 392 002e C3F89823 	 str r2,[r3,#920]
 149:../Libraries/XMCLib/src/xmc_dma.c **** }
 393              	 .loc 2 149 1
 394 0032 00BF     	 nop
 395 0034 0837     	 adds r7,r7,#8
 396              	.LCFI44:
 397              	 .cfi_def_cfa_offset 8
 398 0036 BD46     	 mov sp,r7
 399              	.LCFI45:
 400              	 .cfi_def_cfa_register 13
 401              	 
 402 0038 80BD     	 pop {r7,pc}
 403              	.L18:
 404 003a 00BF     	 .align 2
 405              	.L17:
 406 003c 00400150 	 .word 1342259200
 407 0040 10000020 	 .word 536870928
 408 0044 20000020 	 .word 536870944
 409              	 .cfi_endproc
 410              	.LFE186:
 412              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 413              	 .align 1
 414              	 .global XMC_DMA_Disable
 415              	 .syntax unified
 416              	 .thumb
 417              	 .thumb_func
 418              	 .fpu fpv4-sp-d16
 420              	XMC_DMA_Disable:
 421              	.LFB187:
 150:../Libraries/XMCLib/src/xmc_dma.c **** 
 151:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 152:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 153:../Libraries/XMCLib/src/xmc_dma.c **** {
 422              	 .loc 2 153 1
 423              	 .cfi_startproc
 424              	 
 425              	 
 426 0000 80B5     	 push {r7,lr}
 427              	.LCFI46:
 428              	 .cfi_def_cfa_offset 8
 429              	 .cfi_offset 7,-8
 430              	 .cfi_offset 14,-4
 431 0002 82B0     	 sub sp,sp,#8
 432              	.LCFI47:
 433              	 .cfi_def_cfa_offset 16
 434 0004 00AF     	 add r7,sp,#0
 435              	.LCFI48:
 436              	 .cfi_def_cfa_register 7
 437 0006 7860     	 str r0,[r7,#4]
 154:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 438              	 .loc 2 154 18
 439 0008 7B68     	 ldr r3,[r7,#4]
 440 000a 0022     	 movs r2,#0
 441 000c C3F89823 	 str r2,[r3,#920]
 155:../Libraries/XMCLib/src/xmc_dma.c **** 
 156:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 157:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 442              	 .loc 2 157 6
 443 0010 7B68     	 ldr r3,[r7,#4]
 444 0012 0A4A     	 ldr r2,.L23
 445 0014 9342     	 cmp r3,r2
 446 0016 06D1     	 bne .L20
 158:../Libraries/XMCLib/src/xmc_dma.c ****   {
 159:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 160:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 447              	 .loc 2 160 5
 448 0018 0948     	 ldr r0,.L23+4
 449 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 161:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 162:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 450              	 .loc 2 162 5
 451 001e 0848     	 ldr r0,.L23+4
 452 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 163:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 164:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 165:../Libraries/XMCLib/src/xmc_dma.c ****   }
 166:../Libraries/XMCLib/src/xmc_dma.c ****   else
 167:../Libraries/XMCLib/src/xmc_dma.c ****   {
 168:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 169:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 170:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 171:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 172:../Libraries/XMCLib/src/xmc_dma.c ****   }
 173:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 174:../Libraries/XMCLib/src/xmc_dma.c **** }
 453              	 .loc 2 174 1
 454 0024 05E0     	 b .L22
 455              	.L20:
 168:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 456              	 .loc 2 168 5
 457 0026 0748     	 ldr r0,.L23+8
 458 0028 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 170:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 459              	 .loc 2 170 5
 460 002c 0548     	 ldr r0,.L23+8
 461 002e FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 462              	.L22:
 463              	 .loc 2 174 1
 464 0032 00BF     	 nop
 465 0034 0837     	 adds r7,r7,#8
 466              	.LCFI49:
 467              	 .cfi_def_cfa_offset 8
 468 0036 BD46     	 mov sp,r7
 469              	.LCFI50:
 470              	 .cfi_def_cfa_register 13
 471              	 
 472 0038 80BD     	 pop {r7,pc}
 473              	.L24:
 474 003a 00BF     	 .align 2
 475              	.L23:
 476 003c 00400150 	 .word 1342259200
 477 0040 10000020 	 .word 536870928
 478 0044 20000020 	 .word 536870944
 479              	 .cfi_endproc
 480              	.LFE187:
 482              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 483              	 .align 1
 484              	 .global XMC_DMA_IsEnabled
 485              	 .syntax unified
 486              	 .thumb
 487              	 .thumb_func
 488              	 .fpu fpv4-sp-d16
 490              	XMC_DMA_IsEnabled:
 491              	.LFB188:
 175:../Libraries/XMCLib/src/xmc_dma.c **** 
 176:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 177:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 178:../Libraries/XMCLib/src/xmc_dma.c **** {
 492              	 .loc 2 178 1
 493              	 .cfi_startproc
 494              	 
 495              	 
 496 0000 80B5     	 push {r7,lr}
 497              	.LCFI51:
 498              	 .cfi_def_cfa_offset 8
 499              	 .cfi_offset 7,-8
 500              	 .cfi_offset 14,-4
 501 0002 84B0     	 sub sp,sp,#16
 502              	.LCFI52:
 503              	 .cfi_def_cfa_offset 24
 504 0004 00AF     	 add r7,sp,#0
 505              	.LCFI53:
 506              	 .cfi_def_cfa_register 7
 507 0006 7860     	 str r0,[r7,#4]
 179:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 180:../Libraries/XMCLib/src/xmc_dma.c **** 
 181:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 182:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 508              	 .loc 2 182 6
 509 0008 7B68     	 ldr r3,[r7,#4]
 510 000a 334A     	 ldr r2,.L36
 511 000c 9342     	 cmp r3,r2
 512 000e 25D1     	 bne .L26
 183:../Libraries/XMCLib/src/xmc_dma.c ****   {
 184:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 185:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 513              	 .loc 2 185 15
 514 0010 3248     	 ldr r0,.L36+4
 515 0012 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 516 0016 0346     	 mov r3,r0
 517              	 .loc 2 185 5
 518 0018 002B     	 cmp r3,#0
 519 001a 14BF     	 ite ne
 520 001c 0123     	 movne r3,#1
 521 001e 0023     	 moveq r3,#0
 522 0020 DBB2     	 uxtb r3,r3
 523 0022 83F00103 	 eor r3,r3,#1
 524 0026 DBB2     	 uxtb r3,r3
 525              	 .loc 2 185 12
 526 0028 FB73     	 strb r3,[r7,#15]
 527 002a FB7B     	 ldrb r3,[r7,#15]
 528 002c 03F00103 	 and r3,r3,#1
 529 0030 FB73     	 strb r3,[r7,#15]
 186:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 187:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 530              	 .loc 2 187 21
 531 0032 FB7B     	 ldrb r3,[r7,#15]
 532 0034 002B     	 cmp r3,#0
 533 0036 0AD0     	 beq .L27
 534              	 .loc 2 187 25 discriminator 1
 535 0038 2848     	 ldr r0,.L36+4
 536 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 537 003e 0346     	 mov r3,r0
 538              	 .loc 2 187 24 discriminator 1
 539 0040 83F00103 	 eor r3,r3,#1
 540 0044 DBB2     	 uxtb r3,r3
 541              	 .loc 2 187 21 discriminator 1
 542 0046 002B     	 cmp r3,#0
 543 0048 01D0     	 beq .L27
 544              	 .loc 2 187 21 is_stmt 0 discriminator 3
 545 004a 0123     	 movs r3,#1
 546 004c 00E0     	 b .L28
 547              	.L27:
 548              	 .loc 2 187 21 discriminator 4
 549 004e 0023     	 movs r3,#0
 550              	.L28:
 551              	 .loc 2 187 12 is_stmt 1 discriminator 6
 552 0050 FB73     	 strb r3,[r7,#15]
 553 0052 FB7B     	 ldrb r3,[r7,#15]
 554 0054 03F00103 	 and r3,r3,#1
 555 0058 FB73     	 strb r3,[r7,#15]
 556 005a 24E0     	 b .L29
 557              	.L26:
 188:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 189:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 190:../Libraries/XMCLib/src/xmc_dma.c ****   }
 191:../Libraries/XMCLib/src/xmc_dma.c ****   else
 192:../Libraries/XMCLib/src/xmc_dma.c ****   {
 193:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 558              	 .loc 2 193 15
 559 005c 2048     	 ldr r0,.L36+8
 560 005e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 561 0062 0346     	 mov r3,r0
 562              	 .loc 2 193 5
 563 0064 002B     	 cmp r3,#0
 564 0066 14BF     	 ite ne
 565 0068 0123     	 movne r3,#1
 566 006a 0023     	 moveq r3,#0
 567 006c DBB2     	 uxtb r3,r3
 568 006e 83F00103 	 eor r3,r3,#1
 569 0072 DBB2     	 uxtb r3,r3
 570              	 .loc 2 193 12
 571 0074 FB73     	 strb r3,[r7,#15]
 572 0076 FB7B     	 ldrb r3,[r7,#15]
 573 0078 03F00103 	 and r3,r3,#1
 574 007c FB73     	 strb r3,[r7,#15]
 194:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 195:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 575              	 .loc 2 195 21
 576 007e FB7B     	 ldrb r3,[r7,#15]
 577 0080 002B     	 cmp r3,#0
 578 0082 0AD0     	 beq .L30
 579              	 .loc 2 195 25 discriminator 1
 580 0084 1648     	 ldr r0,.L36+8
 581 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 582 008a 0346     	 mov r3,r0
 583              	 .loc 2 195 24 discriminator 1
 584 008c 83F00103 	 eor r3,r3,#1
 585 0090 DBB2     	 uxtb r3,r3
 586              	 .loc 2 195 21 discriminator 1
 587 0092 002B     	 cmp r3,#0
 588 0094 01D0     	 beq .L30
 589              	 .loc 2 195 21 is_stmt 0 discriminator 3
 590 0096 0123     	 movs r3,#1
 591 0098 00E0     	 b .L31
 592              	.L30:
 593              	 .loc 2 195 21 discriminator 4
 594 009a 0023     	 movs r3,#0
 595              	.L31:
 596              	 .loc 2 195 12 is_stmt 1 discriminator 6
 597 009c FB73     	 strb r3,[r7,#15]
 598 009e FB7B     	 ldrb r3,[r7,#15]
 599 00a0 03F00103 	 and r3,r3,#1
 600 00a4 FB73     	 strb r3,[r7,#15]
 601              	.L29:
 196:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 197:../Libraries/XMCLib/src/xmc_dma.c ****   }
 198:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 199:../Libraries/XMCLib/src/xmc_dma.c **** 
 200:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 201:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 602              	 .loc 2 201 6
 603 00a6 FB7B     	 ldrb r3,[r7,#15]
 604 00a8 002B     	 cmp r3,#0
 605 00aa 0FD0     	 beq .L32
 202:../Libraries/XMCLib/src/xmc_dma.c ****   {
 203:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 606              	 .loc 2 203 21
 607 00ac FB7B     	 ldrb r3,[r7,#15]
 608 00ae 002B     	 cmp r3,#0
 609 00b0 06D0     	 beq .L33
 610              	 .loc 2 203 28 discriminator 1
 611 00b2 7B68     	 ldr r3,[r7,#4]
 612 00b4 D3F89833 	 ldr r3,[r3,#920]
 613              	 .loc 2 203 21 discriminator 1
 614 00b8 002B     	 cmp r3,#0
 615 00ba 01D0     	 beq .L33
 616              	 .loc 2 203 21 is_stmt 0 discriminator 3
 617 00bc 0123     	 movs r3,#1
 618 00be 00E0     	 b .L34
 619              	.L33:
 620              	 .loc 2 203 21 discriminator 4
 621 00c0 0023     	 movs r3,#0
 622              	.L34:
 623              	 .loc 2 203 12 is_stmt 1 discriminator 6
 624 00c2 FB73     	 strb r3,[r7,#15]
 625 00c4 FB7B     	 ldrb r3,[r7,#15]
 626 00c6 03F00103 	 and r3,r3,#1
 627 00ca FB73     	 strb r3,[r7,#15]
 628              	.L32:
 204:../Libraries/XMCLib/src/xmc_dma.c ****   }
 205:../Libraries/XMCLib/src/xmc_dma.c **** 
 206:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 629              	 .loc 2 206 10
 630 00cc FB7B     	 ldrb r3,[r7,#15]
 207:../Libraries/XMCLib/src/xmc_dma.c **** }
 631              	 .loc 2 207 1
 632 00ce 1846     	 mov r0,r3
 633 00d0 1037     	 adds r7,r7,#16
 634              	.LCFI54:
 635              	 .cfi_def_cfa_offset 8
 636 00d2 BD46     	 mov sp,r7
 637              	.LCFI55:
 638              	 .cfi_def_cfa_register 13
 639              	 
 640 00d4 80BD     	 pop {r7,pc}
 641              	.L37:
 642 00d6 00BF     	 .align 2
 643              	.L36:
 644 00d8 00400150 	 .word 1342259200
 645 00dc 10000020 	 .word 536870928
 646 00e0 20000020 	 .word 536870944
 647              	 .cfi_endproc
 648              	.LFE188:
 650              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 651              	 .align 1
 652              	 .global XMC_DMA_EnableRequestLine
 653              	 .syntax unified
 654              	 .thumb
 655              	 .thumb_func
 656              	 .fpu fpv4-sp-d16
 658              	XMC_DMA_EnableRequestLine:
 659              	.LFB189:
 208:../Libraries/XMCLib/src/xmc_dma.c **** 
 209:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 210:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 211:../Libraries/XMCLib/src/xmc_dma.c **** {
 660              	 .loc 2 211 1
 661              	 .cfi_startproc
 662              	 
 663              	 
 664              	 
 665 0000 80B4     	 push {r7}
 666              	.LCFI56:
 667              	 .cfi_def_cfa_offset 4
 668              	 .cfi_offset 7,-4
 669 0002 83B0     	 sub sp,sp,#12
 670              	.LCFI57:
 671              	 .cfi_def_cfa_offset 16
 672 0004 00AF     	 add r7,sp,#0
 673              	.LCFI58:
 674              	 .cfi_def_cfa_register 7
 675 0006 7860     	 str r0,[r7,#4]
 676 0008 0B46     	 mov r3,r1
 677 000a FB70     	 strb r3,[r7,#3]
 678 000c 1346     	 mov r3,r2
 679 000e BB70     	 strb r3,[r7,#2]
 212:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 213:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 680              	 .loc 2 213 6
 681 0010 7B68     	 ldr r3,[r7,#4]
 682 0012 204A     	 ldr r2,.L42
 683 0014 9342     	 cmp r3,r2
 684 0016 1CD1     	 bne .L39
 214:../Libraries/XMCLib/src/xmc_dma.c ****   {
 215:../Libraries/XMCLib/src/xmc_dma.c **** #else
 216:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 217:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 218:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 685              	 .loc 2 218 24
 686 0018 1F4B     	 ldr r3,.L42+4
 687 001a 9A68     	 ldr r2,[r3,#8]
 688              	 .loc 2 218 73
 689 001c FB78     	 ldrb r3,[r7,#3]
 690 001e 9B00     	 lsls r3,r3,#2
 691              	 .loc 2 218 64
 692 0020 0F21     	 movs r1,#15
 693 0022 01FA03F3 	 lsl r3,r1,r3
 694              	 .loc 2 218 35
 695 0026 DB43     	 mvns r3,r3
 696              	 .loc 2 218 33
 697 0028 1A40     	 ands r2,r2,r3
 219:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 698              	 .loc 2 219 21
 699 002a B978     	 ldrb r1,[r7,#2]
 700              	 .loc 2 219 51
 701 002c FB78     	 ldrb r3,[r7,#3]
 702 002e 9B00     	 lsls r3,r3,#2
 703              	 .loc 2 219 42
 704 0030 01FA03F3 	 lsl r3,r1,r3
 218:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 705              	 .loc 2 218 8
 706 0034 1849     	 ldr r1,.L42+4
 218:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 707              	 .loc 2 218 99
 708 0036 1343     	 orrs r3,r3,r2
 218:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 709              	 .loc 2 218 17
 710 0038 8B60     	 str r3,[r1,#8]
 220:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 711              	 .loc 2 220 15
 712 003a 174B     	 ldr r3,.L42+4
 713 003c 1A69     	 ldr r2,[r3,#16]
 714              	 .loc 2 220 34
 715 003e FB78     	 ldrb r3,[r7,#3]
 716 0040 03F00703 	 and r3,r3,#7
 717              	 .loc 2 220 25
 718 0044 0121     	 movs r1,#1
 719 0046 01FA03F3 	 lsl r3,r1,r3
 720              	 .loc 2 220 15
 721 004a 1349     	 ldr r1,.L42+4
 722 004c 1343     	 orrs r3,r3,r2
 723 004e 0B61     	 str r3,[r1,#16]
 221:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 222:../Libraries/XMCLib/src/xmc_dma.c ****   }
 223:../Libraries/XMCLib/src/xmc_dma.c ****   else
 224:../Libraries/XMCLib/src/xmc_dma.c ****   {
 225:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 226:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 227:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 228:../Libraries/XMCLib/src/xmc_dma.c ****   }
 229:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 230:../Libraries/XMCLib/src/xmc_dma.c **** }
 724              	 .loc 2 230 1
 725 0050 1AE0     	 b .L41
 726              	.L39:
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 727              	 .loc 2 225 24
 728 0052 114B     	 ldr r3,.L42+4
 729 0054 DA68     	 ldr r2,[r3,#12]
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 730              	 .loc 2 225 73
 731 0056 FB78     	 ldrb r3,[r7,#3]
 732 0058 9B00     	 lsls r3,r3,#2
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 733              	 .loc 2 225 64
 734 005a 0F21     	 movs r1,#15
 735 005c 01FA03F3 	 lsl r3,r1,r3
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 736              	 .loc 2 225 35
 737 0060 DB43     	 mvns r3,r3
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 738              	 .loc 2 225 33
 739 0062 1A40     	 ands r2,r2,r3
 226:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 740              	 .loc 2 226 21
 741 0064 B978     	 ldrb r1,[r7,#2]
 226:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 742              	 .loc 2 226 51
 743 0066 FB78     	 ldrb r3,[r7,#3]
 744 0068 9B00     	 lsls r3,r3,#2
 226:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 745              	 .loc 2 226 42
 746 006a 01FA03F3 	 lsl r3,r1,r3
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 747              	 .loc 2 225 8
 748 006e 0A49     	 ldr r1,.L42+4
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 749              	 .loc 2 225 99
 750 0070 1343     	 orrs r3,r3,r2
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 751              	 .loc 2 225 17
 752 0072 CB60     	 str r3,[r1,#12]
 227:../Libraries/XMCLib/src/xmc_dma.c ****   }
 753              	 .loc 2 227 15
 754 0074 084B     	 ldr r3,.L42+4
 755 0076 1A69     	 ldr r2,[r3,#16]
 227:../Libraries/XMCLib/src/xmc_dma.c ****   }
 756              	 .loc 2 227 27
 757 0078 FB78     	 ldrb r3,[r7,#3]
 758 007a 4FF48071 	 mov r1,#256
 759 007e 01FA03F3 	 lsl r3,r1,r3
 227:../Libraries/XMCLib/src/xmc_dma.c ****   }
 760              	 .loc 2 227 15
 761 0082 0549     	 ldr r1,.L42+4
 762 0084 1343     	 orrs r3,r3,r2
 763 0086 0B61     	 str r3,[r1,#16]
 764              	.L41:
 765              	 .loc 2 230 1
 766 0088 00BF     	 nop
 767 008a 0C37     	 adds r7,r7,#12
 768              	.LCFI59:
 769              	 .cfi_def_cfa_offset 4
 770 008c BD46     	 mov sp,r7
 771              	.LCFI60:
 772              	 .cfi_def_cfa_register 13
 773              	 
 774 008e 5DF8047B 	 ldr r7,[sp],#4
 775              	.LCFI61:
 776              	 .cfi_restore 7
 777              	 .cfi_def_cfa_offset 0
 778 0092 7047     	 bx lr
 779              	.L43:
 780              	 .align 2
 781              	.L42:
 782 0094 00400150 	 .word 1342259200
 783 0098 00490050 	 .word 1342195968
 784              	 .cfi_endproc
 785              	.LFE189:
 787              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 788              	 .align 1
 789              	 .global XMC_DMA_DisableRequestLine
 790              	 .syntax unified
 791              	 .thumb
 792              	 .thumb_func
 793              	 .fpu fpv4-sp-d16
 795              	XMC_DMA_DisableRequestLine:
 796              	.LFB190:
 231:../Libraries/XMCLib/src/xmc_dma.c **** 
 232:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 233:../Libraries/XMCLib/src/xmc_dma.c **** {
 797              	 .loc 2 233 1
 798              	 .cfi_startproc
 799              	 
 800              	 
 801              	 
 802 0000 80B4     	 push {r7}
 803              	.LCFI62:
 804              	 .cfi_def_cfa_offset 4
 805              	 .cfi_offset 7,-4
 806 0002 83B0     	 sub sp,sp,#12
 807              	.LCFI63:
 808              	 .cfi_def_cfa_offset 16
 809 0004 00AF     	 add r7,sp,#0
 810              	.LCFI64:
 811              	 .cfi_def_cfa_register 7
 812 0006 7860     	 str r0,[r7,#4]
 813 0008 0B46     	 mov r3,r1
 814 000a FB70     	 strb r3,[r7,#3]
 234:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 235:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 815              	 .loc 2 235 6
 816 000c 7B68     	 ldr r3,[r7,#4]
 817 000e 0F4A     	 ldr r2,.L48
 818 0010 9342     	 cmp r3,r2
 819 0012 0AD1     	 bne .L45
 236:../Libraries/XMCLib/src/xmc_dma.c ****   {
 237:../Libraries/XMCLib/src/xmc_dma.c **** #else
 238:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 239:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 240:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 820              	 .loc 2 240 15
 821 0014 0E4B     	 ldr r3,.L48+4
 822 0016 1A69     	 ldr r2,[r3,#16]
 823              	 .loc 2 240 26
 824 0018 FB78     	 ldrb r3,[r7,#3]
 825 001a 0121     	 movs r1,#1
 826 001c 01FA03F3 	 lsl r3,r1,r3
 827              	 .loc 2 240 18
 828 0020 DB43     	 mvns r3,r3
 829              	 .loc 2 240 15
 830 0022 0B49     	 ldr r1,.L48+4
 831 0024 1340     	 ands r3,r3,r2
 832 0026 0B61     	 str r3,[r1,#16]
 241:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 242:../Libraries/XMCLib/src/xmc_dma.c ****   }
 243:../Libraries/XMCLib/src/xmc_dma.c ****   else
 244:../Libraries/XMCLib/src/xmc_dma.c ****   {
 245:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 246:../Libraries/XMCLib/src/xmc_dma.c ****   }
 247:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 248:../Libraries/XMCLib/src/xmc_dma.c **** }
 833              	 .loc 2 248 1
 834 0028 0AE0     	 b .L47
 835              	.L45:
 245:../Libraries/XMCLib/src/xmc_dma.c ****   }
 836              	 .loc 2 245 15
 837 002a 094B     	 ldr r3,.L48+4
 838 002c 1A69     	 ldr r2,[r3,#16]
 245:../Libraries/XMCLib/src/xmc_dma.c ****   }
 839              	 .loc 2 245 28
 840 002e FB78     	 ldrb r3,[r7,#3]
 841 0030 4FF48071 	 mov r1,#256
 842 0034 01FA03F3 	 lsl r3,r1,r3
 245:../Libraries/XMCLib/src/xmc_dma.c ****   }
 843              	 .loc 2 245 18
 844 0038 DB43     	 mvns r3,r3
 245:../Libraries/XMCLib/src/xmc_dma.c ****   }
 845              	 .loc 2 245 15
 846 003a 0549     	 ldr r1,.L48+4
 847 003c 1340     	 ands r3,r3,r2
 848 003e 0B61     	 str r3,[r1,#16]
 849              	.L47:
 850              	 .loc 2 248 1
 851 0040 00BF     	 nop
 852 0042 0C37     	 adds r7,r7,#12
 853              	.LCFI65:
 854              	 .cfi_def_cfa_offset 4
 855 0044 BD46     	 mov sp,r7
 856              	.LCFI66:
 857              	 .cfi_def_cfa_register 13
 858              	 
 859 0046 5DF8047B 	 ldr r7,[sp],#4
 860              	.LCFI67:
 861              	 .cfi_restore 7
 862              	 .cfi_def_cfa_offset 0
 863 004a 7047     	 bx lr
 864              	.L49:
 865              	 .align 2
 866              	.L48:
 867 004c 00400150 	 .word 1342259200
 868 0050 00490050 	 .word 1342195968
 869              	 .cfi_endproc
 870              	.LFE190:
 872              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 873              	 .align 1
 874              	 .global XMC_DMA_ClearRequestLine
 875              	 .syntax unified
 876              	 .thumb
 877              	 .thumb_func
 878              	 .fpu fpv4-sp-d16
 880              	XMC_DMA_ClearRequestLine:
 881              	.LFB191:
 249:../Libraries/XMCLib/src/xmc_dma.c **** 
 250:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 251:../Libraries/XMCLib/src/xmc_dma.c **** {
 882              	 .loc 2 251 1
 883              	 .cfi_startproc
 884              	 
 885              	 
 886              	 
 887 0000 80B4     	 push {r7}
 888              	.LCFI68:
 889              	 .cfi_def_cfa_offset 4
 890              	 .cfi_offset 7,-4
 891 0002 83B0     	 sub sp,sp,#12
 892              	.LCFI69:
 893              	 .cfi_def_cfa_offset 16
 894 0004 00AF     	 add r7,sp,#0
 895              	.LCFI70:
 896              	 .cfi_def_cfa_register 7
 897 0006 7860     	 str r0,[r7,#4]
 898 0008 0B46     	 mov r3,r1
 899 000a FB70     	 strb r3,[r7,#3]
 252:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 253:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 900              	 .loc 2 253 6
 901 000c 7B68     	 ldr r3,[r7,#4]
 902 000e 194A     	 ldr r2,.L54
 903 0010 9342     	 cmp r3,r2
 904 0012 13D1     	 bne .L51
 254:../Libraries/XMCLib/src/xmc_dma.c ****   {
 255:../Libraries/XMCLib/src/xmc_dma.c **** #else
 256:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 257:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 258:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 905              	 .loc 2 258 15
 906 0014 184B     	 ldr r3,.L54+4
 907 0016 1A69     	 ldr r2,[r3,#16]
 908              	 .loc 2 258 26
 909 0018 FB78     	 ldrb r3,[r7,#3]
 910 001a 0121     	 movs r1,#1
 911 001c 01FA03F3 	 lsl r3,r1,r3
 912              	 .loc 2 258 18
 913 0020 DB43     	 mvns r3,r3
 914              	 .loc 2 258 15
 915 0022 1549     	 ldr r1,.L54+4
 916 0024 1340     	 ands r3,r3,r2
 917 0026 0B61     	 str r3,[r1,#16]
 259:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x1UL << line;
 918              	 .loc 2 259 15
 919 0028 134B     	 ldr r3,.L54+4
 920 002a 1A69     	 ldr r2,[r3,#16]
 921              	 .loc 2 259 24
 922 002c FB78     	 ldrb r3,[r7,#3]
 923 002e 0121     	 movs r1,#1
 924 0030 01FA03F3 	 lsl r3,r1,r3
 925              	 .loc 2 259 15
 926 0034 1049     	 ldr r1,.L54+4
 927 0036 1343     	 orrs r3,r3,r2
 928 0038 0B61     	 str r3,[r1,#16]
 260:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 261:../Libraries/XMCLib/src/xmc_dma.c ****   }
 262:../Libraries/XMCLib/src/xmc_dma.c ****   else
 263:../Libraries/XMCLib/src/xmc_dma.c ****   {
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 265:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 266:../Libraries/XMCLib/src/xmc_dma.c ****   }
 267:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 268:../Libraries/XMCLib/src/xmc_dma.c **** }
 929              	 .loc 2 268 1
 930 003a 14E0     	 b .L53
 931              	.L51:
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 932              	 .loc 2 264 15
 933 003c 0E4B     	 ldr r3,.L54+4
 934 003e 1A69     	 ldr r2,[r3,#16]
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 935              	 .loc 2 264 28
 936 0040 FB78     	 ldrb r3,[r7,#3]
 937 0042 4FF48071 	 mov r1,#256
 938 0046 01FA03F3 	 lsl r3,r1,r3
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 939              	 .loc 2 264 18
 940 004a DB43     	 mvns r3,r3
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 941              	 .loc 2 264 15
 942 004c 0A49     	 ldr r1,.L54+4
 943 004e 1340     	 ands r3,r3,r2
 944 0050 0B61     	 str r3,[r1,#16]
 265:../Libraries/XMCLib/src/xmc_dma.c ****   }
 945              	 .loc 2 265 15
 946 0052 094B     	 ldr r3,.L54+4
 947 0054 1A69     	 ldr r2,[r3,#16]
 265:../Libraries/XMCLib/src/xmc_dma.c ****   }
 948              	 .loc 2 265 26
 949 0056 FB78     	 ldrb r3,[r7,#3]
 950 0058 4FF48071 	 mov r1,#256
 951 005c 01FA03F3 	 lsl r3,r1,r3
 265:../Libraries/XMCLib/src/xmc_dma.c ****   }
 952              	 .loc 2 265 15
 953 0060 0549     	 ldr r1,.L54+4
 954 0062 1343     	 orrs r3,r3,r2
 955 0064 0B61     	 str r3,[r1,#16]
 956              	.L53:
 957              	 .loc 2 268 1
 958 0066 00BF     	 nop
 959 0068 0C37     	 adds r7,r7,#12
 960              	.LCFI71:
 961              	 .cfi_def_cfa_offset 4
 962 006a BD46     	 mov sp,r7
 963              	.LCFI72:
 964              	 .cfi_def_cfa_register 13
 965              	 
 966 006c 5DF8047B 	 ldr r7,[sp],#4
 967              	.LCFI73:
 968              	 .cfi_restore 7
 969              	 .cfi_def_cfa_offset 0
 970 0070 7047     	 bx lr
 971              	.L55:
 972 0072 00BF     	 .align 2
 973              	.L54:
 974 0074 00400150 	 .word 1342259200
 975 0078 00490050 	 .word 1342195968
 976              	 .cfi_endproc
 977              	.LFE191:
 979              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 980              	 .align 1
 981              	 .global XMC_DMA_GetOverrunStatus
 982              	 .syntax unified
 983              	 .thumb
 984              	 .thumb_func
 985              	 .fpu fpv4-sp-d16
 987              	XMC_DMA_GetOverrunStatus:
 988              	.LFB192:
 269:../Libraries/XMCLib/src/xmc_dma.c **** 
 270:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 271:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 272:../Libraries/XMCLib/src/xmc_dma.c **** {
 989              	 .loc 2 272 1
 990              	 .cfi_startproc
 991              	 
 992              	 
 993              	 
 994 0000 80B4     	 push {r7}
 995              	.LCFI74:
 996              	 .cfi_def_cfa_offset 4
 997              	 .cfi_offset 7,-4
 998 0002 85B0     	 sub sp,sp,#20
 999              	.LCFI75:
 1000              	 .cfi_def_cfa_offset 24
 1001 0004 00AF     	 add r7,sp,#0
 1002              	.LCFI76:
 1003              	 .cfi_def_cfa_register 7
 1004 0006 7860     	 str r0,[r7,#4]
 1005 0008 0B46     	 mov r3,r1
 1006 000a FB70     	 strb r3,[r7,#3]
 273:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 274:../Libraries/XMCLib/src/xmc_dma.c **** 
 275:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 276:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 1007              	 .loc 2 276 6
 1008 000c 7B68     	 ldr r3,[r7,#4]
 1009 000e 124A     	 ldr r2,.L60
 1010 0010 9342     	 cmp r3,r2
 1011 0012 0CD1     	 bne .L57
 277:../Libraries/XMCLib/src/xmc_dma.c ****   {
 278:../Libraries/XMCLib/src/xmc_dma.c **** #else
 279:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 280:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 281:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 1012              	 .loc 2 281 24
 1013 0014 114B     	 ldr r3,.L60+4
 1014 0016 1A68     	 ldr r2,[r3]
 1015              	 .loc 2 281 14
 1016 0018 FB78     	 ldrb r3,[r7,#3]
 1017 001a 22FA03F3 	 lsr r3,r2,r3
 1018 001e 03F00103 	 and r3,r3,#1
 1019              	 .loc 2 281 12
 1020 0022 002B     	 cmp r3,#0
 1021 0024 14BF     	 ite ne
 1022 0026 0123     	 movne r3,#1
 1023 0028 0023     	 moveq r3,#0
 1024 002a FB73     	 strb r3,[r7,#15]
 1025 002c 0CE0     	 b .L58
 1026              	.L57:
 282:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 283:../Libraries/XMCLib/src/xmc_dma.c ****   }
 284:../Libraries/XMCLib/src/xmc_dma.c ****   else
 285:../Libraries/XMCLib/src/xmc_dma.c ****   {
 286:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 1027              	 .loc 2 286 24
 1028 002e 0B4B     	 ldr r3,.L60+4
 1029 0030 1A68     	 ldr r2,[r3]
 1030              	 .loc 2 286 45
 1031 0032 FB78     	 ldrb r3,[r7,#3]
 1032 0034 4FF48071 	 mov r1,#256
 1033 0038 01FA03F3 	 lsl r3,r1,r3
 1034              	 .loc 2 286 34
 1035 003c 1340     	 ands r3,r3,r2
 1036              	 .loc 2 286 12
 1037 003e 002B     	 cmp r3,#0
 1038 0040 14BF     	 ite ne
 1039 0042 0123     	 movne r3,#1
 1040 0044 0023     	 moveq r3,#0
 1041 0046 FB73     	 strb r3,[r7,#15]
 1042              	.L58:
 287:../Libraries/XMCLib/src/xmc_dma.c ****   }
 288:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 289:../Libraries/XMCLib/src/xmc_dma.c **** 
 290:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1043              	 .loc 2 290 10
 1044 0048 FB7B     	 ldrb r3,[r7,#15]
 291:../Libraries/XMCLib/src/xmc_dma.c **** }
 1045              	 .loc 2 291 1
 1046 004a 1846     	 mov r0,r3
 1047 004c 1437     	 adds r7,r7,#20
 1048              	.LCFI77:
 1049              	 .cfi_def_cfa_offset 4
 1050 004e BD46     	 mov sp,r7
 1051              	.LCFI78:
 1052              	 .cfi_def_cfa_register 13
 1053              	 
 1054 0050 5DF8047B 	 ldr r7,[sp],#4
 1055              	.LCFI79:
 1056              	 .cfi_restore 7
 1057              	 .cfi_def_cfa_offset 0
 1058 0054 7047     	 bx lr
 1059              	.L61:
 1060 0056 00BF     	 .align 2
 1061              	.L60:
 1062 0058 00400150 	 .word 1342259200
 1063 005c 00490050 	 .word 1342195968
 1064              	 .cfi_endproc
 1065              	.LFE192:
 1067              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 1068              	 .align 1
 1069              	 .global XMC_DMA_ClearOverrunStatus
 1070              	 .syntax unified
 1071              	 .thumb
 1072              	 .thumb_func
 1073              	 .fpu fpv4-sp-d16
 1075              	XMC_DMA_ClearOverrunStatus:
 1076              	.LFB193:
 292:../Libraries/XMCLib/src/xmc_dma.c **** 
 293:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 294:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 295:../Libraries/XMCLib/src/xmc_dma.c **** {
 1077              	 .loc 2 295 1
 1078              	 .cfi_startproc
 1079              	 
 1080              	 
 1081              	 
 1082 0000 80B4     	 push {r7}
 1083              	.LCFI80:
 1084              	 .cfi_def_cfa_offset 4
 1085              	 .cfi_offset 7,-4
 1086 0002 83B0     	 sub sp,sp,#12
 1087              	.LCFI81:
 1088              	 .cfi_def_cfa_offset 16
 1089 0004 00AF     	 add r7,sp,#0
 1090              	.LCFI82:
 1091              	 .cfi_def_cfa_register 7
 1092 0006 7860     	 str r0,[r7,#4]
 1093 0008 0B46     	 mov r3,r1
 1094 000a FB70     	 strb r3,[r7,#3]
 296:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 297:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 1095              	 .loc 2 297 6
 1096 000c 7B68     	 ldr r3,[r7,#4]
 1097 000e 0B4A     	 ldr r2,.L66
 1098 0010 9342     	 cmp r3,r2
 1099 0012 06D1     	 bne .L63
 298:../Libraries/XMCLib/src/xmc_dma.c ****   {
 299:../Libraries/XMCLib/src/xmc_dma.c **** #else
 300:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 301:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 302:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x1UL << line);
 1100              	 .loc 2 302 19
 1101 0014 FB78     	 ldrb r3,[r7,#3]
 1102              	 .loc 2 302 8
 1103 0016 0A4A     	 ldr r2,.L66+4
 1104              	 .loc 2 302 19
 1105 0018 0121     	 movs r1,#1
 1106 001a 01FA03F3 	 lsl r3,r1,r3
 1107              	 .loc 2 302 17
 1108 001e 5360     	 str r3,[r2,#4]
 303:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 304:../Libraries/XMCLib/src/xmc_dma.c ****   }
 305:../Libraries/XMCLib/src/xmc_dma.c ****   else
 306:../Libraries/XMCLib/src/xmc_dma.c ****   {
 307:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x100UL << line);
 308:../Libraries/XMCLib/src/xmc_dma.c ****   }
 309:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 310:../Libraries/XMCLib/src/xmc_dma.c **** }
 1109              	 .loc 2 310 1
 1110 0020 06E0     	 b .L65
 1111              	.L63:
 307:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1112              	 .loc 2 307 19
 1113 0022 FB78     	 ldrb r3,[r7,#3]
 307:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1114              	 .loc 2 307 8
 1115 0024 064A     	 ldr r2,.L66+4
 307:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1116              	 .loc 2 307 19
 1117 0026 4FF48071 	 mov r1,#256
 1118 002a 01FA03F3 	 lsl r3,r1,r3
 307:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1119              	 .loc 2 307 17
 1120 002e 5360     	 str r3,[r2,#4]
 1121              	.L65:
 1122              	 .loc 2 310 1
 1123 0030 00BF     	 nop
 1124 0032 0C37     	 adds r7,r7,#12
 1125              	.LCFI83:
 1126              	 .cfi_def_cfa_offset 4
 1127 0034 BD46     	 mov sp,r7
 1128              	.LCFI84:
 1129              	 .cfi_def_cfa_register 13
 1130              	 
 1131 0036 5DF8047B 	 ldr r7,[sp],#4
 1132              	.LCFI85:
 1133              	 .cfi_restore 7
 1134              	 .cfi_def_cfa_offset 0
 1135 003a 7047     	 bx lr
 1136              	.L67:
 1137              	 .align 2
 1138              	.L66:
 1139 003c 00400150 	 .word 1342259200
 1140 0040 00490050 	 .word 1342195968
 1141              	 .cfi_endproc
 1142              	.LFE193:
 1144              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 1145              	 .align 1
 1146              	 .global XMC_DMA_CH_Disable
 1147              	 .syntax unified
 1148              	 .thumb
 1149              	 .thumb_func
 1150              	 .fpu fpv4-sp-d16
 1152              	XMC_DMA_CH_Disable:
 1153              	.LFB194:
 311:../Libraries/XMCLib/src/xmc_dma.c **** 
 312:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 313:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 314:../Libraries/XMCLib/src/xmc_dma.c **** {
 1154              	 .loc 2 314 1
 1155              	 .cfi_startproc
 1156              	 
 1157              	 
 1158              	 
 1159 0000 80B4     	 push {r7}
 1160              	.LCFI86:
 1161              	 .cfi_def_cfa_offset 4
 1162              	 .cfi_offset 7,-4
 1163 0002 83B0     	 sub sp,sp,#12
 1164              	.LCFI87:
 1165              	 .cfi_def_cfa_offset 16
 1166 0004 00AF     	 add r7,sp,#0
 1167              	.LCFI88:
 1168              	 .cfi_def_cfa_register 7
 1169 0006 7860     	 str r0,[r7,#4]
 1170 0008 0B46     	 mov r3,r1
 1171 000a FB70     	 strb r3,[r7,#3]
 315:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 1172              	 .loc 2 315 18
 1173 000c FB78     	 ldrb r3,[r7,#3]
 1174 000e 4FF48072 	 mov r2,#256
 1175 0012 9A40     	 lsls r2,r2,r3
 1176              	 .loc 2 315 16
 1177 0014 7B68     	 ldr r3,[r7,#4]
 1178 0016 C3F8A023 	 str r2,[r3,#928]
 316:../Libraries/XMCLib/src/xmc_dma.c ****   while ((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 1179              	 .loc 2 316 9
 1180 001a 00BF     	 nop
 1181              	.L69:
 1182              	 .loc 2 316 14 discriminator 1
 1183 001c 7B68     	 ldr r3,[r7,#4]
 1184 001e D3F8A023 	 ldr r2,[r3,#928]
 1185              	 .loc 2 316 56 discriminator 1
 1186 0022 FB78     	 ldrb r3,[r7,#3]
 1187 0024 22FA03F3 	 lsr r3,r2,r3
 1188 0028 03F00103 	 and r3,r3,#1
 1189              	 .loc 2 316 9 discriminator 1
 1190 002c 002B     	 cmp r3,#0
 1191 002e F5D1     	 bne .L69
 317:../Libraries/XMCLib/src/xmc_dma.c ****   {
 318:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 319:../Libraries/XMCLib/src/xmc_dma.c ****   }
 320:../Libraries/XMCLib/src/xmc_dma.c **** }
 1192              	 .loc 2 320 1
 1193 0030 00BF     	 nop
 1194 0032 00BF     	 nop
 1195 0034 0C37     	 adds r7,r7,#12
 1196              	.LCFI89:
 1197              	 .cfi_def_cfa_offset 4
 1198 0036 BD46     	 mov sp,r7
 1199              	.LCFI90:
 1200              	 .cfi_def_cfa_register 13
 1201              	 
 1202 0038 5DF8047B 	 ldr r7,[sp],#4
 1203              	.LCFI91:
 1204              	 .cfi_restore 7
 1205              	 .cfi_def_cfa_offset 0
 1206 003c 7047     	 bx lr
 1207              	 .cfi_endproc
 1208              	.LFE194:
 1210              	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 1211              	 .align 1
 1212              	 .global XMC_DMA_CH_IsEnabled
 1213              	 .syntax unified
 1214              	 .thumb
 1215              	 .thumb_func
 1216              	 .fpu fpv4-sp-d16
 1218              	XMC_DMA_CH_IsEnabled:
 1219              	.LFB195:
 321:../Libraries/XMCLib/src/xmc_dma.c **** 
 322:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 323:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 324:../Libraries/XMCLib/src/xmc_dma.c **** {
 1220              	 .loc 2 324 1
 1221              	 .cfi_startproc
 1222              	 
 1223              	 
 1224              	 
 1225 0000 80B4     	 push {r7}
 1226              	.LCFI92:
 1227              	 .cfi_def_cfa_offset 4
 1228              	 .cfi_offset 7,-4
 1229 0002 83B0     	 sub sp,sp,#12
 1230              	.LCFI93:
 1231              	 .cfi_def_cfa_offset 16
 1232 0004 00AF     	 add r7,sp,#0
 1233              	.LCFI94:
 1234              	 .cfi_def_cfa_register 7
 1235 0006 7860     	 str r0,[r7,#4]
 1236 0008 0B46     	 mov r3,r1
 1237 000a FB70     	 strb r3,[r7,#3]
 325:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 1238              	 .loc 2 325 20
 1239 000c 7B68     	 ldr r3,[r7,#4]
 1240 000e D3F8A023 	 ldr r2,[r3,#928]
 1241              	 .loc 2 325 10
 1242 0012 FB78     	 ldrb r3,[r7,#3]
 1243 0014 22FA03F3 	 lsr r3,r2,r3
 1244 0018 03F00103 	 and r3,r3,#1
 1245 001c 002B     	 cmp r3,#0
 1246 001e 14BF     	 ite ne
 1247 0020 0123     	 movne r3,#1
 1248 0022 0023     	 moveq r3,#0
 1249 0024 DBB2     	 uxtb r3,r3
 326:../Libraries/XMCLib/src/xmc_dma.c **** }
 1250              	 .loc 2 326 1
 1251 0026 1846     	 mov r0,r3
 1252 0028 0C37     	 adds r7,r7,#12
 1253              	.LCFI95:
 1254              	 .cfi_def_cfa_offset 4
 1255 002a BD46     	 mov sp,r7
 1256              	.LCFI96:
 1257              	 .cfi_def_cfa_register 13
 1258              	 
 1259 002c 5DF8047B 	 ldr r7,[sp],#4
 1260              	.LCFI97:
 1261              	 .cfi_restore 7
 1262              	 .cfi_def_cfa_offset 0
 1263 0030 7047     	 bx lr
 1264              	 .cfi_endproc
 1265              	.LFE195:
 1267              	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 1268              	 .align 1
 1269              	 .global XMC_DMA_CH_Init
 1270              	 .syntax unified
 1271              	 .thumb
 1272              	 .thumb_func
 1273              	 .fpu fpv4-sp-d16
 1275              	XMC_DMA_CH_Init:
 1276              	.LFB196:
 327:../Libraries/XMCLib/src/xmc_dma.c **** 
 328:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 329:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 330:../Libraries/XMCLib/src/xmc_dma.c **** {
 1277              	 .loc 2 330 1
 1278              	 .cfi_startproc
 1279              	 
 1280              	 
 1281 0000 80B5     	 push {r7,lr}
 1282              	.LCFI98:
 1283              	 .cfi_def_cfa_offset 8
 1284              	 .cfi_offset 7,-8
 1285              	 .cfi_offset 14,-4
 1286 0002 86B0     	 sub sp,sp,#24
 1287              	.LCFI99:
 1288              	 .cfi_def_cfa_offset 32
 1289 0004 00AF     	 add r7,sp,#0
 1290              	.LCFI100:
 1291              	 .cfi_def_cfa_register 7
 1292 0006 F860     	 str r0,[r7,#12]
 1293 0008 0B46     	 mov r3,r1
 1294 000a 7A60     	 str r2,[r7,#4]
 1295 000c FB72     	 strb r3,[r7,#11]
 331:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 332:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 333:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 334:../Libraries/XMCLib/src/xmc_dma.c **** 
 335:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 1296              	 .loc 2 335 7
 1297 000e F868     	 ldr r0,[r7,#12]
 1298 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 1299 0014 0346     	 mov r3,r0
 1300              	 .loc 2 335 6
 1301 0016 002B     	 cmp r3,#0
 1302 0018 00F0EF81 	 beq .L73
 336:../Libraries/XMCLib/src/xmc_dma.c ****   {
 337:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 1303              	 .loc 2 337 9
 1304 001c FB7A     	 ldrb r3,[r7,#11]
 1305 001e 1946     	 mov r1,r3
 1306 0020 F868     	 ldr r0,[r7,#12]
 1307 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 1308 0026 0346     	 mov r3,r0
 1309              	 .loc 2 337 44
 1310 0028 83F00103 	 eor r3,r3,#1
 1311 002c DBB2     	 uxtb r3,r3
 1312              	 .loc 2 337 8
 1313 002e 002B     	 cmp r3,#0
 1314 0030 00F0E081 	 beq .L74
 338:../Libraries/XMCLib/src/xmc_dma.c ****     {
 339:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 1315              	 .loc 2 339 23
 1316 0034 FB7A     	 ldrb r3,[r7,#11]
 1317              	 .loc 2 339 36
 1318 0036 7A68     	 ldr r2,[r7,#4]
 1319 0038 5268     	 ldr r2,[r2,#4]
 1320              	 .loc 2 339 28
 1321 003a F968     	 ldr r1,[r7,#12]
 1322 003c 5820     	 movs r0,#88
 1323 003e 00FB03F3 	 mul r3,r0,r3
 1324 0042 0B44     	 add r3,r3,r1
 1325 0044 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1326              	 .loc 2 340 23
 1327 0046 FB7A     	 ldrb r3,[r7,#11]
 1328              	 .loc 2 340 36
 1329 0048 7A68     	 ldr r2,[r7,#4]
 1330 004a 9268     	 ldr r2,[r2,#8]
 1331              	 .loc 2 340 28
 1332 004c F968     	 ldr r1,[r7,#12]
 1333 004e 5820     	 movs r0,#88
 1334 0050 00FB03F3 	 mul r3,r0,r3
 1335 0054 0B44     	 add r3,r3,r1
 1336 0056 0833     	 adds r3,r3,#8
 1337 0058 1A60     	 str r2,[r3]
 341:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1338              	 .loc 2 341 46
 1339 005a 7B68     	 ldr r3,[r7,#4]
 1340 005c DA68     	 ldr r2,[r3,#12]
 1341              	 .loc 2 341 23
 1342 005e FB7A     	 ldrb r3,[r7,#11]
 1343              	 .loc 2 341 30
 1344 0060 1046     	 mov r0,r2
 1345              	 .loc 2 341 28
 1346 0062 FA68     	 ldr r2,[r7,#12]
 1347 0064 5821     	 movs r1,#88
 1348 0066 01FB03F3 	 mul r3,r1,r3
 1349 006a 1344     	 add r3,r3,r2
 1350 006c 1033     	 adds r3,r3,#16
 1351 006e 1860     	 str r0,[r3]
 342:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1352              	 .loc 2 342 47
 1353 0070 7B68     	 ldr r3,[r7,#4]
 1354 0072 1A8B     	 ldrh r2,[r3,#24]
 1355              	 .loc 2 342 23
 1356 0074 FB7A     	 ldrb r3,[r7,#11]
 1357              	 .loc 2 342 31
 1358 0076 1046     	 mov r0,r2
 1359              	 .loc 2 342 29
 1360 0078 FA68     	 ldr r2,[r7,#12]
 1361 007a 5821     	 movs r1,#88
 1362 007c 01FB03F3 	 mul r3,r1,r3
 1363 0080 1344     	 add r3,r3,r2
 1364 0082 1C33     	 adds r3,r3,#28
 1365 0084 1860     	 str r0,[r3]
 343:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1366              	 .loc 2 343 23
 1367 0086 FB7A     	 ldrb r3,[r7,#11]
 1368              	 .loc 2 343 37
 1369 0088 7A68     	 ldr r2,[r7,#4]
 1370 008a 1268     	 ldr r2,[r2]
 1371              	 .loc 2 343 29
 1372 008c F968     	 ldr r1,[r7,#12]
 1373 008e 5820     	 movs r0,#88
 1374 0090 00FB03F3 	 mul r3,r0,r3
 1375 0094 0B44     	 add r3,r3,r1
 1376 0096 1833     	 adds r3,r3,#24
 1377 0098 1A60     	 str r2,[r3]
 344:../Libraries/XMCLib/src/xmc_dma.c **** 
 345:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1378              	 .loc 2 345 58
 1379 009a 7B68     	 ldr r3,[r7,#4]
 1380 009c DB7E     	 ldrb r3,[r3,#27]
 1381              	 .loc 2 345 42
 1382 009e 1A46     	 mov r2,r3
 1383              	 .loc 2 345 23
 1384 00a0 FB7A     	 ldrb r3,[r7,#11]
 1385              	 .loc 2 345 31
 1386 00a2 42F44062 	 orr r2,r2,#3072
 1387              	 .loc 2 345 29
 1388 00a6 F968     	 ldr r1,[r7,#12]
 1389 00a8 5820     	 movs r0,#88
 1390 00aa 00FB03F3 	 mul r3,r0,r3
 1391 00ae 0B44     	 add r3,r3,r1
 1392 00b0 4033     	 adds r3,r3,#64
 1393 00b2 1A60     	 str r2,[r3]
 346:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 347:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 348:../Libraries/XMCLib/src/xmc_dma.c **** 
 349:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1394              	 .loc 2 349 10
 1395 00b4 FB68     	 ldr r3,[r7,#12]
 1396 00b6 B04A     	 ldr r2,.L99
 1397 00b8 9342     	 cmp r3,r2
 1398 00ba 16D1     	 bne .L75
 1399              	 .loc 2 349 29 discriminator 1
 1400 00bc FB7A     	 ldrb r3,[r7,#11]
 1401 00be 012B     	 cmp r3,#1
 1402 00c0 13D8     	 bhi .L75
 350:../Libraries/XMCLib/src/xmc_dma.c ****       {
 351:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 352:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1403              	 .loc 2 352 25
 1404 00c2 FB7A     	 ldrb r3,[r7,#11]
 1405              	 .loc 2 352 38
 1406 00c4 7A68     	 ldr r2,[r7,#4]
 1407 00c6 1269     	 ldr r2,[r2,#16]
 1408              	 .loc 2 352 30
 1409 00c8 F968     	 ldr r1,[r7,#12]
 1410 00ca 5820     	 movs r0,#88
 1411 00cc 00FB03F3 	 mul r3,r0,r3
 1412 00d0 0B44     	 add r3,r3,r1
 1413 00d2 4833     	 adds r3,r3,#72
 1414 00d4 1A60     	 str r2,[r3]
 353:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1415              	 .loc 2 353 25
 1416 00d6 FB7A     	 ldrb r3,[r7,#11]
 1417              	 .loc 2 353 38
 1418 00d8 7A68     	 ldr r2,[r7,#4]
 1419 00da 5269     	 ldr r2,[r2,#20]
 1420              	 .loc 2 353 30
 1421 00dc F968     	 ldr r1,[r7,#12]
 1422 00de 5820     	 movs r0,#88
 1423 00e0 00FB03F3 	 mul r3,r0,r3
 1424 00e4 0B44     	 add r3,r3,r1
 1425 00e6 5033     	 adds r3,r3,#80
 1426 00e8 1A60     	 str r2,[r3]
 1427              	.L75:
 354:../Libraries/XMCLib/src/xmc_dma.c ****       }
 355:../Libraries/XMCLib/src/xmc_dma.c **** 
 356:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1428              	 .loc 2 356 17
 1429 00ea 7B68     	 ldr r3,[r7,#4]
 1430 00ec 1B8C     	 ldrh r3,[r3,#32]
 1431              	 .loc 2 356 10
 1432 00ee 002B     	 cmp r3,#0
 1433 00f0 4ED1     	 bne .L76
 357:../Libraries/XMCLib/src/xmc_dma.c ****       {
 358:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 359:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1434              	 .loc 2 359 36
 1435 00f2 7B68     	 ldr r3,[r7,#4]
 1436 00f4 9B78     	 ldrb r3,[r3,#2]
 1437 00f6 03F07003 	 and r3,r3,#112
 1438 00fa DBB2     	 uxtb r3,r3
 1439              	 .loc 2 359 12
 1440 00fc 102B     	 cmp r3,#16
 1441 00fe 06D0     	 beq .L77
 360:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1442              	 .loc 2 360 36 discriminator 1
 1443 0100 7B68     	 ldr r3,[r7,#4]
 1444 0102 9B78     	 ldrb r3,[r3,#2]
 1445 0104 03F07003 	 and r3,r3,#112
 1446 0108 DBB2     	 uxtb r3,r3
 359:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1447              	 .loc 2 359 83 discriminator 1
 1448 010a 302B     	 cmp r3,#48
 1449 010c 40D1     	 bne .L76
 1450              	.L77:
 361:../Libraries/XMCLib/src/xmc_dma.c ****         {
 362:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 363:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1451              	 .loc 2 363 14
 1452 010e FB68     	 ldr r3,[r7,#12]
 1453 0110 994A     	 ldr r2,.L99
 1454 0112 9342     	 cmp r3,r2
 1455 0114 06D1     	 bne .L78
 364:../Libraries/XMCLib/src/xmc_dma.c ****           {
 365:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 366:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1456              	 .loc 2 366 26
 1457 0116 7B68     	 ldr r3,[r7,#4]
 1458 0118 93F82230 	 ldrb r3,[r3,#34]
 1459              	 .loc 2 366 18
 1460 011c 03F00703 	 and r3,r3,#7
 1461 0120 BB75     	 strb r3,[r7,#22]
 1462 0122 05E0     	 b .L79
 1463              	.L78:
 367:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 368:../Libraries/XMCLib/src/xmc_dma.c ****           }
 369:../Libraries/XMCLib/src/xmc_dma.c ****           else
 370:../Libraries/XMCLib/src/xmc_dma.c ****           {
 371:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1464              	 .loc 2 371 26
 1465 0124 7B68     	 ldr r3,[r7,#4]
 1466 0126 93F82230 	 ldrb r3,[r3,#34]
 1467              	 .loc 2 371 18
 1468 012a 03F00303 	 and r3,r3,#3
 1469 012e BB75     	 strb r3,[r7,#22]
 1470              	.L79:
 372:../Libraries/XMCLib/src/xmc_dma.c ****           }
 373:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 374:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1471              	 .loc 2 374 30
 1472 0130 7B68     	 ldr r3,[r7,#4]
 1473 0132 93F82230 	 ldrb r3,[r3,#34]
 1474              	 .loc 2 374 22
 1475 0136 1B09     	 lsrs r3,r3,#4
 1476 0138 7B75     	 strb r3,[r7,#21]
 375:../Libraries/XMCLib/src/xmc_dma.c **** 
 376:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1477              	 .loc 2 376 33
 1478 013a FB7A     	 ldrb r3,[r7,#11]
 1479 013c FA68     	 ldr r2,[r7,#12]
 1480 013e 5821     	 movs r1,#88
 1481 0140 01FB03F3 	 mul r3,r1,r3
 1482 0144 1344     	 add r3,r3,r2
 1483 0146 4433     	 adds r3,r3,#68
 1484 0148 1968     	 ldr r1,[r3]
 1485              	 .loc 2 376 47
 1486 014a BB7D     	 ldrb r3,[r7,#22]
 1487              	 .loc 2 376 36
 1488 014c DA02     	 lsls r2,r3,#11
 1489              	 .loc 2 376 33
 1490 014e FB7A     	 ldrb r3,[r7,#11]
 1491 0150 0A43     	 orrs r2,r2,r1
 1492 0152 F968     	 ldr r1,[r7,#12]
 1493 0154 5820     	 movs r0,#88
 1494 0156 00FB03F3 	 mul r3,r0,r3
 1495 015a 0B44     	 add r3,r3,r1
 1496 015c 4433     	 adds r3,r3,#68
 1497 015e 1A60     	 str r2,[r3]
 377:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1498              	 .loc 2 377 11
 1499 0160 7A7D     	 ldrb r2,[r7,#21]
 1500 0162 BB7D     	 ldrb r3,[r7,#22]
 1501 0164 1946     	 mov r1,r3
 1502 0166 F868     	 ldr r0,[r7,#12]
 1503 0168 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 378:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1504              	 .loc 2 378 33
 1505 016c FB7A     	 ldrb r3,[r7,#11]
 1506 016e FA68     	 ldr r2,[r7,#12]
 1507 0170 5821     	 movs r1,#88
 1508 0172 01FB03F3 	 mul r3,r1,r3
 1509 0176 1344     	 add r3,r3,r2
 1510 0178 4033     	 adds r3,r3,#64
 1511 017a 1A68     	 ldr r2,[r3]
 1512 017c FB7A     	 ldrb r3,[r7,#11]
 1513 017e 22F48062 	 bic r2,r2,#1024
 1514 0182 F968     	 ldr r1,[r7,#12]
 1515 0184 5820     	 movs r0,#88
 1516 0186 00FB03F3 	 mul r3,r0,r3
 1517 018a 0B44     	 add r3,r3,r1
 1518 018c 4033     	 adds r3,r3,#64
 1519 018e 1A60     	 str r2,[r3]
 1520              	.L76:
 379:../Libraries/XMCLib/src/xmc_dma.c ****         }
 380:../Libraries/XMCLib/src/xmc_dma.c ****       }
 381:../Libraries/XMCLib/src/xmc_dma.c **** 
 382:../Libraries/XMCLib/src/xmc_dma.c **** 
 383:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1521              	 .loc 2 383 17
 1522 0190 7B68     	 ldr r3,[r7,#4]
 1523 0192 9B8B     	 ldrh r3,[r3,#28]
 1524              	 .loc 2 383 10
 1525 0194 002B     	 cmp r3,#0
 1526 0196 4BD1     	 bne .L80
 384:../Libraries/XMCLib/src/xmc_dma.c ****       {
 385:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1527              	 .loc 2 385 36
 1528 0198 7B68     	 ldr r3,[r7,#4]
 1529 019a 9B78     	 ldrb r3,[r3,#2]
 1530 019c 03F07003 	 and r3,r3,#112
 1531 01a0 DBB2     	 uxtb r3,r3
 1532              	 .loc 2 385 12
 1533 01a2 202B     	 cmp r3,#32
 1534 01a4 06D0     	 beq .L81
 386:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1535              	 .loc 2 386 36 discriminator 1
 1536 01a6 7B68     	 ldr r3,[r7,#4]
 1537 01a8 9B78     	 ldrb r3,[r3,#2]
 1538 01aa 03F07003 	 and r3,r3,#112
 1539 01ae DBB2     	 uxtb r3,r3
 385:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1540              	 .loc 2 385 83 discriminator 1
 1541 01b0 302B     	 cmp r3,#48
 1542 01b2 3DD1     	 bne .L80
 1543              	.L81:
 387:../Libraries/XMCLib/src/xmc_dma.c ****         {
 388:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 389:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1544              	 .loc 2 389 14
 1545 01b4 FB68     	 ldr r3,[r7,#12]
 1546 01b6 704A     	 ldr r2,.L99
 1547 01b8 9342     	 cmp r3,r2
 1548 01ba 05D1     	 bne .L82
 390:../Libraries/XMCLib/src/xmc_dma.c ****           {
 391:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 392:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1549              	 .loc 2 392 26
 1550 01bc 7B68     	 ldr r3,[r7,#4]
 1551 01be 9B7F     	 ldrb r3,[r3,#30]
 1552              	 .loc 2 392 18
 1553 01c0 03F00703 	 and r3,r3,#7
 1554 01c4 BB75     	 strb r3,[r7,#22]
 1555 01c6 04E0     	 b .L83
 1556              	.L82:
 393:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 394:../Libraries/XMCLib/src/xmc_dma.c ****           }
 395:../Libraries/XMCLib/src/xmc_dma.c ****           else
 396:../Libraries/XMCLib/src/xmc_dma.c ****           {
 397:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1557              	 .loc 2 397 26
 1558 01c8 7B68     	 ldr r3,[r7,#4]
 1559 01ca 9B7F     	 ldrb r3,[r3,#30]
 1560              	 .loc 2 397 18
 1561 01cc 03F00303 	 and r3,r3,#3
 1562 01d0 BB75     	 strb r3,[r7,#22]
 1563              	.L83:
 398:../Libraries/XMCLib/src/xmc_dma.c ****           }
 399:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 400:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1564              	 .loc 2 400 30
 1565 01d2 7B68     	 ldr r3,[r7,#4]
 1566 01d4 9B7F     	 ldrb r3,[r3,#30]
 1567              	 .loc 2 400 22
 1568 01d6 1B09     	 lsrs r3,r3,#4
 1569 01d8 7B75     	 strb r3,[r7,#21]
 401:../Libraries/XMCLib/src/xmc_dma.c **** 
 402:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1570              	 .loc 2 402 33
 1571 01da FB7A     	 ldrb r3,[r7,#11]
 1572 01dc FA68     	 ldr r2,[r7,#12]
 1573 01de 5821     	 movs r1,#88
 1574 01e0 01FB03F3 	 mul r3,r1,r3
 1575 01e4 1344     	 add r3,r3,r2
 1576 01e6 4433     	 adds r3,r3,#68
 1577 01e8 1968     	 ldr r1,[r3]
 1578              	 .loc 2 402 47
 1579 01ea BB7D     	 ldrb r3,[r7,#22]
 1580              	 .loc 2 402 36
 1581 01ec DA01     	 lsls r2,r3,#7
 1582              	 .loc 2 402 33
 1583 01ee FB7A     	 ldrb r3,[r7,#11]
 1584 01f0 0A43     	 orrs r2,r2,r1
 1585 01f2 F968     	 ldr r1,[r7,#12]
 1586 01f4 5820     	 movs r0,#88
 1587 01f6 00FB03F3 	 mul r3,r0,r3
 1588 01fa 0B44     	 add r3,r3,r1
 1589 01fc 4433     	 adds r3,r3,#68
 1590 01fe 1A60     	 str r2,[r3]
 403:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1591              	 .loc 2 403 11
 1592 0200 7A7D     	 ldrb r2,[r7,#21]
 1593 0202 BB7D     	 ldrb r3,[r7,#22]
 1594 0204 1946     	 mov r1,r3
 1595 0206 F868     	 ldr r0,[r7,#12]
 1596 0208 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 404:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1597              	 .loc 2 404 33
 1598 020c FB7A     	 ldrb r3,[r7,#11]
 1599 020e FA68     	 ldr r2,[r7,#12]
 1600 0210 5821     	 movs r1,#88
 1601 0212 01FB03F3 	 mul r3,r1,r3
 1602 0216 1344     	 add r3,r3,r2
 1603 0218 4033     	 adds r3,r3,#64
 1604 021a 1A68     	 ldr r2,[r3]
 1605 021c FB7A     	 ldrb r3,[r7,#11]
 1606 021e 22F40062 	 bic r2,r2,#2048
 1607 0222 F968     	 ldr r1,[r7,#12]
 1608 0224 5820     	 movs r0,#88
 1609 0226 00FB03F3 	 mul r3,r0,r3
 1610 022a 0B44     	 add r3,r3,r1
 1611 022c 4033     	 adds r3,r3,#64
 1612 022e 1A60     	 str r2,[r3]
 1613              	.L80:
 405:../Libraries/XMCLib/src/xmc_dma.c ****         }
 406:../Libraries/XMCLib/src/xmc_dma.c ****       }
 407:../Libraries/XMCLib/src/xmc_dma.c **** 
 408:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1614              	 .loc 2 408 7
 1615 0230 FB7A     	 ldrb r3,[r7,#11]
 1616 0232 1F22     	 movs r2,#31
 1617 0234 1946     	 mov r1,r3
 1618 0236 F868     	 ldr r0,[r7,#12]
 1619 0238 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 409:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 410:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 411:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE |
 412:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 413:../Libraries/XMCLib/src/xmc_dma.c **** 
 414:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1620              	 .loc 2 414 21
 1621 023c 7B68     	 ldr r3,[r7,#4]
 1622 023e 9B7E     	 ldrb r3,[r3,#26]
 1623 0240 082B     	 cmp r3,#8
 1624 0242 00F2D380 	 bhi .L98
 1625 0246 01A2     	 adr r2,.L86
 1626 0248 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1627              	 .p2align 2
 1628              	.L86:
 1629 024c ED030000 	 .word .L98+1
 1630 0250 71020000 	 .word .L93+1
 1631 0254 97020000 	 .word .L92+1
 1632 0258 BD020000 	 .word .L91+1
 1633 025c E3020000 	 .word .L90+1
 1634 0260 09030000 	 .word .L89+1
 1635 0264 53030000 	 .word .L88+1
 1636 0268 7D030000 	 .word .L87+1
 1637 026c C7030000 	 .word .L85+1
 1638              	 .p2align 1
 1639              	.L93:
 415:../Libraries/XMCLib/src/xmc_dma.c ****       {
 416:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 417:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 418:../Libraries/XMCLib/src/xmc_dma.c **** 
 419:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 420:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1640              	 .loc 2 420 33
 1641 0270 FB7A     	 ldrb r3,[r7,#11]
 1642 0272 FA68     	 ldr r2,[r7,#12]
 1643 0274 5821     	 movs r1,#88
 1644 0276 01FB03F3 	 mul r3,r1,r3
 1645 027a 1344     	 add r3,r3,r2
 1646 027c 4033     	 adds r3,r3,#64
 1647 027e 1A68     	 ldr r2,[r3]
 1648 0280 FB7A     	 ldrb r3,[r7,#11]
 1649 0282 42F00042 	 orr r2,r2,#-2147483648
 1650 0286 F968     	 ldr r1,[r7,#12]
 1651 0288 5820     	 movs r0,#88
 1652 028a 00FB03F3 	 mul r3,r0,r3
 1653 028e 0B44     	 add r3,r3,r1
 1654 0290 4033     	 adds r3,r3,#64
 1655 0292 1A60     	 str r2,[r3]
 421:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1656              	 .loc 2 421 11
 1657 0294 ABE0     	 b .L95
 1658              	.L92:
 422:../Libraries/XMCLib/src/xmc_dma.c **** 
 423:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 424:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1659              	 .loc 2 424 33
 1660 0296 FB7A     	 ldrb r3,[r7,#11]
 1661 0298 FA68     	 ldr r2,[r7,#12]
 1662 029a 5821     	 movs r1,#88
 1663 029c 01FB03F3 	 mul r3,r1,r3
 1664 02a0 1344     	 add r3,r3,r2
 1665 02a2 4033     	 adds r3,r3,#64
 1666 02a4 1A68     	 ldr r2,[r3]
 1667 02a6 FB7A     	 ldrb r3,[r7,#11]
 1668 02a8 42F08042 	 orr r2,r2,#1073741824
 1669 02ac F968     	 ldr r1,[r7,#12]
 1670 02ae 5820     	 movs r0,#88
 1671 02b0 00FB03F3 	 mul r3,r0,r3
 1672 02b4 0B44     	 add r3,r3,r1
 1673 02b6 4033     	 adds r3,r3,#64
 1674 02b8 1A60     	 str r2,[r3]
 425:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1675              	 .loc 2 425 11
 1676 02ba 98E0     	 b .L95
 1677              	.L91:
 426:../Libraries/XMCLib/src/xmc_dma.c **** 
 427:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 428:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1678              	 .loc 2 428 33
 1679 02bc FB7A     	 ldrb r3,[r7,#11]
 1680 02be FA68     	 ldr r2,[r7,#12]
 1681 02c0 5821     	 movs r1,#88
 1682 02c2 01FB03F3 	 mul r3,r1,r3
 1683 02c6 1344     	 add r3,r3,r2
 1684 02c8 4033     	 adds r3,r3,#64
 1685 02ca 1A68     	 ldr r2,[r3]
 1686 02cc FB7A     	 ldrb r3,[r7,#11]
 1687 02ce 42F04042 	 orr r2,r2,#-1073741824
 1688 02d2 F968     	 ldr r1,[r7,#12]
 1689 02d4 5820     	 movs r0,#88
 1690 02d6 00FB03F3 	 mul r3,r0,r3
 1691 02da 0B44     	 add r3,r3,r1
 1692 02dc 4033     	 adds r3,r3,#64
 1693 02de 1A60     	 str r2,[r3]
 429:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 430:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1694              	 .loc 2 430 11
 1695 02e0 85E0     	 b .L95
 1696              	.L90:
 431:../Libraries/XMCLib/src/xmc_dma.c **** 
 432:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 433:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1697              	 .loc 2 433 33
 1698 02e2 FB7A     	 ldrb r3,[r7,#11]
 1699 02e4 FA68     	 ldr r2,[r7,#12]
 1700 02e6 5821     	 movs r1,#88
 1701 02e8 01FB03F3 	 mul r3,r1,r3
 1702 02ec 1344     	 add r3,r3,r2
 1703 02ee 1833     	 adds r3,r3,#24
 1704 02f0 1A68     	 ldr r2,[r3]
 1705 02f2 FB7A     	 ldrb r3,[r7,#11]
 1706 02f4 42F00062 	 orr r2,r2,#134217728
 1707 02f8 F968     	 ldr r1,[r7,#12]
 1708 02fa 5820     	 movs r0,#88
 1709 02fc 00FB03F3 	 mul r3,r0,r3
 1710 0300 0B44     	 add r3,r3,r1
 1711 0302 1833     	 adds r3,r3,#24
 1712 0304 1A60     	 str r2,[r3]
 434:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1713              	 .loc 2 434 11
 1714 0306 72E0     	 b .L95
 1715              	.L89:
 435:../Libraries/XMCLib/src/xmc_dma.c **** 
 436:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 437:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1716              	 .loc 2 437 33
 1717 0308 FB7A     	 ldrb r3,[r7,#11]
 1718 030a FA68     	 ldr r2,[r7,#12]
 1719 030c 5821     	 movs r1,#88
 1720 030e 01FB03F3 	 mul r3,r1,r3
 1721 0312 1344     	 add r3,r3,r2
 1722 0314 4033     	 adds r3,r3,#64
 1723 0316 1A68     	 ldr r2,[r3]
 1724 0318 FB7A     	 ldrb r3,[r7,#11]
 1725 031a 42F08042 	 orr r2,r2,#1073741824
 1726 031e F968     	 ldr r1,[r7,#12]
 1727 0320 5820     	 movs r0,#88
 1728 0322 00FB03F3 	 mul r3,r0,r3
 1729 0326 0B44     	 add r3,r3,r1
 1730 0328 4033     	 adds r3,r3,#64
 1731 032a 1A60     	 str r2,[r3]
 438:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1732              	 .loc 2 438 33
 1733 032c FB7A     	 ldrb r3,[r7,#11]
 1734 032e FA68     	 ldr r2,[r7,#12]
 1735 0330 5821     	 movs r1,#88
 1736 0332 01FB03F3 	 mul r3,r1,r3
 1737 0336 1344     	 add r3,r3,r2
 1738 0338 1833     	 adds r3,r3,#24
 1739 033a 1A68     	 ldr r2,[r3]
 1740 033c FB7A     	 ldrb r3,[r7,#11]
 1741 033e 42F00062 	 orr r2,r2,#134217728
 1742 0342 F968     	 ldr r1,[r7,#12]
 1743 0344 5820     	 movs r0,#88
 1744 0346 00FB03F3 	 mul r3,r0,r3
 1745 034a 0B44     	 add r3,r3,r1
 1746 034c 1833     	 adds r3,r3,#24
 1747 034e 1A60     	 str r2,[r3]
 439:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1748              	 .loc 2 439 11
 1749 0350 4DE0     	 b .L95
 1750              	.L88:
 440:../Libraries/XMCLib/src/xmc_dma.c **** 
 441:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 442:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1751              	 .loc 2 442 33
 1752 0352 FB7A     	 ldrb r3,[r7,#11]
 1753 0354 FA68     	 ldr r2,[r7,#12]
 1754 0356 5821     	 movs r1,#88
 1755 0358 01FB03F3 	 mul r3,r1,r3
 1756 035c 1344     	 add r3,r3,r2
 1757 035e 1833     	 adds r3,r3,#24
 1758 0360 1A68     	 ldr r2,[r3]
 1759 0362 FB7A     	 ldrb r3,[r7,#11]
 1760 0364 42F08052 	 orr r2,r2,#268435456
 1761 0368 F968     	 ldr r1,[r7,#12]
 1762 036a 5820     	 movs r0,#88
 1763 036c 00FB03F3 	 mul r3,r0,r3
 1764 0370 0B44     	 add r3,r3,r1
 1765 0372 1833     	 adds r3,r3,#24
 1766 0374 1A60     	 str r2,[r3]
 443:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1767              	 .loc 2 443 11
 1768 0376 3AE0     	 b .L95
 1769              	.L100:
 1770              	 .align 2
 1771              	.L99:
 1772 0378 00400150 	 .word 1342259200
 1773              	.L87:
 444:../Libraries/XMCLib/src/xmc_dma.c **** 
 445:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 446:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1774              	 .loc 2 446 33
 1775 037c FB7A     	 ldrb r3,[r7,#11]
 1776 037e FA68     	 ldr r2,[r7,#12]
 1777 0380 5821     	 movs r1,#88
 1778 0382 01FB03F3 	 mul r3,r1,r3
 1779 0386 1344     	 add r3,r3,r2
 1780 0388 4033     	 adds r3,r3,#64
 1781 038a 1A68     	 ldr r2,[r3]
 1782 038c FB7A     	 ldrb r3,[r7,#11]
 1783 038e 42F00042 	 orr r2,r2,#-2147483648
 1784 0392 F968     	 ldr r1,[r7,#12]
 1785 0394 5820     	 movs r0,#88
 1786 0396 00FB03F3 	 mul r3,r0,r3
 1787 039a 0B44     	 add r3,r3,r1
 1788 039c 4033     	 adds r3,r3,#64
 1789 039e 1A60     	 str r2,[r3]
 447:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1790              	 .loc 2 447 33
 1791 03a0 FB7A     	 ldrb r3,[r7,#11]
 1792 03a2 FA68     	 ldr r2,[r7,#12]
 1793 03a4 5821     	 movs r1,#88
 1794 03a6 01FB03F3 	 mul r3,r1,r3
 1795 03aa 1344     	 add r3,r3,r2
 1796 03ac 1833     	 adds r3,r3,#24
 1797 03ae 1A68     	 ldr r2,[r3]
 1798 03b0 FB7A     	 ldrb r3,[r7,#11]
 1799 03b2 42F08052 	 orr r2,r2,#268435456
 1800 03b6 F968     	 ldr r1,[r7,#12]
 1801 03b8 5820     	 movs r0,#88
 1802 03ba 00FB03F3 	 mul r3,r0,r3
 1803 03be 0B44     	 add r3,r3,r1
 1804 03c0 1833     	 adds r3,r3,#24
 1805 03c2 1A60     	 str r2,[r3]
 448:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1806              	 .loc 2 448 11
 1807 03c4 13E0     	 b .L95
 1808              	.L85:
 449:../Libraries/XMCLib/src/xmc_dma.c **** 
 450:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 451:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1809              	 .loc 2 451 33
 1810 03c6 FB7A     	 ldrb r3,[r7,#11]
 1811 03c8 FA68     	 ldr r2,[r7,#12]
 1812 03ca 5821     	 movs r1,#88
 1813 03cc 01FB03F3 	 mul r3,r1,r3
 1814 03d0 1344     	 add r3,r3,r2
 1815 03d2 1833     	 adds r3,r3,#24
 1816 03d4 1A68     	 ldr r2,[r3]
 1817 03d6 FB7A     	 ldrb r3,[r7,#11]
 1818 03d8 42F0C052 	 orr r2,r2,#402653184
 1819 03dc F968     	 ldr r1,[r7,#12]
 1820 03de 5820     	 movs r0,#88
 1821 03e0 00FB03F3 	 mul r3,r0,r3
 1822 03e4 0B44     	 add r3,r3,r1
 1823 03e6 1833     	 adds r3,r3,#24
 1824 03e8 1A60     	 str r2,[r3]
 452:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 453:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1825              	 .loc 2 453 11
 1826 03ea 00E0     	 b .L95
 1827              	.L98:
 454:../Libraries/XMCLib/src/xmc_dma.c **** 
 455:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 456:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1828              	 .loc 2 456 11
 1829 03ec 00BF     	 nop
 1830              	.L95:
 457:../Libraries/XMCLib/src/xmc_dma.c ****       }
 458:../Libraries/XMCLib/src/xmc_dma.c **** 
 459:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1831              	 .loc 2 459 14
 1832 03ee 0023     	 movs r3,#0
 1833 03f0 FB75     	 strb r3,[r7,#23]
 1834 03f2 04E0     	 b .L96
 1835              	.L74:
 460:../Libraries/XMCLib/src/xmc_dma.c **** 
 461:../Libraries/XMCLib/src/xmc_dma.c ****     }
 462:../Libraries/XMCLib/src/xmc_dma.c ****     else
 463:../Libraries/XMCLib/src/xmc_dma.c ****     {
 464:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1836              	 .loc 2 464 14
 1837 03f4 0223     	 movs r3,#2
 1838 03f6 FB75     	 strb r3,[r7,#23]
 1839 03f8 01E0     	 b .L96
 1840              	.L73:
 465:../Libraries/XMCLib/src/xmc_dma.c ****     }
 466:../Libraries/XMCLib/src/xmc_dma.c ****   }
 467:../Libraries/XMCLib/src/xmc_dma.c ****   else
 468:../Libraries/XMCLib/src/xmc_dma.c ****   {
 469:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1841              	 .loc 2 469 12
 1842 03fa 0123     	 movs r3,#1
 1843 03fc FB75     	 strb r3,[r7,#23]
 1844              	.L96:
 470:../Libraries/XMCLib/src/xmc_dma.c ****   }
 471:../Libraries/XMCLib/src/xmc_dma.c **** 
 472:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1845              	 .loc 2 472 10
 1846 03fe FB7D     	 ldrb r3,[r7,#23]
 473:../Libraries/XMCLib/src/xmc_dma.c **** }
 1847              	 .loc 2 473 1
 1848 0400 1846     	 mov r0,r3
 1849 0402 1837     	 adds r7,r7,#24
 1850              	.LCFI101:
 1851              	 .cfi_def_cfa_offset 8
 1852 0404 BD46     	 mov sp,r7
 1853              	.LCFI102:
 1854              	 .cfi_def_cfa_register 13
 1855              	 
 1856 0406 80BD     	 pop {r7,pc}
 1857              	 .cfi_endproc
 1858              	.LFE196:
 1860              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1861              	 .align 1
 1862              	 .global XMC_DMA_CH_Suspend
 1863              	 .syntax unified
 1864              	 .thumb
 1865              	 .thumb_func
 1866              	 .fpu fpv4-sp-d16
 1868              	XMC_DMA_CH_Suspend:
 1869              	.LFB197:
 474:../Libraries/XMCLib/src/xmc_dma.c **** 
 475:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 476:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 477:../Libraries/XMCLib/src/xmc_dma.c **** {
 1870              	 .loc 2 477 1
 1871              	 .cfi_startproc
 1872              	 
 1873              	 
 1874              	 
 1875 0000 80B4     	 push {r7}
 1876              	.LCFI103:
 1877              	 .cfi_def_cfa_offset 4
 1878              	 .cfi_offset 7,-4
 1879 0002 83B0     	 sub sp,sp,#12
 1880              	.LCFI104:
 1881              	 .cfi_def_cfa_offset 16
 1882 0004 00AF     	 add r7,sp,#0
 1883              	.LCFI105:
 1884              	 .cfi_def_cfa_register 7
 1885 0006 7860     	 str r0,[r7,#4]
 1886 0008 0B46     	 mov r3,r1
 1887 000a FB70     	 strb r3,[r7,#3]
 478:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1888              	 .loc 2 478 25
 1889 000c FB78     	 ldrb r3,[r7,#3]
 1890 000e 7A68     	 ldr r2,[r7,#4]
 1891 0010 5821     	 movs r1,#88
 1892 0012 01FB03F3 	 mul r3,r1,r3
 1893 0016 1344     	 add r3,r3,r2
 1894 0018 4033     	 adds r3,r3,#64
 1895 001a 1A68     	 ldr r2,[r3]
 1896 001c FB78     	 ldrb r3,[r7,#3]
 1897 001e 42F48072 	 orr r2,r2,#256
 1898 0022 7968     	 ldr r1,[r7,#4]
 1899 0024 5820     	 movs r0,#88
 1900 0026 00FB03F3 	 mul r3,r0,r3
 1901 002a 0B44     	 add r3,r3,r1
 1902 002c 4033     	 adds r3,r3,#64
 1903 002e 1A60     	 str r2,[r3]
 479:../Libraries/XMCLib/src/xmc_dma.c **** }
 1904              	 .loc 2 479 1
 1905 0030 00BF     	 nop
 1906 0032 0C37     	 adds r7,r7,#12
 1907              	.LCFI106:
 1908              	 .cfi_def_cfa_offset 4
 1909 0034 BD46     	 mov sp,r7
 1910              	.LCFI107:
 1911              	 .cfi_def_cfa_register 13
 1912              	 
 1913 0036 5DF8047B 	 ldr r7,[sp],#4
 1914              	.LCFI108:
 1915              	 .cfi_restore 7
 1916              	 .cfi_def_cfa_offset 0
 1917 003a 7047     	 bx lr
 1918              	 .cfi_endproc
 1919              	.LFE197:
 1921              	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1922              	 .align 1
 1923              	 .global XMC_DMA_CH_Resume
 1924              	 .syntax unified
 1925              	 .thumb
 1926              	 .thumb_func
 1927              	 .fpu fpv4-sp-d16
 1929              	XMC_DMA_CH_Resume:
 1930              	.LFB198:
 480:../Libraries/XMCLib/src/xmc_dma.c **** 
 481:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 482:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 483:../Libraries/XMCLib/src/xmc_dma.c **** {
 1931              	 .loc 2 483 1
 1932              	 .cfi_startproc
 1933              	 
 1934              	 
 1935              	 
 1936 0000 80B4     	 push {r7}
 1937              	.LCFI109:
 1938              	 .cfi_def_cfa_offset 4
 1939              	 .cfi_offset 7,-4
 1940 0002 83B0     	 sub sp,sp,#12
 1941              	.LCFI110:
 1942              	 .cfi_def_cfa_offset 16
 1943 0004 00AF     	 add r7,sp,#0
 1944              	.LCFI111:
 1945              	 .cfi_def_cfa_register 7
 1946 0006 7860     	 str r0,[r7,#4]
 1947 0008 0B46     	 mov r3,r1
 1948 000a FB70     	 strb r3,[r7,#3]
 484:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1949              	 .loc 2 484 25
 1950 000c FB78     	 ldrb r3,[r7,#3]
 1951 000e 7A68     	 ldr r2,[r7,#4]
 1952 0010 5821     	 movs r1,#88
 1953 0012 01FB03F3 	 mul r3,r1,r3
 1954 0016 1344     	 add r3,r3,r2
 1955 0018 4033     	 adds r3,r3,#64
 1956 001a 1A68     	 ldr r2,[r3]
 1957 001c FB78     	 ldrb r3,[r7,#3]
 1958 001e 22F48072 	 bic r2,r2,#256
 1959 0022 7968     	 ldr r1,[r7,#4]
 1960 0024 5820     	 movs r0,#88
 1961 0026 00FB03F3 	 mul r3,r0,r3
 1962 002a 0B44     	 add r3,r3,r1
 1963 002c 4033     	 adds r3,r3,#64
 1964 002e 1A60     	 str r2,[r3]
 485:../Libraries/XMCLib/src/xmc_dma.c **** }
 1965              	 .loc 2 485 1
 1966 0030 00BF     	 nop
 1967 0032 0C37     	 adds r7,r7,#12
 1968              	.LCFI112:
 1969              	 .cfi_def_cfa_offset 4
 1970 0034 BD46     	 mov sp,r7
 1971              	.LCFI113:
 1972              	 .cfi_def_cfa_register 13
 1973              	 
 1974 0036 5DF8047B 	 ldr r7,[sp],#4
 1975              	.LCFI114:
 1976              	 .cfi_restore 7
 1977              	 .cfi_def_cfa_offset 0
 1978 003a 7047     	 bx lr
 1979              	 .cfi_endproc
 1980              	.LFE198:
 1982              	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1983              	 .align 1
 1984              	 .global XMC_DMA_CH_IsSuspended
 1985              	 .syntax unified
 1986              	 .thumb
 1987              	 .thumb_func
 1988              	 .fpu fpv4-sp-d16
 1990              	XMC_DMA_CH_IsSuspended:
 1991              	.LFB199:
 486:../Libraries/XMCLib/src/xmc_dma.c **** 
 487:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 488:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 489:../Libraries/XMCLib/src/xmc_dma.c **** {
 1992              	 .loc 2 489 1
 1993              	 .cfi_startproc
 1994              	 
 1995              	 
 1996              	 
 1997 0000 80B4     	 push {r7}
 1998              	.LCFI115:
 1999              	 .cfi_def_cfa_offset 4
 2000              	 .cfi_offset 7,-4
 2001 0002 83B0     	 sub sp,sp,#12
 2002              	.LCFI116:
 2003              	 .cfi_def_cfa_offset 16
 2004 0004 00AF     	 add r7,sp,#0
 2005              	.LCFI117:
 2006              	 .cfi_def_cfa_register 7
 2007 0006 7860     	 str r0,[r7,#4]
 2008 0008 0B46     	 mov r3,r1
 2009 000a FB70     	 strb r3,[r7,#3]
 490:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 2010              	 .loc 2 490 33
 2011 000c FB78     	 ldrb r3,[r7,#3]
 2012 000e 7A68     	 ldr r2,[r7,#4]
 2013 0010 5821     	 movs r1,#88
 2014 0012 01FB03F3 	 mul r3,r1,r3
 2015 0016 1344     	 add r3,r3,r2
 2016 0018 4033     	 adds r3,r3,#64
 2017 001a 1B68     	 ldr r3,[r3]
 2018              	 .loc 2 490 39
 2019 001c 03F48073 	 and r3,r3,#256
 2020              	 .loc 2 490 10
 2021 0020 002B     	 cmp r3,#0
 2022 0022 14BF     	 ite ne
 2023 0024 0123     	 movne r3,#1
 2024 0026 0023     	 moveq r3,#0
 2025 0028 DBB2     	 uxtb r3,r3
 491:../Libraries/XMCLib/src/xmc_dma.c **** }
 2026              	 .loc 2 491 1
 2027 002a 1846     	 mov r0,r3
 2028 002c 0C37     	 adds r7,r7,#12
 2029              	.LCFI118:
 2030              	 .cfi_def_cfa_offset 4
 2031 002e BD46     	 mov sp,r7
 2032              	.LCFI119:
 2033              	 .cfi_def_cfa_register 13
 2034              	 
 2035 0030 5DF8047B 	 ldr r7,[sp],#4
 2036              	.LCFI120:
 2037              	 .cfi_restore 7
 2038              	 .cfi_def_cfa_offset 0
 2039 0034 7047     	 bx lr
 2040              	 .cfi_endproc
 2041              	.LFE199:
 2043              	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 2044              	 .align 1
 2045              	 .global XMC_DMA_CH_EnableEvent
 2046              	 .syntax unified
 2047              	 .thumb
 2048              	 .thumb_func
 2049              	 .fpu fpv4-sp-d16
 2051              	XMC_DMA_CH_EnableEvent:
 2052              	.LFB200:
 492:../Libraries/XMCLib/src/xmc_dma.c **** 
 493:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 494:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 495:../Libraries/XMCLib/src/xmc_dma.c **** {
 2053              	 .loc 2 495 1
 2054              	 .cfi_startproc
 2055              	 
 2056              	 
 2057              	 
 2058 0000 80B4     	 push {r7}
 2059              	.LCFI121:
 2060              	 .cfi_def_cfa_offset 4
 2061              	 .cfi_offset 7,-4
 2062 0002 87B0     	 sub sp,sp,#28
 2063              	.LCFI122:
 2064              	 .cfi_def_cfa_offset 32
 2065 0004 00AF     	 add r7,sp,#0
 2066              	.LCFI123:
 2067              	 .cfi_def_cfa_register 7
 2068 0006 F860     	 str r0,[r7,#12]
 2069 0008 0B46     	 mov r3,r1
 2070 000a 7A60     	 str r2,[r7,#4]
 2071 000c FB72     	 strb r3,[r7,#11]
 496:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 497:../Libraries/XMCLib/src/xmc_dma.c **** 
 498:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2072              	 .loc 2 498 18
 2073 000e 0023     	 movs r3,#0
 2074 0010 7B61     	 str r3,[r7,#20]
 2075              	 .loc 2 498 3
 2076 0012 14E0     	 b .L106
 2077              	.L108:
 499:../Libraries/XMCLib/src/xmc_dma.c ****   {
 500:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 2078              	 .loc 2 500 9
 2079 0014 7A68     	 ldr r2,[r7,#4]
 2080 0016 7B69     	 ldr r3,[r7,#20]
 2081 0018 22FA03F3 	 lsr r3,r2,r3
 2082 001c 03F00103 	 and r3,r3,#1
 2083              	 .loc 2 500 8
 2084 0020 002B     	 cmp r3,#0
 2085 0022 09D0     	 beq .L107
 501:../Libraries/XMCLib/src/xmc_dma.c ****     {
 502:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x101UL << channel);
 2086              	 .loc 2 502 59
 2087 0024 FB7A     	 ldrb r3,[r7,#11]
 2088              	 .loc 2 502 31
 2089 0026 7A69     	 ldr r2,[r7,#20]
 2090 0028 5200     	 lsls r2,r2,#1
 2091              	 .loc 2 502 59
 2092 002a 40F20111 	 movw r1,#257
 2093 002e 9940     	 lsls r1,r1,r3
 2094              	 .loc 2 502 38
 2095 0030 FB68     	 ldr r3,[r7,#12]
 2096 0032 C432     	 adds r2,r2,#196
 2097 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 2098              	.L107:
 498:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2099              	 .loc 2 498 52 discriminator 2
 2100 0038 7B69     	 ldr r3,[r7,#20]
 2101 003a 0133     	 adds r3,r3,#1
 2102 003c 7B61     	 str r3,[r7,#20]
 2103              	.L106:
 498:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2104              	 .loc 2 498 3 discriminator 1
 2105 003e 7B69     	 ldr r3,[r7,#20]
 2106 0040 042B     	 cmp r3,#4
 2107 0042 E7D9     	 bls .L108
 503:../Libraries/XMCLib/src/xmc_dma.c ****     }
 504:../Libraries/XMCLib/src/xmc_dma.c ****   }
 505:../Libraries/XMCLib/src/xmc_dma.c **** }
 2108              	 .loc 2 505 1
 2109 0044 00BF     	 nop
 2110 0046 00BF     	 nop
 2111 0048 1C37     	 adds r7,r7,#28
 2112              	.LCFI124:
 2113              	 .cfi_def_cfa_offset 4
 2114 004a BD46     	 mov sp,r7
 2115              	.LCFI125:
 2116              	 .cfi_def_cfa_register 13
 2117              	 
 2118 004c 5DF8047B 	 ldr r7,[sp],#4
 2119              	.LCFI126:
 2120              	 .cfi_restore 7
 2121              	 .cfi_def_cfa_offset 0
 2122 0050 7047     	 bx lr
 2123              	 .cfi_endproc
 2124              	.LFE200:
 2126              	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 2127              	 .align 1
 2128              	 .global XMC_DMA_CH_DisableEvent
 2129              	 .syntax unified
 2130              	 .thumb
 2131              	 .thumb_func
 2132              	 .fpu fpv4-sp-d16
 2134              	XMC_DMA_CH_DisableEvent:
 2135              	.LFB201:
 506:../Libraries/XMCLib/src/xmc_dma.c **** 
 507:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 508:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 509:../Libraries/XMCLib/src/xmc_dma.c **** {
 2136              	 .loc 2 509 1
 2137              	 .cfi_startproc
 2138              	 
 2139              	 
 2140              	 
 2141 0000 80B4     	 push {r7}
 2142              	.LCFI127:
 2143              	 .cfi_def_cfa_offset 4
 2144              	 .cfi_offset 7,-4
 2145 0002 87B0     	 sub sp,sp,#28
 2146              	.LCFI128:
 2147              	 .cfi_def_cfa_offset 32
 2148 0004 00AF     	 add r7,sp,#0
 2149              	.LCFI129:
 2150              	 .cfi_def_cfa_register 7
 2151 0006 F860     	 str r0,[r7,#12]
 2152 0008 0B46     	 mov r3,r1
 2153 000a 7A60     	 str r2,[r7,#4]
 2154 000c FB72     	 strb r3,[r7,#11]
 510:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 511:../Libraries/XMCLib/src/xmc_dma.c **** 
 512:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2155              	 .loc 2 512 18
 2156 000e 0023     	 movs r3,#0
 2157 0010 7B61     	 str r3,[r7,#20]
 2158              	 .loc 2 512 3
 2159 0012 14E0     	 b .L110
 2160              	.L112:
 513:../Libraries/XMCLib/src/xmc_dma.c ****   {
 514:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 2161              	 .loc 2 514 9
 2162 0014 7A68     	 ldr r2,[r7,#4]
 2163 0016 7B69     	 ldr r3,[r7,#20]
 2164 0018 22FA03F3 	 lsr r3,r2,r3
 2165 001c 03F00103 	 and r3,r3,#1
 2166              	 .loc 2 514 8
 2167 0020 002B     	 cmp r3,#0
 2168 0022 09D0     	 beq .L111
 515:../Libraries/XMCLib/src/xmc_dma.c ****     {
 516:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x100UL << channel);
 2169              	 .loc 2 516 59
 2170 0024 FB7A     	 ldrb r3,[r7,#11]
 2171              	 .loc 2 516 31
 2172 0026 7A69     	 ldr r2,[r7,#20]
 2173 0028 5200     	 lsls r2,r2,#1
 2174              	 .loc 2 516 59
 2175 002a 4FF48071 	 mov r1,#256
 2176 002e 9940     	 lsls r1,r1,r3
 2177              	 .loc 2 516 38
 2178 0030 FB68     	 ldr r3,[r7,#12]
 2179 0032 C432     	 adds r2,r2,#196
 2180 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 2181              	.L111:
 512:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2182              	 .loc 2 512 52 discriminator 2
 2183 0038 7B69     	 ldr r3,[r7,#20]
 2184 003a 0133     	 adds r3,r3,#1
 2185 003c 7B61     	 str r3,[r7,#20]
 2186              	.L110:
 512:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2187              	 .loc 2 512 3 discriminator 1
 2188 003e 7B69     	 ldr r3,[r7,#20]
 2189 0040 042B     	 cmp r3,#4
 2190 0042 E7D9     	 bls .L112
 517:../Libraries/XMCLib/src/xmc_dma.c ****     }
 518:../Libraries/XMCLib/src/xmc_dma.c ****   }
 519:../Libraries/XMCLib/src/xmc_dma.c **** }
 2191              	 .loc 2 519 1
 2192 0044 00BF     	 nop
 2193 0046 00BF     	 nop
 2194 0048 1C37     	 adds r7,r7,#28
 2195              	.LCFI130:
 2196              	 .cfi_def_cfa_offset 4
 2197 004a BD46     	 mov sp,r7
 2198              	.LCFI131:
 2199              	 .cfi_def_cfa_register 13
 2200              	 
 2201 004c 5DF8047B 	 ldr r7,[sp],#4
 2202              	.LCFI132:
 2203              	 .cfi_restore 7
 2204              	 .cfi_def_cfa_offset 0
 2205 0050 7047     	 bx lr
 2206              	 .cfi_endproc
 2207              	.LFE201:
 2209              	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 2210              	 .align 1
 2211              	 .global XMC_DMA_CH_ClearEventStatus
 2212              	 .syntax unified
 2213              	 .thumb
 2214              	 .thumb_func
 2215              	 .fpu fpv4-sp-d16
 2217              	XMC_DMA_CH_ClearEventStatus:
 2218              	.LFB202:
 520:../Libraries/XMCLib/src/xmc_dma.c **** 
 521:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 522:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 523:../Libraries/XMCLib/src/xmc_dma.c **** {
 2219              	 .loc 2 523 1
 2220              	 .cfi_startproc
 2221              	 
 2222              	 
 2223              	 
 2224 0000 80B4     	 push {r7}
 2225              	.LCFI133:
 2226              	 .cfi_def_cfa_offset 4
 2227              	 .cfi_offset 7,-4
 2228 0002 87B0     	 sub sp,sp,#28
 2229              	.LCFI134:
 2230              	 .cfi_def_cfa_offset 32
 2231 0004 00AF     	 add r7,sp,#0
 2232              	.LCFI135:
 2233              	 .cfi_def_cfa_register 7
 2234 0006 F860     	 str r0,[r7,#12]
 2235 0008 0B46     	 mov r3,r1
 2236 000a 7A60     	 str r2,[r7,#4]
 2237 000c FB72     	 strb r3,[r7,#11]
 524:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 525:../Libraries/XMCLib/src/xmc_dma.c **** 
 526:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2238              	 .loc 2 526 18
 2239 000e 0023     	 movs r3,#0
 2240 0010 7B61     	 str r3,[r7,#20]
 2241              	 .loc 2 526 3
 2242 0012 13E0     	 b .L114
 2243              	.L116:
 527:../Libraries/XMCLib/src/xmc_dma.c ****   {
 528:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 2244              	 .loc 2 528 9
 2245 0014 7A68     	 ldr r2,[r7,#4]
 2246 0016 7B69     	 ldr r3,[r7,#20]
 2247 0018 22FA03F3 	 lsr r3,r2,r3
 2248 001c 03F00103 	 and r3,r3,#1
 2249              	 .loc 2 528 8
 2250 0020 002B     	 cmp r3,#0
 2251 0022 08D0     	 beq .L115
 529:../Libraries/XMCLib/src/xmc_dma.c ****     {
 530:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 2252              	 .loc 2 530 58
 2253 0024 FB7A     	 ldrb r3,[r7,#11]
 2254              	 .loc 2 530 32
 2255 0026 7A69     	 ldr r2,[r7,#20]
 2256 0028 5200     	 lsls r2,r2,#1
 2257              	 .loc 2 530 58
 2258 002a 0121     	 movs r1,#1
 2259 002c 9940     	 lsls r1,r1,r3
 2260              	 .loc 2 530 39
 2261 002e FB68     	 ldr r3,[r7,#12]
 2262 0030 CE32     	 adds r2,r2,#206
 2263 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 2264              	.L115:
 526:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2265              	 .loc 2 526 52 discriminator 2
 2266 0036 7B69     	 ldr r3,[r7,#20]
 2267 0038 0133     	 adds r3,r3,#1
 2268 003a 7B61     	 str r3,[r7,#20]
 2269              	.L114:
 526:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2270              	 .loc 2 526 3 discriminator 1
 2271 003c 7B69     	 ldr r3,[r7,#20]
 2272 003e 042B     	 cmp r3,#4
 2273 0040 E8D9     	 bls .L116
 531:../Libraries/XMCLib/src/xmc_dma.c ****     }
 532:../Libraries/XMCLib/src/xmc_dma.c ****   }
 533:../Libraries/XMCLib/src/xmc_dma.c **** 
 534:../Libraries/XMCLib/src/xmc_dma.c **** }
 2274              	 .loc 2 534 1
 2275 0042 00BF     	 nop
 2276 0044 00BF     	 nop
 2277 0046 1C37     	 adds r7,r7,#28
 2278              	.LCFI136:
 2279              	 .cfi_def_cfa_offset 4
 2280 0048 BD46     	 mov sp,r7
 2281              	.LCFI137:
 2282              	 .cfi_def_cfa_register 13
 2283              	 
 2284 004a 5DF8047B 	 ldr r7,[sp],#4
 2285              	.LCFI138:
 2286              	 .cfi_restore 7
 2287              	 .cfi_def_cfa_offset 0
 2288 004e 7047     	 bx lr
 2289              	 .cfi_endproc
 2290              	.LFE202:
 2292              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 2293              	 .align 1
 2294              	 .global XMC_DMA_CH_GetEventStatus
 2295              	 .syntax unified
 2296              	 .thumb
 2297              	 .thumb_func
 2298              	 .fpu fpv4-sp-d16
 2300              	XMC_DMA_CH_GetEventStatus:
 2301              	.LFB203:
 535:../Libraries/XMCLib/src/xmc_dma.c **** 
 536:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 537:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 538:../Libraries/XMCLib/src/xmc_dma.c **** {
 2302              	 .loc 2 538 1
 2303              	 .cfi_startproc
 2304              	 
 2305              	 
 2306              	 
 2307 0000 80B4     	 push {r7}
 2308              	.LCFI139:
 2309              	 .cfi_def_cfa_offset 4
 2310              	 .cfi_offset 7,-4
 2311 0002 85B0     	 sub sp,sp,#20
 2312              	.LCFI140:
 2313              	 .cfi_def_cfa_offset 24
 2314 0004 00AF     	 add r7,sp,#0
 2315              	.LCFI141:
 2316              	 .cfi_def_cfa_register 7
 2317 0006 7860     	 str r0,[r7,#4]
 2318 0008 0B46     	 mov r3,r1
 2319 000a FB70     	 strb r3,[r7,#3]
 539:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 540:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 2320              	 .loc 2 540 12
 2321 000c 0023     	 movs r3,#0
 2322 000e BB60     	 str r3,[r7,#8]
 541:../Libraries/XMCLib/src/xmc_dma.c **** 
 542:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2323              	 .loc 2 542 18
 2324 0010 0023     	 movs r3,#0
 2325 0012 FB60     	 str r3,[r7,#12]
 2326              	 .loc 2 542 3
 2327 0014 18E0     	 b .L118
 2328              	.L121:
 543:../Libraries/XMCLib/src/xmc_dma.c ****   {
 544:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 2329              	 .loc 2 544 53
 2330 0016 FB68     	 ldr r3,[r7,#12]
 2331 0018 5A00     	 lsls r2,r3,#1
 2332              	 .loc 2 544 42
 2333 001a 7B68     	 ldr r3,[r7,#4]
 2334 001c BA32     	 adds r2,r2,#186
 2335 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 2336              	 .loc 2 544 92
 2337 0022 FB78     	 ldrb r3,[r7,#3]
 2338              	 .loc 2 544 112
 2339 0024 22FA03F3 	 lsr r3,r2,r3
 2340 0028 03F00103 	 and r3,r3,#1
 2341              	 .loc 2 544 15
 2342 002c 002B     	 cmp r3,#0
 2343 002e 04D0     	 beq .L119
 2344              	 .loc 2 544 15 is_stmt 0 discriminator 1
 2345 0030 0122     	 movs r2,#1
 2346 0032 FB68     	 ldr r3,[r7,#12]
 2347 0034 02FA03F3 	 lsl r3,r2,r3
 2348 0038 00E0     	 b .L120
 2349              	.L119:
 2350              	 .loc 2 544 15 discriminator 2
 2351 003a 0023     	 movs r3,#0
 2352              	.L120:
 2353              	 .loc 2 544 12 is_stmt 1 discriminator 4
 2354 003c BA68     	 ldr r2,[r7,#8]
 2355 003e 1343     	 orrs r3,r3,r2
 2356 0040 BB60     	 str r3,[r7,#8]
 542:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2357              	 .loc 2 542 52 discriminator 4
 2358 0042 FB68     	 ldr r3,[r7,#12]
 2359 0044 0133     	 adds r3,r3,#1
 2360 0046 FB60     	 str r3,[r7,#12]
 2361              	.L118:
 542:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2362              	 .loc 2 542 3 discriminator 2
 2363 0048 FB68     	 ldr r3,[r7,#12]
 2364 004a 042B     	 cmp r3,#4
 2365 004c E3D9     	 bls .L121
 545:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 546:../Libraries/XMCLib/src/xmc_dma.c ****   }
 547:../Libraries/XMCLib/src/xmc_dma.c **** 
 548:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 2366              	 .loc 2 548 10
 2367 004e BB68     	 ldr r3,[r7,#8]
 549:../Libraries/XMCLib/src/xmc_dma.c **** }
 2368              	 .loc 2 549 1
 2369 0050 1846     	 mov r0,r3
 2370 0052 1437     	 adds r7,r7,#20
 2371              	.LCFI142:
 2372              	 .cfi_def_cfa_offset 4
 2373 0054 BD46     	 mov sp,r7
 2374              	.LCFI143:
 2375              	 .cfi_def_cfa_register 13
 2376              	 
 2377 0056 5DF8047B 	 ldr r7,[sp],#4
 2378              	.LCFI144:
 2379              	 .cfi_restore 7
 2380              	 .cfi_def_cfa_offset 0
 2381 005a 7047     	 bx lr
 2382              	 .cfi_endproc
 2383              	.LFE203:
 2385              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 2386              	 .align 1
 2387              	 .global XMC_DMA_CH_EnableSourceGather
 2388              	 .syntax unified
 2389              	 .thumb
 2390              	 .thumb_func
 2391              	 .fpu fpv4-sp-d16
 2393              	XMC_DMA_CH_EnableSourceGather:
 2394              	.LFB204:
 550:../Libraries/XMCLib/src/xmc_dma.c **** 
 551:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 552:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 553:../Libraries/XMCLib/src/xmc_dma.c **** {
 2395              	 .loc 2 553 1
 2396              	 .cfi_startproc
 2397              	 
 2398              	 
 2399              	 
 2400 0000 80B4     	 push {r7}
 2401              	.LCFI145:
 2402              	 .cfi_def_cfa_offset 4
 2403              	 .cfi_offset 7,-4
 2404 0002 85B0     	 sub sp,sp,#20
 2405              	.LCFI146:
 2406              	 .cfi_def_cfa_offset 24
 2407 0004 00AF     	 add r7,sp,#0
 2408              	.LCFI147:
 2409              	 .cfi_def_cfa_register 7
 2410 0006 F860     	 str r0,[r7,#12]
 2411 0008 7A60     	 str r2,[r7,#4]
 2412 000a 1A46     	 mov r2,r3
 2413 000c 0B46     	 mov r3,r1
 2414 000e FB72     	 strb r3,[r7,#11]
 2415 0010 1346     	 mov r3,r2
 2416 0012 3B81     	 strh r3,[r7,#8]
 554:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2417              	 .loc 2 554 25
 2418 0014 FB7A     	 ldrb r3,[r7,#11]
 2419 0016 FA68     	 ldr r2,[r7,#12]
 2420 0018 5821     	 movs r1,#88
 2421 001a 01FB03F3 	 mul r3,r1,r3
 2422 001e 1344     	 add r3,r3,r2
 2423 0020 1833     	 adds r3,r3,#24
 2424 0022 1A68     	 ldr r2,[r3]
 2425 0024 FB7A     	 ldrb r3,[r7,#11]
 2426 0026 42F40032 	 orr r2,r2,#131072
 2427 002a F968     	 ldr r1,[r7,#12]
 2428 002c 5820     	 movs r0,#88
 2429 002e 00FB03F3 	 mul r3,r0,r3
 2430 0032 0B44     	 add r3,r3,r1
 2431 0034 1833     	 adds r3,r3,#24
 2432 0036 1A60     	 str r2,[r3]
 555:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2433              	 .loc 2 555 75
 2434 0038 3B89     	 ldrh r3,[r7,#8]
 2435              	 .loc 2 555 91
 2436 003a 1905     	 lsls r1,r3,#20
 2437              	 .loc 2 555 19
 2438 003c FB7A     	 ldrb r3,[r7,#11]
 2439              	 .loc 2 555 72
 2440 003e 7A68     	 ldr r2,[r7,#4]
 2441 0040 0A43     	 orrs r2,r2,r1
 2442              	 .loc 2 555 24
 2443 0042 F968     	 ldr r1,[r7,#12]
 2444 0044 5820     	 movs r0,#88
 2445 0046 00FB03F3 	 mul r3,r0,r3
 2446 004a 0B44     	 add r3,r3,r1
 2447 004c 4833     	 adds r3,r3,#72
 2448 004e 1A60     	 str r2,[r3]
 556:../Libraries/XMCLib/src/xmc_dma.c **** }
 2449              	 .loc 2 556 1
 2450 0050 00BF     	 nop
 2451 0052 1437     	 adds r7,r7,#20
 2452              	.LCFI148:
 2453              	 .cfi_def_cfa_offset 4
 2454 0054 BD46     	 mov sp,r7
 2455              	.LCFI149:
 2456              	 .cfi_def_cfa_register 13
 2457              	 
 2458 0056 5DF8047B 	 ldr r7,[sp],#4
 2459              	.LCFI150:
 2460              	 .cfi_restore 7
 2461              	 .cfi_def_cfa_offset 0
 2462 005a 7047     	 bx lr
 2463              	 .cfi_endproc
 2464              	.LFE204:
 2466              	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2467              	 .align 1
 2468              	 .global XMC_DMA_CH_DisableSourceGather
 2469              	 .syntax unified
 2470              	 .thumb
 2471              	 .thumb_func
 2472              	 .fpu fpv4-sp-d16
 2474              	XMC_DMA_CH_DisableSourceGather:
 2475              	.LFB205:
 557:../Libraries/XMCLib/src/xmc_dma.c **** 
 558:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 559:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 560:../Libraries/XMCLib/src/xmc_dma.c **** {
 2476              	 .loc 2 560 1
 2477              	 .cfi_startproc
 2478              	 
 2479              	 
 2480              	 
 2481 0000 80B4     	 push {r7}
 2482              	.LCFI151:
 2483              	 .cfi_def_cfa_offset 4
 2484              	 .cfi_offset 7,-4
 2485 0002 83B0     	 sub sp,sp,#12
 2486              	.LCFI152:
 2487              	 .cfi_def_cfa_offset 16
 2488 0004 00AF     	 add r7,sp,#0
 2489              	.LCFI153:
 2490              	 .cfi_def_cfa_register 7
 2491 0006 7860     	 str r0,[r7,#4]
 2492 0008 0B46     	 mov r3,r1
 2493 000a FB70     	 strb r3,[r7,#3]
 561:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2494              	 .loc 2 561 25
 2495 000c FB78     	 ldrb r3,[r7,#3]
 2496 000e 7A68     	 ldr r2,[r7,#4]
 2497 0010 5821     	 movs r1,#88
 2498 0012 01FB03F3 	 mul r3,r1,r3
 2499 0016 1344     	 add r3,r3,r2
 2500 0018 1833     	 adds r3,r3,#24
 2501 001a 1A68     	 ldr r2,[r3]
 2502 001c FB78     	 ldrb r3,[r7,#3]
 2503 001e 22F40032 	 bic r2,r2,#131072
 2504 0022 7968     	 ldr r1,[r7,#4]
 2505 0024 5820     	 movs r0,#88
 2506 0026 00FB03F3 	 mul r3,r0,r3
 2507 002a 0B44     	 add r3,r3,r1
 2508 002c 1833     	 adds r3,r3,#24
 2509 002e 1A60     	 str r2,[r3]
 562:../Libraries/XMCLib/src/xmc_dma.c **** }
 2510              	 .loc 2 562 1
 2511 0030 00BF     	 nop
 2512 0032 0C37     	 adds r7,r7,#12
 2513              	.LCFI154:
 2514              	 .cfi_def_cfa_offset 4
 2515 0034 BD46     	 mov sp,r7
 2516              	.LCFI155:
 2517              	 .cfi_def_cfa_register 13
 2518              	 
 2519 0036 5DF8047B 	 ldr r7,[sp],#4
 2520              	.LCFI156:
 2521              	 .cfi_restore 7
 2522              	 .cfi_def_cfa_offset 0
 2523 003a 7047     	 bx lr
 2524              	 .cfi_endproc
 2525              	.LFE205:
 2527              	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2528              	 .align 1
 2529              	 .global XMC_DMA_CH_EnableDestinationScatter
 2530              	 .syntax unified
 2531              	 .thumb
 2532              	 .thumb_func
 2533              	 .fpu fpv4-sp-d16
 2535              	XMC_DMA_CH_EnableDestinationScatter:
 2536              	.LFB206:
 563:../Libraries/XMCLib/src/xmc_dma.c **** 
 564:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 565:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 566:../Libraries/XMCLib/src/xmc_dma.c **** {
 2537              	 .loc 2 566 1
 2538              	 .cfi_startproc
 2539              	 
 2540              	 
 2541              	 
 2542 0000 80B4     	 push {r7}
 2543              	.LCFI157:
 2544              	 .cfi_def_cfa_offset 4
 2545              	 .cfi_offset 7,-4
 2546 0002 85B0     	 sub sp,sp,#20
 2547              	.LCFI158:
 2548              	 .cfi_def_cfa_offset 24
 2549 0004 00AF     	 add r7,sp,#0
 2550              	.LCFI159:
 2551              	 .cfi_def_cfa_register 7
 2552 0006 F860     	 str r0,[r7,#12]
 2553 0008 7A60     	 str r2,[r7,#4]
 2554 000a 1A46     	 mov r2,r3
 2555 000c 0B46     	 mov r3,r1
 2556 000e FB72     	 strb r3,[r7,#11]
 2557 0010 1346     	 mov r3,r2
 2558 0012 3B81     	 strh r3,[r7,#8]
 567:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2559              	 .loc 2 567 25
 2560 0014 FB7A     	 ldrb r3,[r7,#11]
 2561 0016 FA68     	 ldr r2,[r7,#12]
 2562 0018 5821     	 movs r1,#88
 2563 001a 01FB03F3 	 mul r3,r1,r3
 2564 001e 1344     	 add r3,r3,r2
 2565 0020 1833     	 adds r3,r3,#24
 2566 0022 1A68     	 ldr r2,[r3]
 2567 0024 FB7A     	 ldrb r3,[r7,#11]
 2568 0026 42F48022 	 orr r2,r2,#262144
 2569 002a F968     	 ldr r1,[r7,#12]
 2570 002c 5820     	 movs r0,#88
 2571 002e 00FB03F3 	 mul r3,r0,r3
 2572 0032 0B44     	 add r3,r3,r1
 2573 0034 1833     	 adds r3,r3,#24
 2574 0036 1A60     	 str r2,[r3]
 568:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2575              	 .loc 2 568 75
 2576 0038 3B89     	 ldrh r3,[r7,#8]
 2577              	 .loc 2 568 91
 2578 003a 1905     	 lsls r1,r3,#20
 2579              	 .loc 2 568 19
 2580 003c FB7A     	 ldrb r3,[r7,#11]
 2581              	 .loc 2 568 72
 2582 003e 7A68     	 ldr r2,[r7,#4]
 2583 0040 0A43     	 orrs r2,r2,r1
 2584              	 .loc 2 568 24
 2585 0042 F968     	 ldr r1,[r7,#12]
 2586 0044 5820     	 movs r0,#88
 2587 0046 00FB03F3 	 mul r3,r0,r3
 2588 004a 0B44     	 add r3,r3,r1
 2589 004c 5033     	 adds r3,r3,#80
 2590 004e 1A60     	 str r2,[r3]
 569:../Libraries/XMCLib/src/xmc_dma.c **** }
 2591              	 .loc 2 569 1
 2592 0050 00BF     	 nop
 2593 0052 1437     	 adds r7,r7,#20
 2594              	.LCFI160:
 2595              	 .cfi_def_cfa_offset 4
 2596 0054 BD46     	 mov sp,r7
 2597              	.LCFI161:
 2598              	 .cfi_def_cfa_register 13
 2599              	 
 2600 0056 5DF8047B 	 ldr r7,[sp],#4
 2601              	.LCFI162:
 2602              	 .cfi_restore 7
 2603              	 .cfi_def_cfa_offset 0
 2604 005a 7047     	 bx lr
 2605              	 .cfi_endproc
 2606              	.LFE206:
 2608              	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2609              	 .align 1
 2610              	 .global XMC_DMA_CH_DisableDestinationScatter
 2611              	 .syntax unified
 2612              	 .thumb
 2613              	 .thumb_func
 2614              	 .fpu fpv4-sp-d16
 2616              	XMC_DMA_CH_DisableDestinationScatter:
 2617              	.LFB207:
 570:../Libraries/XMCLib/src/xmc_dma.c **** 
 571:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 572:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 573:../Libraries/XMCLib/src/xmc_dma.c **** {
 2618              	 .loc 2 573 1
 2619              	 .cfi_startproc
 2620              	 
 2621              	 
 2622              	 
 2623 0000 80B4     	 push {r7}
 2624              	.LCFI163:
 2625              	 .cfi_def_cfa_offset 4
 2626              	 .cfi_offset 7,-4
 2627 0002 83B0     	 sub sp,sp,#12
 2628              	.LCFI164:
 2629              	 .cfi_def_cfa_offset 16
 2630 0004 00AF     	 add r7,sp,#0
 2631              	.LCFI165:
 2632              	 .cfi_def_cfa_register 7
 2633 0006 7860     	 str r0,[r7,#4]
 2634 0008 0B46     	 mov r3,r1
 2635 000a FB70     	 strb r3,[r7,#3]
 574:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2636              	 .loc 2 574 25
 2637 000c FB78     	 ldrb r3,[r7,#3]
 2638 000e 7A68     	 ldr r2,[r7,#4]
 2639 0010 5821     	 movs r1,#88
 2640 0012 01FB03F3 	 mul r3,r1,r3
 2641 0016 1344     	 add r3,r3,r2
 2642 0018 1833     	 adds r3,r3,#24
 2643 001a 1A68     	 ldr r2,[r3]
 2644 001c FB78     	 ldrb r3,[r7,#3]
 2645 001e 22F48022 	 bic r2,r2,#262144
 2646 0022 7968     	 ldr r1,[r7,#4]
 2647 0024 5820     	 movs r0,#88
 2648 0026 00FB03F3 	 mul r3,r0,r3
 2649 002a 0B44     	 add r3,r3,r1
 2650 002c 1833     	 adds r3,r3,#24
 2651 002e 1A60     	 str r2,[r3]
 575:../Libraries/XMCLib/src/xmc_dma.c **** }
 2652              	 .loc 2 575 1
 2653 0030 00BF     	 nop
 2654 0032 0C37     	 adds r7,r7,#12
 2655              	.LCFI166:
 2656              	 .cfi_def_cfa_offset 4
 2657 0034 BD46     	 mov sp,r7
 2658              	.LCFI167:
 2659              	 .cfi_def_cfa_register 13
 2660              	 
 2661 0036 5DF8047B 	 ldr r7,[sp],#4
 2662              	.LCFI168:
 2663              	 .cfi_restore 7
 2664              	 .cfi_def_cfa_offset 0
 2665 003a 7047     	 bx lr
 2666              	 .cfi_endproc
 2667              	.LFE207:
 2669              	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2670              	 .align 1
 2671              	 .global XMC_DMA_CH_TriggerSourceRequest
 2672              	 .syntax unified
 2673              	 .thumb
 2674              	 .thumb_func
 2675              	 .fpu fpv4-sp-d16
 2677              	XMC_DMA_CH_TriggerSourceRequest:
 2678              	.LFB208:
 576:../Libraries/XMCLib/src/xmc_dma.c **** 
 577:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 578:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 579:../Libraries/XMCLib/src/xmc_dma.c **** {
 2679              	 .loc 2 579 1
 2680              	 .cfi_startproc
 2681              	 
 2682              	 
 2683              	 
 2684 0000 80B4     	 push {r7}
 2685              	.LCFI169:
 2686              	 .cfi_def_cfa_offset 4
 2687              	 .cfi_offset 7,-4
 2688 0002 83B0     	 sub sp,sp,#12
 2689              	.LCFI170:
 2690              	 .cfi_def_cfa_offset 16
 2691 0004 00AF     	 add r7,sp,#0
 2692              	.LCFI171:
 2693              	 .cfi_def_cfa_register 7
 2694 0006 7860     	 str r0,[r7,#4]
 2695 0008 0846     	 mov r0,r1
 2696 000a 1146     	 mov r1,r2
 2697 000c 1A46     	 mov r2,r3
 2698 000e 0346     	 mov r3,r0
 2699 0010 FB70     	 strb r3,[r7,#3]
 2700 0012 0B46     	 mov r3,r1
 2701 0014 BB70     	 strb r3,[r7,#2]
 2702 0016 1346     	 mov r3,r2
 2703 0018 7B70     	 strb r3,[r7,#1]
 580:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2704              	 .loc 2 580 6
 2705 001a BB78     	 ldrb r3,[r7,#2]
 2706 001c 002B     	 cmp r3,#0
 2707 001e 06D1     	 bne .L128
 581:../Libraries/XMCLib/src/xmc_dma.c ****   {
 582:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2708              	 .loc 2 582 44
 2709 0020 FB78     	 ldrb r3,[r7,#3]
 2710 0022 40F20112 	 movw r2,#257
 2711 0026 9A40     	 lsls r2,r2,r3
 2712              	 .loc 2 582 23
 2713 0028 7B68     	 ldr r3,[r7,#4]
 2714 002a C3F87823 	 str r2,[r3,#888]
 2715              	.L128:
 583:../Libraries/XMCLib/src/xmc_dma.c ****   }
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2716              	 .loc 2 585 6
 2717 002e 7B78     	 ldrb r3,[r7,#1]
 2718 0030 002B     	 cmp r3,#0
 2719 0032 06D0     	 beq .L129
 586:../Libraries/XMCLib/src/xmc_dma.c ****   {
 587:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2720              	 .loc 2 587 40
 2721 0034 FB78     	 ldrb r3,[r7,#3]
 2722 0036 40F20112 	 movw r2,#257
 2723 003a 9A40     	 lsls r2,r2,r3
 2724              	 .loc 2 587 20
 2725 003c 7B68     	 ldr r3,[r7,#4]
 2726 003e C3F88823 	 str r2,[r3,#904]
 2727              	.L129:
 588:../Libraries/XMCLib/src/xmc_dma.c ****   }
 589:../Libraries/XMCLib/src/xmc_dma.c **** 
 590:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2728              	 .loc 2 590 38
 2729 0042 FB78     	 ldrb r3,[r7,#3]
 2730 0044 40F20112 	 movw r2,#257
 2731 0048 9A40     	 lsls r2,r2,r3
 2732              	 .loc 2 590 18
 2733 004a 7B68     	 ldr r3,[r7,#4]
 2734 004c C3F86823 	 str r2,[r3,#872]
 591:../Libraries/XMCLib/src/xmc_dma.c **** }
 2735              	 .loc 2 591 1
 2736 0050 00BF     	 nop
 2737 0052 0C37     	 adds r7,r7,#12
 2738              	.LCFI172:
 2739              	 .cfi_def_cfa_offset 4
 2740 0054 BD46     	 mov sp,r7
 2741              	.LCFI173:
 2742              	 .cfi_def_cfa_register 13
 2743              	 
 2744 0056 5DF8047B 	 ldr r7,[sp],#4
 2745              	.LCFI174:
 2746              	 .cfi_restore 7
 2747              	 .cfi_def_cfa_offset 0
 2748 005a 7047     	 bx lr
 2749              	 .cfi_endproc
 2750              	.LFE208:
 2752              	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2753              	 .align 1
 2754              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2755              	 .syntax unified
 2756              	 .thumb
 2757              	 .thumb_func
 2758              	 .fpu fpv4-sp-d16
 2760              	XMC_DMA_CH_TriggerDestinationRequest:
 2761              	.LFB209:
 592:../Libraries/XMCLib/src/xmc_dma.c **** 
 593:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 594:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 595:../Libraries/XMCLib/src/xmc_dma.c **** {
 2762              	 .loc 2 595 1
 2763              	 .cfi_startproc
 2764              	 
 2765              	 
 2766              	 
 2767 0000 80B4     	 push {r7}
 2768              	.LCFI175:
 2769              	 .cfi_def_cfa_offset 4
 2770              	 .cfi_offset 7,-4
 2771 0002 83B0     	 sub sp,sp,#12
 2772              	.LCFI176:
 2773              	 .cfi_def_cfa_offset 16
 2774 0004 00AF     	 add r7,sp,#0
 2775              	.LCFI177:
 2776              	 .cfi_def_cfa_register 7
 2777 0006 7860     	 str r0,[r7,#4]
 2778 0008 0846     	 mov r0,r1
 2779 000a 1146     	 mov r1,r2
 2780 000c 1A46     	 mov r2,r3
 2781 000e 0346     	 mov r3,r0
 2782 0010 FB70     	 strb r3,[r7,#3]
 2783 0012 0B46     	 mov r3,r1
 2784 0014 BB70     	 strb r3,[r7,#2]
 2785 0016 1346     	 mov r3,r2
 2786 0018 7B70     	 strb r3,[r7,#1]
 596:../Libraries/XMCLib/src/xmc_dma.c ****   if (type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2787              	 .loc 2 596 6
 2788 001a BB78     	 ldrb r3,[r7,#2]
 2789 001c 002B     	 cmp r3,#0
 2790 001e 06D1     	 bne .L131
 597:../Libraries/XMCLib/src/xmc_dma.c ****   {
 598:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2791              	 .loc 2 598 43
 2792 0020 FB78     	 ldrb r3,[r7,#3]
 2793 0022 40F20112 	 movw r2,#257
 2794 0026 9A40     	 lsls r2,r2,r3
 2795              	 .loc 2 598 23
 2796 0028 7B68     	 ldr r3,[r7,#4]
 2797 002a C3F88023 	 str r2,[r3,#896]
 2798              	.L131:
 599:../Libraries/XMCLib/src/xmc_dma.c ****   }
 600:../Libraries/XMCLib/src/xmc_dma.c **** 
 601:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2799              	 .loc 2 601 6
 2800 002e 7B78     	 ldrb r3,[r7,#1]
 2801 0030 002B     	 cmp r3,#0
 2802 0032 06D0     	 beq .L132
 602:../Libraries/XMCLib/src/xmc_dma.c ****   {
 603:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2803              	 .loc 2 603 40
 2804 0034 FB78     	 ldrb r3,[r7,#3]
 2805 0036 40F20112 	 movw r2,#257
 2806 003a 9A40     	 lsls r2,r2,r3
 2807              	 .loc 2 603 20
 2808 003c 7B68     	 ldr r3,[r7,#4]
 2809 003e C3F89023 	 str r2,[r3,#912]
 2810              	.L132:
 604:../Libraries/XMCLib/src/xmc_dma.c ****   }
 605:../Libraries/XMCLib/src/xmc_dma.c **** 
 606:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2811              	 .loc 2 606 38
 2812 0042 FB78     	 ldrb r3,[r7,#3]
 2813 0044 40F20112 	 movw r2,#257
 2814 0048 9A40     	 lsls r2,r2,r3
 2815              	 .loc 2 606 18
 2816 004a 7B68     	 ldr r3,[r7,#4]
 2817 004c C3F87023 	 str r2,[r3,#880]
 607:../Libraries/XMCLib/src/xmc_dma.c **** }
 2818              	 .loc 2 607 1
 2819 0050 00BF     	 nop
 2820 0052 0C37     	 adds r7,r7,#12
 2821              	.LCFI178:
 2822              	 .cfi_def_cfa_offset 4
 2823 0054 BD46     	 mov sp,r7
 2824              	.LCFI179:
 2825              	 .cfi_def_cfa_register 13
 2826              	 
 2827 0056 5DF8047B 	 ldr r7,[sp],#4
 2828              	.LCFI180:
 2829              	 .cfi_restore 7
 2830              	 .cfi_def_cfa_offset 0
 2831 005a 7047     	 bx lr
 2832              	 .cfi_endproc
 2833              	.LFE209:
 2835              	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2836              	 .align 1
 2837              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2838              	 .syntax unified
 2839              	 .thumb
 2840              	 .thumb_func
 2841              	 .fpu fpv4-sp-d16
 2843              	XMC_DMA_CH_EnableSourceAddressReload:
 2844              	.LFB210:
 608:../Libraries/XMCLib/src/xmc_dma.c **** 
 609:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 610:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 611:../Libraries/XMCLib/src/xmc_dma.c **** {
 2845              	 .loc 2 611 1
 2846              	 .cfi_startproc
 2847              	 
 2848              	 
 2849              	 
 2850 0000 80B4     	 push {r7}
 2851              	.LCFI181:
 2852              	 .cfi_def_cfa_offset 4
 2853              	 .cfi_offset 7,-4
 2854 0002 83B0     	 sub sp,sp,#12
 2855              	.LCFI182:
 2856              	 .cfi_def_cfa_offset 16
 2857 0004 00AF     	 add r7,sp,#0
 2858              	.LCFI183:
 2859              	 .cfi_def_cfa_register 7
 2860 0006 7860     	 str r0,[r7,#4]
 2861 0008 0B46     	 mov r3,r1
 2862 000a FB70     	 strb r3,[r7,#3]
 612:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2863              	 .loc 2 612 25
 2864 000c FB78     	 ldrb r3,[r7,#3]
 2865 000e 7A68     	 ldr r2,[r7,#4]
 2866 0010 5821     	 movs r1,#88
 2867 0012 01FB03F3 	 mul r3,r1,r3
 2868 0016 1344     	 add r3,r3,r2
 2869 0018 4033     	 adds r3,r3,#64
 2870 001a 1A68     	 ldr r2,[r3]
 2871 001c FB78     	 ldrb r3,[r7,#3]
 2872 001e 42F08042 	 orr r2,r2,#1073741824
 2873 0022 7968     	 ldr r1,[r7,#4]
 2874 0024 5820     	 movs r0,#88
 2875 0026 00FB03F3 	 mul r3,r0,r3
 2876 002a 0B44     	 add r3,r3,r1
 2877 002c 4033     	 adds r3,r3,#64
 2878 002e 1A60     	 str r2,[r3]
 613:../Libraries/XMCLib/src/xmc_dma.c **** }
 2879              	 .loc 2 613 1
 2880 0030 00BF     	 nop
 2881 0032 0C37     	 adds r7,r7,#12
 2882              	.LCFI184:
 2883              	 .cfi_def_cfa_offset 4
 2884 0034 BD46     	 mov sp,r7
 2885              	.LCFI185:
 2886              	 .cfi_def_cfa_register 13
 2887              	 
 2888 0036 5DF8047B 	 ldr r7,[sp],#4
 2889              	.LCFI186:
 2890              	 .cfi_restore 7
 2891              	 .cfi_def_cfa_offset 0
 2892 003a 7047     	 bx lr
 2893              	 .cfi_endproc
 2894              	.LFE210:
 2896              	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2897              	 .align 1
 2898              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2899              	 .syntax unified
 2900              	 .thumb
 2901              	 .thumb_func
 2902              	 .fpu fpv4-sp-d16
 2904              	XMC_DMA_CH_DisableSourceAddressReload:
 2905              	.LFB211:
 614:../Libraries/XMCLib/src/xmc_dma.c **** 
 615:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 616:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 617:../Libraries/XMCLib/src/xmc_dma.c **** {
 2906              	 .loc 2 617 1
 2907              	 .cfi_startproc
 2908              	 
 2909              	 
 2910              	 
 2911 0000 80B4     	 push {r7}
 2912              	.LCFI187:
 2913              	 .cfi_def_cfa_offset 4
 2914              	 .cfi_offset 7,-4
 2915 0002 83B0     	 sub sp,sp,#12
 2916              	.LCFI188:
 2917              	 .cfi_def_cfa_offset 16
 2918 0004 00AF     	 add r7,sp,#0
 2919              	.LCFI189:
 2920              	 .cfi_def_cfa_register 7
 2921 0006 7860     	 str r0,[r7,#4]
 2922 0008 0B46     	 mov r3,r1
 2923 000a FB70     	 strb r3,[r7,#3]
 618:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2924              	 .loc 2 618 25
 2925 000c FB78     	 ldrb r3,[r7,#3]
 2926 000e 7A68     	 ldr r2,[r7,#4]
 2927 0010 5821     	 movs r1,#88
 2928 0012 01FB03F3 	 mul r3,r1,r3
 2929 0016 1344     	 add r3,r3,r2
 2930 0018 4033     	 adds r3,r3,#64
 2931 001a 1A68     	 ldr r2,[r3]
 2932 001c FB78     	 ldrb r3,[r7,#3]
 2933 001e 22F08042 	 bic r2,r2,#1073741824
 2934 0022 7968     	 ldr r1,[r7,#4]
 2935 0024 5820     	 movs r0,#88
 2936 0026 00FB03F3 	 mul r3,r0,r3
 2937 002a 0B44     	 add r3,r3,r1
 2938 002c 4033     	 adds r3,r3,#64
 2939 002e 1A60     	 str r2,[r3]
 619:../Libraries/XMCLib/src/xmc_dma.c **** }
 2940              	 .loc 2 619 1
 2941 0030 00BF     	 nop
 2942 0032 0C37     	 adds r7,r7,#12
 2943              	.LCFI190:
 2944              	 .cfi_def_cfa_offset 4
 2945 0034 BD46     	 mov sp,r7
 2946              	.LCFI191:
 2947              	 .cfi_def_cfa_register 13
 2948              	 
 2949 0036 5DF8047B 	 ldr r7,[sp],#4
 2950              	.LCFI192:
 2951              	 .cfi_restore 7
 2952              	 .cfi_def_cfa_offset 0
 2953 003a 7047     	 bx lr
 2954              	 .cfi_endproc
 2955              	.LFE211:
 2957              	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2958              	 .align 1
 2959              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2960              	 .syntax unified
 2961              	 .thumb
 2962              	 .thumb_func
 2963              	 .fpu fpv4-sp-d16
 2965              	XMC_DMA_CH_EnableDestinationAddressReload:
 2966              	.LFB212:
 620:../Libraries/XMCLib/src/xmc_dma.c **** 
 621:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 622:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 623:../Libraries/XMCLib/src/xmc_dma.c **** {
 2967              	 .loc 2 623 1
 2968              	 .cfi_startproc
 2969              	 
 2970              	 
 2971              	 
 2972 0000 80B4     	 push {r7}
 2973              	.LCFI193:
 2974              	 .cfi_def_cfa_offset 4
 2975              	 .cfi_offset 7,-4
 2976 0002 83B0     	 sub sp,sp,#12
 2977              	.LCFI194:
 2978              	 .cfi_def_cfa_offset 16
 2979 0004 00AF     	 add r7,sp,#0
 2980              	.LCFI195:
 2981              	 .cfi_def_cfa_register 7
 2982 0006 7860     	 str r0,[r7,#4]
 2983 0008 0B46     	 mov r3,r1
 2984 000a FB70     	 strb r3,[r7,#3]
 624:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2985              	 .loc 2 624 25
 2986 000c FB78     	 ldrb r3,[r7,#3]
 2987 000e 7A68     	 ldr r2,[r7,#4]
 2988 0010 5821     	 movs r1,#88
 2989 0012 01FB03F3 	 mul r3,r1,r3
 2990 0016 1344     	 add r3,r3,r2
 2991 0018 4033     	 adds r3,r3,#64
 2992 001a 1A68     	 ldr r2,[r3]
 2993 001c FB78     	 ldrb r3,[r7,#3]
 2994 001e 42F00042 	 orr r2,r2,#-2147483648
 2995 0022 7968     	 ldr r1,[r7,#4]
 2996 0024 5820     	 movs r0,#88
 2997 0026 00FB03F3 	 mul r3,r0,r3
 2998 002a 0B44     	 add r3,r3,r1
 2999 002c 4033     	 adds r3,r3,#64
 3000 002e 1A60     	 str r2,[r3]
 625:../Libraries/XMCLib/src/xmc_dma.c **** }
 3001              	 .loc 2 625 1
 3002 0030 00BF     	 nop
 3003 0032 0C37     	 adds r7,r7,#12
 3004              	.LCFI196:
 3005              	 .cfi_def_cfa_offset 4
 3006 0034 BD46     	 mov sp,r7
 3007              	.LCFI197:
 3008              	 .cfi_def_cfa_register 13
 3009              	 
 3010 0036 5DF8047B 	 ldr r7,[sp],#4
 3011              	.LCFI198:
 3012              	 .cfi_restore 7
 3013              	 .cfi_def_cfa_offset 0
 3014 003a 7047     	 bx lr
 3015              	 .cfi_endproc
 3016              	.LFE212:
 3018              	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 3019              	 .align 1
 3020              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 3021              	 .syntax unified
 3022              	 .thumb
 3023              	 .thumb_func
 3024              	 .fpu fpv4-sp-d16
 3026              	XMC_DMA_CH_DisableDestinationAddressReload:
 3027              	.LFB213:
 626:../Libraries/XMCLib/src/xmc_dma.c **** 
 627:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 628:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 629:../Libraries/XMCLib/src/xmc_dma.c **** {
 3028              	 .loc 2 629 1
 3029              	 .cfi_startproc
 3030              	 
 3031              	 
 3032              	 
 3033 0000 80B4     	 push {r7}
 3034              	.LCFI199:
 3035              	 .cfi_def_cfa_offset 4
 3036              	 .cfi_offset 7,-4
 3037 0002 83B0     	 sub sp,sp,#12
 3038              	.LCFI200:
 3039              	 .cfi_def_cfa_offset 16
 3040 0004 00AF     	 add r7,sp,#0
 3041              	.LCFI201:
 3042              	 .cfi_def_cfa_register 7
 3043 0006 7860     	 str r0,[r7,#4]
 3044 0008 0B46     	 mov r3,r1
 3045 000a FB70     	 strb r3,[r7,#3]
 630:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 3046              	 .loc 2 630 25
 3047 000c FB78     	 ldrb r3,[r7,#3]
 3048 000e 7A68     	 ldr r2,[r7,#4]
 3049 0010 5821     	 movs r1,#88
 3050 0012 01FB03F3 	 mul r3,r1,r3
 3051 0016 1344     	 add r3,r3,r2
 3052 0018 4033     	 adds r3,r3,#64
 3053 001a 1A68     	 ldr r2,[r3]
 3054 001c FB78     	 ldrb r3,[r7,#3]
 3055 001e 22F00042 	 bic r2,r2,#-2147483648
 3056 0022 7968     	 ldr r1,[r7,#4]
 3057 0024 5820     	 movs r0,#88
 3058 0026 00FB03F3 	 mul r3,r0,r3
 3059 002a 0B44     	 add r3,r3,r1
 3060 002c 4033     	 adds r3,r3,#64
 3061 002e 1A60     	 str r2,[r3]
 631:../Libraries/XMCLib/src/xmc_dma.c **** }
 3062              	 .loc 2 631 1
 3063 0030 00BF     	 nop
 3064 0032 0C37     	 adds r7,r7,#12
 3065              	.LCFI202:
 3066              	 .cfi_def_cfa_offset 4
 3067 0034 BD46     	 mov sp,r7
 3068              	.LCFI203:
 3069              	 .cfi_def_cfa_register 13
 3070              	 
 3071 0036 5DF8047B 	 ldr r7,[sp],#4
 3072              	.LCFI204:
 3073              	 .cfi_restore 7
 3074              	 .cfi_def_cfa_offset 0
 3075 003a 7047     	 bx lr
 3076              	 .cfi_endproc
 3077              	.LFE213:
 3079              	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 3080              	 .align 1
 3081              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 3082              	 .syntax unified
 3083              	 .thumb
 3084              	 .thumb_func
 3085              	 .fpu fpv4-sp-d16
 3087              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 3088              	.LFB214:
 632:../Libraries/XMCLib/src/xmc_dma.c **** 
 633:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 634:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 635:../Libraries/XMCLib/src/xmc_dma.c **** {
 3089              	 .loc 2 635 1
 3090              	 .cfi_startproc
 3091              	 
 3092              	 
 3093              	 
 3094 0000 80B4     	 push {r7}
 3095              	.LCFI205:
 3096              	 .cfi_def_cfa_offset 4
 3097              	 .cfi_offset 7,-4
 3098 0002 83B0     	 sub sp,sp,#12
 3099              	.LCFI206:
 3100              	 .cfi_def_cfa_offset 16
 3101 0004 00AF     	 add r7,sp,#0
 3102              	.LCFI207:
 3103              	 .cfi_def_cfa_register 7
 3104 0006 7860     	 str r0,[r7,#4]
 3105 0008 0B46     	 mov r3,r1
 3106 000a FB70     	 strb r3,[r7,#3]
 636:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 3107              	 .loc 2 636 25
 3108 000c FB78     	 ldrb r3,[r7,#3]
 3109 000e 7A68     	 ldr r2,[r7,#4]
 3110 0010 5821     	 movs r1,#88
 3111 0012 01FB03F3 	 mul r3,r1,r3
 3112 0016 1344     	 add r3,r3,r2
 3113 0018 4033     	 adds r3,r3,#64
 3114 001a 1A68     	 ldr r2,[r3]
 3115 001c FB78     	 ldrb r3,[r7,#3]
 3116 001e 22F04042 	 bic r2,r2,#-1073741824
 3117 0022 7968     	 ldr r1,[r7,#4]
 3118 0024 5820     	 movs r0,#88
 3119 0026 00FB03F3 	 mul r3,r0,r3
 3120 002a 0B44     	 add r3,r3,r1
 3121 002c 4033     	 adds r3,r3,#64
 3122 002e 1A60     	 str r2,[r3]
 637:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~(GPDMA0_CH_CTLL_LLP_SRC_EN_Msk | GPDMA0_CH_CTLL_LLP_DST_EN_Ms
 3123              	 .loc 2 637 25
 3124 0030 FB78     	 ldrb r3,[r7,#3]
 3125 0032 7A68     	 ldr r2,[r7,#4]
 3126 0034 5821     	 movs r1,#88
 3127 0036 01FB03F3 	 mul r3,r1,r3
 3128 003a 1344     	 add r3,r3,r2
 3129 003c 1833     	 adds r3,r3,#24
 3130 003e 1A68     	 ldr r2,[r3]
 3131 0040 FB78     	 ldrb r3,[r7,#3]
 3132 0042 22F0C052 	 bic r2,r2,#402653184
 3133 0046 7968     	 ldr r1,[r7,#4]
 3134 0048 5820     	 movs r0,#88
 3135 004a 00FB03F3 	 mul r3,r0,r3
 3136 004e 0B44     	 add r3,r3,r1
 3137 0050 1833     	 adds r3,r3,#24
 3138 0052 1A60     	 str r2,[r3]
 638:../Libraries/XMCLib/src/xmc_dma.c **** }
 3139              	 .loc 2 638 1
 3140 0054 00BF     	 nop
 3141 0056 0C37     	 adds r7,r7,#12
 3142              	.LCFI208:
 3143              	 .cfi_def_cfa_offset 4
 3144 0058 BD46     	 mov sp,r7
 3145              	.LCFI209:
 3146              	 .cfi_def_cfa_register 13
 3147              	 
 3148 005a 5DF8047B 	 ldr r7,[sp],#4
 3149              	.LCFI210:
 3150              	 .cfi_restore 7
 3151              	 .cfi_def_cfa_offset 0
 3152 005e 7047     	 bx lr
 3153              	 .cfi_endproc
 3154              	.LFE214:
 3156              	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 3157              	 .align 1
 3158              	 .global XMC_DMA_CH_SetEventHandler
 3159              	 .syntax unified
 3160              	 .thumb
 3161              	 .thumb_func
 3162              	 .fpu fpv4-sp-d16
 3164              	XMC_DMA_CH_SetEventHandler:
 3165              	.LFB215:
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 641:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 642:../Libraries/XMCLib/src/xmc_dma.c **** {
 3166              	 .loc 2 642 1
 3167              	 .cfi_startproc
 3168              	 
 3169              	 
 3170              	 
 3171 0000 80B4     	 push {r7}
 3172              	.LCFI211:
 3173              	 .cfi_def_cfa_offset 4
 3174              	 .cfi_offset 7,-4
 3175 0002 85B0     	 sub sp,sp,#20
 3176              	.LCFI212:
 3177              	 .cfi_def_cfa_offset 24
 3178 0004 00AF     	 add r7,sp,#0
 3179              	.LCFI213:
 3180              	 .cfi_def_cfa_register 7
 3181 0006 F860     	 str r0,[r7,#12]
 3182 0008 0B46     	 mov r3,r1
 3183 000a 7A60     	 str r2,[r7,#4]
 3184 000c FB72     	 strb r3,[r7,#11]
 643:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 644:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 3185              	 .loc 2 644 6
 3186 000e FB68     	 ldr r3,[r7,#12]
 3187 0010 094A     	 ldr r2,.L142
 3188 0012 9342     	 cmp r3,r2
 3189 0014 05D1     	 bne .L139
 645:../Libraries/XMCLib/src/xmc_dma.c ****   {
 646:../Libraries/XMCLib/src/xmc_dma.c **** #else
 647:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 648:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 649:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 3190              	 .loc 2 649 24
 3191 0016 FB7A     	 ldrb r3,[r7,#11]
 3192              	 .loc 2 649 34
 3193 0018 0849     	 ldr r1,.L142+4
 3194 001a 7A68     	 ldr r2,[r7,#4]
 3195 001c 41F82320 	 str r2,[r1,r3,lsl#2]
 650:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 651:../Libraries/XMCLib/src/xmc_dma.c ****   }
 652:../Libraries/XMCLib/src/xmc_dma.c ****   else
 653:../Libraries/XMCLib/src/xmc_dma.c ****   {
 654:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 655:../Libraries/XMCLib/src/xmc_dma.c ****   }
 656:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 657:../Libraries/XMCLib/src/xmc_dma.c **** }
 3196              	 .loc 2 657 1
 3197 0020 04E0     	 b .L141
 3198              	.L139:
 654:../Libraries/XMCLib/src/xmc_dma.c ****   }
 3199              	 .loc 2 654 24
 3200 0022 FB7A     	 ldrb r3,[r7,#11]
 654:../Libraries/XMCLib/src/xmc_dma.c ****   }
 3201              	 .loc 2 654 34
 3202 0024 0649     	 ldr r1,.L142+8
 3203 0026 7A68     	 ldr r2,[r7,#4]
 3204 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 3205              	.L141:
 3206              	 .loc 2 657 1
 3207 002c 00BF     	 nop
 3208 002e 1437     	 adds r7,r7,#20
 3209              	.LCFI214:
 3210              	 .cfi_def_cfa_offset 4
 3211 0030 BD46     	 mov sp,r7
 3212              	.LCFI215:
 3213              	 .cfi_def_cfa_register 13
 3214              	 
 3215 0032 5DF8047B 	 ldr r7,[sp],#4
 3216              	.LCFI216:
 3217              	 .cfi_restore 7
 3218              	 .cfi_def_cfa_offset 0
 3219 0036 7047     	 bx lr
 3220              	.L143:
 3221              	 .align 2
 3222              	.L142:
 3223 0038 00400150 	 .word 1342259200
 3224 003c 00000000 	 .word dma0_event_handlers
 3225 0040 00000000 	 .word dma1_event_handlers
 3226              	 .cfi_endproc
 3227              	.LFE215:
 3229              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 3230              	 .align 1
 3231              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 3232              	 .syntax unified
 3233              	 .thumb
 3234              	 .thumb_func
 3235              	 .fpu fpv4-sp-d16
 3237              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 3238              	.LFB216:
 658:../Libraries/XMCLib/src/xmc_dma.c **** 
 659:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 660:../Libraries/XMCLib/src/xmc_dma.c **** {
 3239              	 .loc 2 660 1
 3240              	 .cfi_startproc
 3241              	 
 3242              	 
 3243 0000 80B5     	 push {r7,lr}
 3244              	.LCFI217:
 3245              	 .cfi_def_cfa_offset 8
 3246              	 .cfi_offset 7,-8
 3247              	 .cfi_offset 14,-4
 3248 0002 84B0     	 sub sp,sp,#16
 3249              	.LCFI218:
 3250              	 .cfi_def_cfa_offset 24
 3251 0004 00AF     	 add r7,sp,#0
 3252              	.LCFI219:
 3253              	 .cfi_def_cfa_register 7
 3254 0006 7860     	 str r0,[r7,#4]
 3255 0008 0B46     	 mov r3,r1
 3256 000a FB70     	 strb r3,[r7,#3]
 661:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 662:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 3257              	 .loc 2 662 27
 3258 000c FB78     	 ldrb r3,[r7,#3]
 3259 000e 7A68     	 ldr r2,[r7,#4]
 3260 0010 5821     	 movs r1,#88
 3261 0012 01FB03F3 	 mul r3,r1,r3
 3262 0016 1344     	 add r3,r3,r2
 3263 0018 4433     	 adds r3,r3,#68
 3264 001a 1B68     	 ldr r3,[r3]
 3265              	 .loc 2 662 63
 3266 001c DB09     	 lsrs r3,r3,#7
 3267              	 .loc 2 662 8
 3268 001e 03F00F03 	 and r3,r3,#15
 3269 0022 FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_dma.c **** 
 664:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 3270              	 .loc 2 664 3
 3271 0024 FB68     	 ldr r3,[r7,#12]
 3272 0026 DBB2     	 uxtb r3,r3
 3273 0028 1946     	 mov r1,r3
 3274 002a 7868     	 ldr r0,[r7,#4]
 3275 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 665:../Libraries/XMCLib/src/xmc_dma.c **** }
 3276              	 .loc 2 665 1
 3277 0030 00BF     	 nop
 3278 0032 1037     	 adds r7,r7,#16
 3279              	.LCFI220:
 3280              	 .cfi_def_cfa_offset 8
 3281 0034 BD46     	 mov sp,r7
 3282              	.LCFI221:
 3283              	 .cfi_def_cfa_register 13
 3284              	 
 3285 0036 80BD     	 pop {r7,pc}
 3286              	 .cfi_endproc
 3287              	.LFE216:
 3289              	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 3290              	 .align 1
 3291              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 3292              	 .syntax unified
 3293              	 .thumb
 3294              	 .thumb_func
 3295              	 .fpu fpv4-sp-d16
 3297              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 3298              	.LFB217:
 666:../Libraries/XMCLib/src/xmc_dma.c **** 
 667:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 668:../Libraries/XMCLib/src/xmc_dma.c **** {
 3299              	 .loc 2 668 1
 3300              	 .cfi_startproc
 3301              	 
 3302              	 
 3303 0000 80B5     	 push {r7,lr}
 3304              	.LCFI222:
 3305              	 .cfi_def_cfa_offset 8
 3306              	 .cfi_offset 7,-8
 3307              	 .cfi_offset 14,-4
 3308 0002 84B0     	 sub sp,sp,#16
 3309              	.LCFI223:
 3310              	 .cfi_def_cfa_offset 24
 3311 0004 00AF     	 add r7,sp,#0
 3312              	.LCFI224:
 3313              	 .cfi_def_cfa_register 7
 3314 0006 7860     	 str r0,[r7,#4]
 3315 0008 0B46     	 mov r3,r1
 3316 000a FB70     	 strb r3,[r7,#3]
 669:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 670:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 3317              	 .loc 2 670 27
 3318 000c FB78     	 ldrb r3,[r7,#3]
 3319 000e 7A68     	 ldr r2,[r7,#4]
 3320 0010 5821     	 movs r1,#88
 3321 0012 01FB03F3 	 mul r3,r1,r3
 3322 0016 1344     	 add r3,r3,r2
 3323 0018 4433     	 adds r3,r3,#68
 3324 001a 1B68     	 ldr r3,[r3]
 3325              	 .loc 2 670 64
 3326 001c DB0A     	 lsrs r3,r3,#11
 3327              	 .loc 2 670 8
 3328 001e 03F00F03 	 and r3,r3,#15
 3329 0022 FB60     	 str r3,[r7,#12]
 671:../Libraries/XMCLib/src/xmc_dma.c **** 
 672:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 3330              	 .loc 2 672 3
 3331 0024 FB68     	 ldr r3,[r7,#12]
 3332 0026 DBB2     	 uxtb r3,r3
 3333 0028 1946     	 mov r1,r3
 3334 002a 7868     	 ldr r0,[r7,#4]
 3335 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 673:../Libraries/XMCLib/src/xmc_dma.c **** }
 3336              	 .loc 2 673 1
 3337 0030 00BF     	 nop
 3338 0032 1037     	 adds r7,r7,#16
 3339              	.LCFI225:
 3340              	 .cfi_def_cfa_offset 8
 3341 0034 BD46     	 mov sp,r7
 3342              	.LCFI226:
 3343              	 .cfi_def_cfa_register 13
 3344              	 
 3345 0036 80BD     	 pop {r7,pc}
 3346              	 .cfi_endproc
 3347              	.LFE217:
 3349              	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 3350              	 .align 1
 3351              	 .global XMC_DMA_IRQHandler
 3352              	 .syntax unified
 3353              	 .thumb
 3354              	 .thumb_func
 3355              	 .fpu fpv4-sp-d16
 3357              	XMC_DMA_IRQHandler:
 3358              	.LFB218:
 674:../Libraries/XMCLib/src/xmc_dma.c **** 
 675:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 676:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 677:../Libraries/XMCLib/src/xmc_dma.c **** {
 3359              	 .loc 2 677 1
 3360              	 .cfi_startproc
 3361              	 
 3362              	 
 3363 0000 80B5     	 push {r7,lr}
 3364              	.LCFI227:
 3365              	 .cfi_def_cfa_offset 8
 3366              	 .cfi_offset 7,-8
 3367              	 .cfi_offset 14,-4
 3368 0002 88B0     	 sub sp,sp,#32
 3369              	.LCFI228:
 3370              	 .cfi_def_cfa_offset 40
 3371 0004 00AF     	 add r7,sp,#0
 3372              	.LCFI229:
 3373              	 .cfi_def_cfa_register 7
 3374 0006 7860     	 str r0,[r7,#4]
 678:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 679:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 680:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 681:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 682:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 683:../Libraries/XMCLib/src/xmc_dma.c **** 
 684:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 685:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 3375              	 .loc 2 685 6
 3376 0008 7B68     	 ldr r3,[r7,#4]
 3377 000a 844A     	 ldr r2,.L185
 3378 000c 9342     	 cmp r3,r2
 3379 000e 02D1     	 bne .L147
 686:../Libraries/XMCLib/src/xmc_dma.c ****   {
 687:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 688:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 3380              	 .loc 2 688 24
 3381 0010 834B     	 ldr r3,.L185+4
 3382 0012 BB61     	 str r3,[r7,#24]
 3383 0014 01E0     	 b .L148
 3384              	.L147:
 689:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 690:../Libraries/XMCLib/src/xmc_dma.c ****   }
 691:../Libraries/XMCLib/src/xmc_dma.c ****   else
 692:../Libraries/XMCLib/src/xmc_dma.c ****   {
 693:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 3385              	 .loc 2 693 24
 3386 0016 834B     	 ldr r3,.L185+8
 3387 0018 BB61     	 str r3,[r7,#24]
 3388              	.L148:
 694:../Libraries/XMCLib/src/xmc_dma.c ****   }
 695:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 696:../Libraries/XMCLib/src/xmc_dma.c **** 
 697:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 3389              	 .loc 2 697 11
 3390 001a 7868     	 ldr r0,[r7,#4]
 3391 001c FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 3392 0020 7861     	 str r0,[r7,#20]
 698:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 3393              	 .loc 2 698 11
 3394 0022 0023     	 movs r3,#0
 3395 0024 FB61     	 str r3,[r7,#28]
 699:../Libraries/XMCLib/src/xmc_dma.c **** 
 700:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 3396              	 .loc 2 700 14
 3397 0026 7B69     	 ldr r3,[r7,#20]
 3398 0028 03F01003 	 and r3,r3,#16
 3399              	 .loc 2 700 6
 3400 002c 002B     	 cmp r3,#0
 3401 002e 2AD0     	 beq .L149
 701:../Libraries/XMCLib/src/xmc_dma.c ****   {
 702:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 3402              	 .loc 2 702 13
 3403 0030 7868     	 ldr r0,[r7,#4]
 3404 0032 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 3405 0036 7861     	 str r0,[r7,#20]
 703:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3406              	 .loc 2 703 11
 3407 0038 21E0     	 b .L150
 3408              	.L154:
 704:../Libraries/XMCLib/src/xmc_dma.c ****     {
 705:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3409              	 .loc 2 705 12
 3410 003a 0122     	 movs r2,#1
 3411 003c FB69     	 ldr r3,[r7,#28]
 3412 003e 02FA03F3 	 lsl r3,r2,r3
 3413 0042 3B61     	 str r3,[r7,#16]
 706:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 3414              	 .loc 2 706 18
 3415 0044 7A69     	 ldr r2,[r7,#20]
 3416 0046 3B69     	 ldr r3,[r7,#16]
 3417 0048 1340     	 ands r3,r3,r2
 3418              	 .loc 2 706 10
 3419 004a 002B     	 cmp r3,#0
 3420 004c 14D0     	 beq .L151
 707:../Libraries/XMCLib/src/xmc_dma.c ****       {
 708:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 3421              	 .loc 2 708 9
 3422 004e FB69     	 ldr r3,[r7,#28]
 3423 0050 DBB2     	 uxtb r3,r3
 3424 0052 1022     	 movs r2,#16
 3425 0054 1946     	 mov r1,r3
 3426 0056 7868     	 ldr r0,[r7,#4]
 3427 0058 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 709:../Libraries/XMCLib/src/xmc_dma.c **** 
 710:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 711:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3428              	 .loc 2 711 43
 3429 005c FB69     	 ldr r3,[r7,#28]
 3430 005e 9B00     	 lsls r3,r3,#2
 3431 0060 BA69     	 ldr r2,[r7,#24]
 3432 0062 1344     	 add r3,r3,r2
 3433              	 .loc 2 711 23
 3434 0064 1B68     	 ldr r3,[r3]
 3435 0066 FB60     	 str r3,[r7,#12]
 712:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3436              	 .loc 2 712 12
 3437 0068 FB68     	 ldr r3,[r7,#12]
 3438 006a 002B     	 cmp r3,#0
 3439 006c 00F0C880 	 beq .L179
 713:../Libraries/XMCLib/src/xmc_dma.c ****         {
 714:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 3440              	 .loc 2 714 11
 3441 0070 FB68     	 ldr r3,[r7,#12]
 3442 0072 1020     	 movs r0,#16
 3443 0074 9847     	 blx r3
 3444              	.LVL0:
 715:../Libraries/XMCLib/src/xmc_dma.c ****         }
 716:../Libraries/XMCLib/src/xmc_dma.c **** 
 717:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3445              	 .loc 2 717 9
 3446 0076 C3E0     	 b .L179
 3447              	.L151:
 718:../Libraries/XMCLib/src/xmc_dma.c ****       }
 719:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3448              	 .loc 2 719 7
 3449 0078 FB69     	 ldr r3,[r7,#28]
 3450 007a 0133     	 adds r3,r3,#1
 3451 007c FB61     	 str r3,[r7,#28]
 3452              	.L150:
 703:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3453              	 .loc 2 703 11
 3454 007e 7B69     	 ldr r3,[r7,#20]
 3455 0080 002B     	 cmp r3,#0
 3456 0082 DAD1     	 bne .L154
 720:../Libraries/XMCLib/src/xmc_dma.c ****     }
 721:../Libraries/XMCLib/src/xmc_dma.c ****   }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 723:../Libraries/XMCLib/src/xmc_dma.c ****   {
 724:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 725:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 727:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 730:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 731:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 732:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 733:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE));
 734:../Libraries/XMCLib/src/xmc_dma.c **** 
 735:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 736:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 737:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 738:../Libraries/XMCLib/src/xmc_dma.c ****         {
 739:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 740:../Libraries/XMCLib/src/xmc_dma.c ****         }
 741:../Libraries/XMCLib/src/xmc_dma.c **** 
 742:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 743:../Libraries/XMCLib/src/xmc_dma.c ****       }
 744:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 745:../Libraries/XMCLib/src/xmc_dma.c ****     }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   }
 747:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 748:../Libraries/XMCLib/src/xmc_dma.c ****   {
 749:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 750:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 751:../Libraries/XMCLib/src/xmc_dma.c ****     {
 752:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 753:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 754:../Libraries/XMCLib/src/xmc_dma.c ****       {
 755:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 756:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 757:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE));
 758:../Libraries/XMCLib/src/xmc_dma.c **** 
 759:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 760:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 761:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 762:../Libraries/XMCLib/src/xmc_dma.c ****         {
 763:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 764:../Libraries/XMCLib/src/xmc_dma.c ****         }
 765:../Libraries/XMCLib/src/xmc_dma.c **** 
 766:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 767:../Libraries/XMCLib/src/xmc_dma.c ****       }
 768:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 769:../Libraries/XMCLib/src/xmc_dma.c ****     }
 770:../Libraries/XMCLib/src/xmc_dma.c ****   }
 771:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 772:../Libraries/XMCLib/src/xmc_dma.c ****   {
 773:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 774:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 775:../Libraries/XMCLib/src/xmc_dma.c ****     {
 776:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 777:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 778:../Libraries/XMCLib/src/xmc_dma.c ****       {
 779:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 780:../Libraries/XMCLib/src/xmc_dma.c **** 
 781:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 782:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 783:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 784:../Libraries/XMCLib/src/xmc_dma.c ****         {
 785:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 786:../Libraries/XMCLib/src/xmc_dma.c ****         }
 787:../Libraries/XMCLib/src/xmc_dma.c **** 
 788:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 789:../Libraries/XMCLib/src/xmc_dma.c ****       }
 790:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 791:../Libraries/XMCLib/src/xmc_dma.c ****     }
 792:../Libraries/XMCLib/src/xmc_dma.c ****   }
 793:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 794:../Libraries/XMCLib/src/xmc_dma.c ****   {
 795:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 796:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 797:../Libraries/XMCLib/src/xmc_dma.c ****     {
 798:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 799:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 800:../Libraries/XMCLib/src/xmc_dma.c ****       {
 801:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 802:../Libraries/XMCLib/src/xmc_dma.c **** 
 803:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 804:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 805:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 806:../Libraries/XMCLib/src/xmc_dma.c ****         {
 807:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 808:../Libraries/XMCLib/src/xmc_dma.c ****         }
 809:../Libraries/XMCLib/src/xmc_dma.c **** 
 810:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 811:../Libraries/XMCLib/src/xmc_dma.c ****       }
 812:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 813:../Libraries/XMCLib/src/xmc_dma.c ****     }
 814:../Libraries/XMCLib/src/xmc_dma.c ****   }
 815:../Libraries/XMCLib/src/xmc_dma.c ****   else
 816:../Libraries/XMCLib/src/xmc_dma.c ****   {
 817:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 818:../Libraries/XMCLib/src/xmc_dma.c ****   }
 819:../Libraries/XMCLib/src/xmc_dma.c **** 
 820:../Libraries/XMCLib/src/xmc_dma.c **** }
 3457              	 .loc 2 820 1
 3458 0084 C5E0     	 b .L183
 3459              	.L149:
 722:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3460              	 .loc 2 722 19
 3461 0086 7B69     	 ldr r3,[r7,#20]
 3462 0088 03F00103 	 and r3,r3,#1
 722:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3463              	 .loc 2 722 11
 3464 008c 002B     	 cmp r3,#0
 3465 008e 2AD0     	 beq .L156
 724:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3466              	 .loc 2 724 13
 3467 0090 7868     	 ldr r0,[r7,#4]
 3468 0092 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 3469 0096 7861     	 str r0,[r7,#20]
 725:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3470              	 .loc 2 725 11
 3471 0098 21E0     	 b .L157
 3472              	.L161:
 727:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3473              	 .loc 2 727 12
 3474 009a 0122     	 movs r2,#1
 3475 009c FB69     	 ldr r3,[r7,#28]
 3476 009e 02FA03F3 	 lsl r3,r2,r3
 3477 00a2 3B61     	 str r3,[r7,#16]
 728:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3478              	 .loc 2 728 17
 3479 00a4 7A69     	 ldr r2,[r7,#20]
 3480 00a6 3B69     	 ldr r3,[r7,#16]
 3481 00a8 1340     	 ands r3,r3,r2
 728:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3482              	 .loc 2 728 10
 3483 00aa 002B     	 cmp r3,#0
 3484 00ac 14D0     	 beq .L158
 730:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 3485              	 .loc 2 730 9
 3486 00ae FB69     	 ldr r3,[r7,#28]
 3487 00b0 DBB2     	 uxtb r3,r3
 3488 00b2 0F22     	 movs r2,#15
 3489 00b4 1946     	 mov r1,r3
 3490 00b6 7868     	 ldr r0,[r7,#4]
 3491 00b8 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 736:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3492              	 .loc 2 736 43
 3493 00bc FB69     	 ldr r3,[r7,#28]
 3494 00be 9B00     	 lsls r3,r3,#2
 3495 00c0 BA69     	 ldr r2,[r7,#24]
 3496 00c2 1344     	 add r3,r3,r2
 736:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3497              	 .loc 2 736 23
 3498 00c4 1B68     	 ldr r3,[r3]
 3499 00c6 FB60     	 str r3,[r7,#12]
 737:../Libraries/XMCLib/src/xmc_dma.c ****         {
 3500              	 .loc 2 737 12
 3501 00c8 FB68     	 ldr r3,[r7,#12]
 3502 00ca 002B     	 cmp r3,#0
 3503 00cc 00F09A80 	 beq .L180
 739:../Libraries/XMCLib/src/xmc_dma.c ****         }
 3504              	 .loc 2 739 11
 3505 00d0 FB68     	 ldr r3,[r7,#12]
 3506 00d2 0120     	 movs r0,#1
 3507 00d4 9847     	 blx r3
 3508              	.LVL1:
 742:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3509              	 .loc 2 742 9
 3510 00d6 95E0     	 b .L180
 3511              	.L158:
 744:../Libraries/XMCLib/src/xmc_dma.c ****     }
 3512              	 .loc 2 744 7
 3513 00d8 FB69     	 ldr r3,[r7,#28]
 3514 00da 0133     	 adds r3,r3,#1
 3515 00dc FB61     	 str r3,[r7,#28]
 3516              	.L157:
 725:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3517              	 .loc 2 725 11
 3518 00de 7B69     	 ldr r3,[r7,#20]
 3519 00e0 002B     	 cmp r3,#0
 3520 00e2 DAD1     	 bne .L161
 3521              	 .loc 2 820 1
 3522 00e4 95E0     	 b .L183
 3523              	.L156:
 747:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3524              	 .loc 2 747 19
 3525 00e6 7B69     	 ldr r3,[r7,#20]
 3526 00e8 03F00203 	 and r3,r3,#2
 747:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3527              	 .loc 2 747 11
 3528 00ec 002B     	 cmp r3,#0
 3529 00ee 29D0     	 beq .L162
 749:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3530              	 .loc 2 749 13
 3531 00f0 7868     	 ldr r0,[r7,#4]
 3532 00f2 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3533 00f6 7861     	 str r0,[r7,#20]
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3534              	 .loc 2 750 11
 3535 00f8 20E0     	 b .L163
 3536              	.L167:
 752:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3537              	 .loc 2 752 12
 3538 00fa 0122     	 movs r2,#1
 3539 00fc FB69     	 ldr r3,[r7,#28]
 3540 00fe 02FA03F3 	 lsl r3,r2,r3
 3541 0102 3B61     	 str r3,[r7,#16]
 753:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3542              	 .loc 2 753 17
 3543 0104 7A69     	 ldr r2,[r7,#20]
 3544 0106 3B69     	 ldr r3,[r7,#16]
 3545 0108 1340     	 ands r3,r3,r2
 753:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3546              	 .loc 2 753 10
 3547 010a 002B     	 cmp r3,#0
 3548 010c 13D0     	 beq .L164
 755:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 3549              	 .loc 2 755 9
 3550 010e FB69     	 ldr r3,[r7,#28]
 3551 0110 DBB2     	 uxtb r3,r3
 3552 0112 0E22     	 movs r2,#14
 3553 0114 1946     	 mov r1,r3
 3554 0116 7868     	 ldr r0,[r7,#4]
 3555 0118 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 760:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3556              	 .loc 2 760 43
 3557 011c FB69     	 ldr r3,[r7,#28]
 3558 011e 9B00     	 lsls r3,r3,#2
 3559 0120 BA69     	 ldr r2,[r7,#24]
 3560 0122 1344     	 add r3,r3,r2
 760:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3561              	 .loc 2 760 23
 3562 0124 1B68     	 ldr r3,[r3]
 3563 0126 FB60     	 str r3,[r7,#12]
 761:../Libraries/XMCLib/src/xmc_dma.c ****         {
 3564              	 .loc 2 761 12
 3565 0128 FB68     	 ldr r3,[r7,#12]
 3566 012a 002B     	 cmp r3,#0
 3567 012c 6CD0     	 beq .L181
 763:../Libraries/XMCLib/src/xmc_dma.c ****         }
 3568              	 .loc 2 763 11
 3569 012e FB68     	 ldr r3,[r7,#12]
 3570 0130 0220     	 movs r0,#2
 3571 0132 9847     	 blx r3
 3572              	.LVL2:
 766:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3573              	 .loc 2 766 9
 3574 0134 68E0     	 b .L181
 3575              	.L164:
 768:../Libraries/XMCLib/src/xmc_dma.c ****     }
 3576              	 .loc 2 768 7
 3577 0136 FB69     	 ldr r3,[r7,#28]
 3578 0138 0133     	 adds r3,r3,#1
 3579 013a FB61     	 str r3,[r7,#28]
 3580              	.L163:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3581              	 .loc 2 750 11
 3582 013c 7B69     	 ldr r3,[r7,#20]
 3583 013e 002B     	 cmp r3,#0
 3584 0140 DBD1     	 bne .L167
 3585              	 .loc 2 820 1
 3586 0142 66E0     	 b .L183
 3587              	.L162:
 771:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3588              	 .loc 2 771 19
 3589 0144 7B69     	 ldr r3,[r7,#20]
 3590 0146 03F00403 	 and r3,r3,#4
 771:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3591              	 .loc 2 771 11
 3592 014a 002B     	 cmp r3,#0
 3593 014c 29D0     	 beq .L168
 773:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3594              	 .loc 2 773 13
 3595 014e 7868     	 ldr r0,[r7,#4]
 3596 0150 FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3597 0154 7861     	 str r0,[r7,#20]
 774:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3598              	 .loc 2 774 11
 3599 0156 20E0     	 b .L169
 3600              	.L173:
 776:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3601              	 .loc 2 776 12
 3602 0158 0122     	 movs r2,#1
 3603 015a FB69     	 ldr r3,[r7,#28]
 3604 015c 02FA03F3 	 lsl r3,r2,r3
 3605 0160 3B61     	 str r3,[r7,#16]
 777:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3606              	 .loc 2 777 17
 3607 0162 7A69     	 ldr r2,[r7,#20]
 3608 0164 3B69     	 ldr r3,[r7,#16]
 3609 0166 1340     	 ands r3,r3,r2
 777:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3610              	 .loc 2 777 10
 3611 0168 002B     	 cmp r3,#0
 3612 016a 13D0     	 beq .L170
 779:../Libraries/XMCLib/src/xmc_dma.c **** 
 3613              	 .loc 2 779 9
 3614 016c FB69     	 ldr r3,[r7,#28]
 3615 016e DBB2     	 uxtb r3,r3
 3616 0170 0422     	 movs r2,#4
 3617 0172 1946     	 mov r1,r3
 3618 0174 7868     	 ldr r0,[r7,#4]
 3619 0176 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 782:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3620              	 .loc 2 782 43
 3621 017a FB69     	 ldr r3,[r7,#28]
 3622 017c 9B00     	 lsls r3,r3,#2
 3623 017e BA69     	 ldr r2,[r7,#24]
 3624 0180 1344     	 add r3,r3,r2
 782:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3625              	 .loc 2 782 23
 3626 0182 1B68     	 ldr r3,[r3]
 3627 0184 FB60     	 str r3,[r7,#12]
 783:../Libraries/XMCLib/src/xmc_dma.c ****         {
 3628              	 .loc 2 783 12
 3629 0186 FB68     	 ldr r3,[r7,#12]
 3630 0188 002B     	 cmp r3,#0
 3631 018a 3FD0     	 beq .L182
 785:../Libraries/XMCLib/src/xmc_dma.c ****         }
 3632              	 .loc 2 785 11
 3633 018c FB68     	 ldr r3,[r7,#12]
 3634 018e 0420     	 movs r0,#4
 3635 0190 9847     	 blx r3
 3636              	.LVL3:
 788:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3637              	 .loc 2 788 9
 3638 0192 3BE0     	 b .L182
 3639              	.L170:
 790:../Libraries/XMCLib/src/xmc_dma.c ****     }
 3640              	 .loc 2 790 7
 3641 0194 FB69     	 ldr r3,[r7,#28]
 3642 0196 0133     	 adds r3,r3,#1
 3643 0198 FB61     	 str r3,[r7,#28]
 3644              	.L169:
 774:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3645              	 .loc 2 774 11
 3646 019a 7B69     	 ldr r3,[r7,#20]
 3647 019c 002B     	 cmp r3,#0
 3648 019e DBD1     	 bne .L173
 3649              	 .loc 2 820 1
 3650 01a0 37E0     	 b .L183
 3651              	.L168:
 793:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3652              	 .loc 2 793 19
 3653 01a2 7B69     	 ldr r3,[r7,#20]
 3654 01a4 03F00803 	 and r3,r3,#8
 793:../Libraries/XMCLib/src/xmc_dma.c ****   {
 3655              	 .loc 2 793 11
 3656 01a8 002B     	 cmp r3,#0
 3657 01aa 32D0     	 beq .L183
 795:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3658              	 .loc 2 795 13
 3659 01ac 7868     	 ldr r0,[r7,#4]
 3660 01ae FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3661 01b2 7861     	 str r0,[r7,#20]
 796:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3662              	 .loc 2 796 11
 3663 01b4 20E0     	 b .L174
 3664              	.L178:
 798:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3665              	 .loc 2 798 12
 3666 01b6 0122     	 movs r2,#1
 3667 01b8 FB69     	 ldr r3,[r7,#28]
 3668 01ba 02FA03F3 	 lsl r3,r2,r3
 3669 01be 3B61     	 str r3,[r7,#16]
 799:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3670              	 .loc 2 799 17
 3671 01c0 7A69     	 ldr r2,[r7,#20]
 3672 01c2 3B69     	 ldr r3,[r7,#16]
 3673 01c4 1340     	 ands r3,r3,r2
 799:../Libraries/XMCLib/src/xmc_dma.c ****       {
 3674              	 .loc 2 799 10
 3675 01c6 002B     	 cmp r3,#0
 3676 01c8 13D0     	 beq .L175
 801:../Libraries/XMCLib/src/xmc_dma.c **** 
 3677              	 .loc 2 801 9
 3678 01ca FB69     	 ldr r3,[r7,#28]
 3679 01cc DBB2     	 uxtb r3,r3
 3680 01ce 0822     	 movs r2,#8
 3681 01d0 1946     	 mov r1,r3
 3682 01d2 7868     	 ldr r0,[r7,#4]
 3683 01d4 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 804:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3684              	 .loc 2 804 43
 3685 01d8 FB69     	 ldr r3,[r7,#28]
 3686 01da 9B00     	 lsls r3,r3,#2
 3687 01dc BA69     	 ldr r2,[r7,#24]
 3688 01de 1344     	 add r3,r3,r2
 804:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3689              	 .loc 2 804 23
 3690 01e0 1B68     	 ldr r3,[r3]
 3691 01e2 FB60     	 str r3,[r7,#12]
 805:../Libraries/XMCLib/src/xmc_dma.c ****         {
 3692              	 .loc 2 805 12
 3693 01e4 FB68     	 ldr r3,[r7,#12]
 3694 01e6 002B     	 cmp r3,#0
 3695 01e8 12D0     	 beq .L184
 807:../Libraries/XMCLib/src/xmc_dma.c ****         }
 3696              	 .loc 2 807 11
 3697 01ea FB68     	 ldr r3,[r7,#12]
 3698 01ec 0820     	 movs r0,#8
 3699 01ee 9847     	 blx r3
 3700              	.LVL4:
 810:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3701              	 .loc 2 810 9
 3702 01f0 0EE0     	 b .L184
 3703              	.L175:
 812:../Libraries/XMCLib/src/xmc_dma.c ****     }
 3704              	 .loc 2 812 7
 3705 01f2 FB69     	 ldr r3,[r7,#28]
 3706 01f4 0133     	 adds r3,r3,#1
 3707 01f6 FB61     	 str r3,[r7,#28]
 3708              	.L174:
 796:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3709              	 .loc 2 796 11
 3710 01f8 7B69     	 ldr r3,[r7,#20]
 3711 01fa 002B     	 cmp r3,#0
 3712 01fc DBD1     	 bne .L178
 3713              	 .loc 2 820 1
 3714 01fe 08E0     	 b .L183
 3715              	.L179:
 717:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3716              	 .loc 2 717 9
 3717 0200 00BF     	 nop
 3718 0202 06E0     	 b .L183
 3719              	.L180:
 742:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3720              	 .loc 2 742 9
 3721 0204 00BF     	 nop
 3722 0206 04E0     	 b .L183
 3723              	.L181:
 766:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3724              	 .loc 2 766 9
 3725 0208 00BF     	 nop
 3726 020a 02E0     	 b .L183
 3727              	.L182:
 788:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3728              	 .loc 2 788 9
 3729 020c 00BF     	 nop
 3730 020e 00E0     	 b .L183
 3731              	.L184:
 810:../Libraries/XMCLib/src/xmc_dma.c ****       }
 3732              	 .loc 2 810 9
 3733 0210 00BF     	 nop
 3734              	.L183:
 3735              	 .loc 2 820 1
 3736 0212 00BF     	 nop
 3737 0214 2037     	 adds r7,r7,#32
 3738              	.LCFI230:
 3739              	 .cfi_def_cfa_offset 8
 3740 0216 BD46     	 mov sp,r7
 3741              	.LCFI231:
 3742              	 .cfi_def_cfa_register 13
 3743              	 
 3744 0218 80BD     	 pop {r7,pc}
 3745              	.L186:
 3746 021a 00BF     	 .align 2
 3747              	.L185:
 3748 021c 00400150 	 .word 1342259200
 3749 0220 00000000 	 .word dma0_event_handlers
 3750 0224 00000000 	 .word dma1_event_handlers
 3751              	 .cfi_endproc
 3752              	.LFE218:
 3754              	 .text
 3755              	.Letext0:
 3756              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 3757              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 3758              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 3759              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc4_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:17     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:24     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:64     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:70     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:109    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:115    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:154    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:160    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:199    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:205    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:244    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:250    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
    {standard input}:289    .bss.dma0_event_handlers:00000000 $d
    {standard input}:292    .bss.dma0_event_handlers:00000000 dma0_event_handlers
    {standard input}:295    .bss.dma1_event_handlers:00000000 $d
    {standard input}:298    .bss.dma1_event_handlers:00000000 dma1_event_handlers
    {standard input}:301    .text.XMC_DMA_Init:00000000 $t
    {standard input}:308    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:351    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:344    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:406    .text.XMC_DMA_Enable:0000003c $d
    {standard input}:413    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:420    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:476    .text.XMC_DMA_Disable:0000003c $d
    {standard input}:483    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:490    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:644    .text.XMC_DMA_IsEnabled:000000d8 $d
    {standard input}:651    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:658    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:782    .text.XMC_DMA_EnableRequestLine:00000094 $d
    {standard input}:788    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:795    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:867    .text.XMC_DMA_DisableRequestLine:0000004c $d
    {standard input}:873    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:880    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:974    .text.XMC_DMA_ClearRequestLine:00000074 $d
    {standard input}:980    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:987    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:1062   .text.XMC_DMA_GetOverrunStatus:00000058 $d
    {standard input}:1068   .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:1075   .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:1139   .text.XMC_DMA_ClearOverrunStatus:0000003c $d
    {standard input}:1145   .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:1152   .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:1211   .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:1218   .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:1268   .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:1275   .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:2217   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1629   .text.XMC_DMA_CH_Init:0000024c $d
    {standard input}:1638   .text.XMC_DMA_CH_Init:00000270 $t
    {standard input}:1772   .text.XMC_DMA_CH_Init:00000378 $d
    {standard input}:1775   .text.XMC_DMA_CH_Init:0000037c $t
    {standard input}:1861   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1868   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1922   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1929   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1983   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1990   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:2044   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:2051   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:2127   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:2134   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:2210   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:2293   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:2300   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:2386   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:2393   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2467   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2474   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2528   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2535   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2609   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2616   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2670   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2677   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2753   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2760   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2836   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2843   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2897   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2904   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2958   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2965   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:3019   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:3026   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:3080   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:3087   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:3157   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:3164   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:3223   .text.XMC_DMA_CH_SetEventHandler:00000038 $d
    {standard input}:3230   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:3237   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:3290   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:3297   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:3350   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:3357   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3748   .text.XMC_DMA_IRQHandler:0000021c $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_IsPeripheralClockGated
