   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "retain_xmc4.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_FLASH_SetMargin,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_FLASH_SetMargin:
  25              	.LFB139:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc4_flash.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @file xmc4_flash.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @date 2019-05-06
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2014-12-10:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Initial <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2015-02-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Updated for Documentation related changes<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2015-08-17:
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Added the below API's to the public interface.
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *       1. XMC_FLASH_Reset
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *       2. XMC_FLASH_ErasePhysicalSector
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *       3. XMC_FLASH_EraseUCB
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *       4. XMC_FLASH_ResumeProtection
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *       5. XMC_FLASH_RepairPhysicalSector
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Added support for XMC4800/4700 devices
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2015-12-07:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Fix XMC_FLASH_READ_ACCESS_TIME for XMC43, 47 and 48 devices
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2016-03-18:
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Fix implementation of XMC_PREFETCH_EnableInstructionBuffer and XMC_PREFETCH_DisableInstruc
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2016-03-22:
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Fix implementation of XMC_PREFETCH_InvalidateInstructionBuffer
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2018-02-08:
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Added XMC_FLASH_InstallBMI()
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2019-03-30:
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Fix compilation warnings
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * 2019-05-06:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *     - Moved definitions of XMC_FLASH_ProgramPage() and XMC_FLASH_EraseSector() from xmc_flash.h
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @endcond
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #ifndef XMC4_FLASH_H
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC4_FLASH_H
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**************************************************************************************************
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * HEADER FILES
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  **************************************************************************************************
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #include "xmc_common.h"
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #if UC_FAMILY == XMC4
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @addtogroup XMClib XMC Peripheral Library
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @{
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @addtogroup FLASH
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @{
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**************************************************************************************************
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * MACROS
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  **************************************************************************************************
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_UNCACHED_BASE    (0x0C000000U) /**< Non cached flash starting address of for
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                       XMC4 family of microcontrollers */
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_WORDS_PER_PAGE   (64UL)        /**< Number of words in a page (256 bytes / 4 byte
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_BYTES_PER_PAGE   (256UL)       /**< Number of bytes in a  page*/
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_UCB0             (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x0000UL) /**< Starting a
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          Configurab
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_UCB1             (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x0400UL) /**< Starting a
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          Configurab
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_UCB2             (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x0800UL) /**< Starting a
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          Configurab
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_BYTES_PER_UCB    (1024UL) /**< Number of bytes in a user configurable block*/
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**< Note : Total number of Sectors depends on the flash size of the controller. So while using the
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *          operations ensure that sector is available, other may lead to flash error.
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_0         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x00000UL) /**<Starting a
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_1         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x04000UL) /**<Starting a
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_2         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x08000UL) /**<Starting a
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_3         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x0C000UL) /**<Starting a
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_4         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x10000UL) /**<Starting a
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_5         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x14000UL) /**<Starting a
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_6         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x18000UL) /**<Starting a
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_7         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x1C000UL) /**<Starting a
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_8         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x20000UL) /**<Starting a
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_9         (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x40000UL) /**<Starting a
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_10        (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x80000UL) /**<Starting a
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_11        (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xC0000UL) /**<Starting a
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_12        (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x100000UL) /**<Starting 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_13        (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x140000UL) /**<Starting 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_14        (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x180000UL) /**<Starting 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_SECTOR_15        (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x1C0000UL) /**<Starting 
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_0     (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x00000UL) /**<Starting a
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_4     (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x10000UL) /**<Starting a
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_8     (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x20000UL) /**<Starting a
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_9     (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x40000UL) /**<Starting a
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_10    (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x80000UL) /**<Starting a
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_11    (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xC0000UL) /**<Starting a
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_12    (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x100000UL) /**<Starting 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_13    (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x140000UL) /**<Starting 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_14    (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x180000UL) /**<Starting 
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_PHY_SECTOR_15    (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x1C0000UL) /**<Starting 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                          physical s
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #if UC_SERIES == XMC45 || UC_SERIES == XMC43 || UC_SERIES == XMC47 || UC_SERIES == XMC48
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_READ_ACCESS_TIME (22E-9F) /* Flash read access time  */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #else
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_READ_ACCESS_TIME (20E-9F)
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #endif
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #define XMC_FLASH_BMI_VALID (uint32_t)(0x1 << 31) /**< This is always 0 in UCB. The copy of this BM
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**************************************************************************************************
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * ENUMS
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  **************************************************************************************************
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *  Defines the return status of the API.
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** typedef enum XMC_FLASH_STATUS
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_OK                               = 0U,                 /**< Operation completed 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_BUSY                             = FLASH_FSR_PBUSY_Msk, /**< API cannot proceed 
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_PROGRAMMING_STATE                = FLASH_FSR_PROG_Msk, /**< Write page is in pro
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_ERASE_STATE                      = FLASH_FSR_ERASE_Msk, /**< Erase page is in pr
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_PAGE_MODE                        = FLASH_FSR_PFPAGE_Msk, /**< Flash is in page m
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                  of PFLASH is in us
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_OPERATION_ERROR                  = FLASH_FSR_PFOPER_Msk, /**< Flash Operation ab
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_COMMAND_SEQUENCE_ERROR           = FLASH_FSR_SQER_Msk, /**< Improper address or 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                operation */
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_PROTECTION_ERROR                 = FLASH_FSR_PROER_Msk, /**< Flash operation add
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                 sector */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_SINGLE_BIT_ERROR_AND_CORRECTION  = FLASH_FSR_PFSBER_Msk, /**< Single bit error d
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                  corrected */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_DOUBLE_BIT_ERROR                 = FLASH_FSR_PFDBER_Msk, /**< Multiple bit error
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_PROTECTION_INSTALLED             = FLASH_FSR_PROIN_Msk, /**< Confirmation of the
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                 protection is succe
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED        = FLASH_FSR_RPROIN_Msk, /**< Confirmation of re
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                  protection is succ
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STATE   = FLASH_FSR_RPRODIS_Msk, /**< Read or/and write
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                   temporarily disab
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_WRITE_PROTECTION_INSTALLED_UCB0  = FLASH_FSR_WPROIN0_Msk, /**< Sector write prot
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                   for user-0 */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_WRITE_PROTECTION_INSTALLED_UCB1  = FLASH_FSR_WPROIN1_Msk, /**< Sector write prot
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                   for user-1 */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_WRITE_PROTECTION_INSTALLED_UCB2  = FLASH_FSR_WPROIN2_Msk, /**< Sector OTP protec
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                   for user-2 */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_WRITE_PROTECTION_DISABLED_UCB0   = FLASH_FSR_WPRODIS0_Msk, /**< Sector write pro
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                   for user-0 */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_WRITE_PROTECTION_DISABLED_UCB1   = FLASH_FSR_WPRODIS1_Msk, /**< Sector write pro
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                   for user-1 */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_SLEEP_MODE                       = FLASH_FSR_SLM_Msk, /**< Indicates flash in sl
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_STATUS_VERIFY_ERROR                     = (int32_t)FLASH_FSR_VER_Msk, /**< Write verifi
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                        verification
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** } XMC_FLASH_STATUS_t;
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *  Provides the options to select flash margin read settings of the for quality assurance.
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** typedef enum XMC_FLASH_MARGIN
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_MARGIN_DEFAULT = 0x0U << FLASH_MARP_MARGIN_Pos, /**< Default margin */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_MARGIN_TIGHT0  = 0x1U << FLASH_MARP_MARGIN_Pos, /**< Sub-optimal 0-bits are read as 1s 
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_MARGIN_TIGHT1  = 0x4U << FLASH_MARP_MARGIN_Pos  /**< Sub-optimal 1-bits are read as 0s 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** } XMC_FLASH_MARGIN_t;
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *  Provides the options to select flash operational events
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** typedef enum XMC_FLASH_EVENT
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_EVENT_VERIFY_AND_OPERATION_ERROR = 0x01U << FLASH_FCON_VOPERM_Pos, /**< Flash verify an
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****                                                                                     event */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_EVENT_COMMAND_SEQUENCE_ERROR     = 0x02U << FLASH_FCON_VOPERM_Pos, /**< Flash command s
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_EVENT_PROTECTION_ERROR           = 0x04U << FLASH_FCON_VOPERM_Pos, /**< Flash protectio
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_EVENT_SINGLE_BIT_ERROR           = 0x08U << FLASH_FCON_VOPERM_Pos, /**< Flash single bi
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_EVENT_DOUBLE_BIT_ERROR           = 0x20U << FLASH_FCON_VOPERM_Pos, /**< Flash double bi
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_EVENT_END_OF_BUSY                = (int32_t)(0x80U << FLASH_FCON_VOPERM_Pos) /**< Flash
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** } XMC_FLASH_EVENT_t;
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Provides the options to select sectors for write protection and select global read protection.
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * The members can be combined using 'OR' operator for multiple selection.<br>
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** typedef enum XMC_FLASH_PROTECTION
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_0      = 0x0001UL,  /**< Sector 0 write protection */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_1      = 0x0002UL,  /**< Sector 1 write protection */
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_2      = 0x0004UL,  /**< Sector 3 write protection */
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_3      = 0x0008UL,  /**< Sector 3 write protection */
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_4      = 0x0010UL,  /**< Sector 4 write protection */
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_5      = 0x0020UL,  /**< Sector 5 write protection */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_6      = 0x0040UL,  /**< Sector 6 write protection */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_7      = 0x0080UL,  /**< Sector 7 write protection */
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_8      = 0x0100UL,  /**< Sector 8 write protection */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTOR_9      = 0x0200UL,  /**< Sector 9 write protection */
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTORS_10_11 = 0x0400UL,  /**< Sector 10 and 11 write protection */
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTORS_12_13 = 0x0800UL,  /**< Sector 12 and 13 write protection */
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_WRITE_SECTORS_14_15 = 0x1000UL,  /**< Sector 14 and 15 write protection */
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_PROTECTION_READ_GLOBAL         = 0x8000UL   /**< Global read protection (Applicable for
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** } XMC_FLASH_PROTECTION_t;
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * BMI Word configuration
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** typedef enum XMC_FLASH_BMI
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_NORMAL = 0x0UL, /**< Normal boot mode */
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_ASC_BSL = 0x1UL, /**< ASC BSL boot mode */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_CAN_BSL = 0x3UL, /**< CAN BSL boot mode */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_PSRAM = 0x4UL, /**< PSRAM boot mode */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_ABM0 = 0x5UL, /**< ABM0 boot mode */
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_ABM1 = 0x6UL, /**< ABM1 boot mode */
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_BOOT_MODE_FALLBACK_ABM = 0x7UL, /**< Fallback ABM boot mode */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_MAC_BIT_MSK = 0x1UL << 5, /**< Valid MAC address part of BMI string */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_IPV4_BIT_MSK = 0x1UL << 7, /**< Ethernet IP extension contains a IPv4 address */
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_IPV6_BIT_MSK = 0x1UL << 8, /**< Ethernet IP extension contains a IPv6 address */
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_USB_BIT_MAK = 0x1UL << 10, /**< Valid USB Serial Number part of BMI string */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_PAI_PSRAM_MSK = 0x1UL << 12, /**< Parity of PSRAM to be initialized by SSW */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_PAI_DSRAM_MSK = 0x1UL << 13, /**< Parity of DSRAM1 to be initialized by SSW */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_PAI_CMSRAM_MSK = 0x1UL << 14, /**< Parity of DSRAM-Comm to be initialized by SSW */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   XMC_FLASH_BMI_SPEEDUP_BIT_MSK = 0x1UL << 15, /**< Clock Tree of the device to be setup to maximum
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** } XMC_FLASH_BMI_t;
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * BMI String configuration
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** typedef struct XMC_FLASH_BMI_STRING
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   uint32_t bmi; /**< See ::XMC_FLASH_BMI_t */
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   uint8_t mac_addr[6]; /**< MAC address extension */
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   uint8_t ip_extension[16]; /**< Ethernet IP extension */
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   uint8_t usb_serial_no[4]; /**< USB Serial Number */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   uint32_t reserved;
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   uint16_t reserved1;
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** } XMC_FLASH_BMI_STRING_t;
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**************************************************************************************************
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * API PROTOTYPES
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  **************************************************************************************************
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #ifdef __cplusplus
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** extern "C" {
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** #endif
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param address    Pointer to the starting address of flash page from where the programming start
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param data       Pointer to the source address where targeted data is located.
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Programs a single flash page associated with the specified \a address.\n\n  XMC4000 flash can be
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * granularity of 256 bytes page using this API. Before entering into page write process, it clears
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * bits inside status register. It starts the write process by issuing the page mode command follow
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * command which loads the targeted \a data blocks into internal assembly buffer. Finally, it issue
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * command which programs the \a data into flash. Call XMC_FLASH_GetStatus() API after calling this
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * programming operation.\n
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Note:</b><br>
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Flash will be busy state during write is ongoing, hence no operations allowed until it completes
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * None
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data);
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param address Pointer to the starting address of the page to be erased.
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Erases a sector associated with the specified \a address.\n\n  Before erase, it clears the error
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * FSR status register. Issues the erase sector command sequence with the specified starting \a add
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * erase process. Call XMC_FLASH_GetStatus() API after calling this API, to verify the erase operat
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * None
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** void XMC_FLASH_EraseSector(uint32_t *address);
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Enables the wait state for error correction.process, It enables one additional wait state for EC
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * bit of FCON register.\n
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMC_FLASH_DisableWaitStateForECC()\n\n\n
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_EnableWaitStateForECC(void)
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->FCON |= FLASH_FCON_WSECPF_Msk;
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Disables the wait state for error correction.\n\n Removes additional wait state for ECC by reset
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * FCON register.\n
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMC_FLASH_EnableWaitStateForECC()\n\n\n
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_DisableWaitStateForECC(void)
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->FCON &= (uint32_t)~FLASH_FCON_WSECPF_Msk;
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Enables dynamic idle mode feature to save power.\n\n It switches off the PFLASH read path when n
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * pending. Hence power is saved marginally. This slightly reduces the flash read performance becau
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * pre-fetching is disabled.It sets the FCON register IDLE bit to enable this feature.
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMC_FLASH_DisableDynamicIdle()\n\n\n
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_EnableDynamicIdle(void)
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->FCON |= FLASH_FCON_IDLE_Msk;
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Disables dynamic idle mode feature.\n\n It resets the FCON register IDLE bit to disable this fea
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * flash read operation is selected.
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMC_FLASH_EnableDynamicIdle()\n\n\n
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_DisableDynamicIdle(void)
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->FCON &= (uint32_t)~FLASH_FCON_IDLE_Msk;
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Enables sleep mode of the PFLASH.\n\n Sleep mode is enabled by setting the bit FCON.SLEEP.
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Note:</b><br>
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * fCPU must be equal or above 1 MHz when wake-up request is triggered.
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMC_FLASH_DisableSleepRequest()\n\n\n
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_EnableSleepRequest(void)
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->FCON |= (uint32_t)FLASH_FCON_SLEEP_Msk;
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Wake-up the PFLASH from sleep.\n\n Wakes-up from sleep is done by clearing the bit FCON.SLEEP, i
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * bit, or wake-up is initiated by releasing the external sleep signal from SCU.
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Note:</b><br>
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * fCPU must be equal or above 1 MHz when wake-up request is triggered.
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * XMC_FLASH_EnableSleepRequest()\n\n\n
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_DisableSleepRequest(void)
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->FCON &= (uint32_t)~FLASH_FCON_SLEEP_Msk;
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param margin PFLASH margin selection. Use type @ref XMC_FLASH_MARGIN_t.
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Sets the read margin levels for checking the healthiness of flash data.\n\n Configures the margi
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * MARP register with the specified \a margin level. It changes the margin levels for read operatio
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * problematic array bits.
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * None
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_SetMargin(const XMC_FLASH_MARGIN_t margin)
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
  27              	 .loc 1 473 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->MARP = (FLASH0->MARP & (uint32_t)~FLASH_MARP_MARGIN_Msk) | margin;
  44              	 .loc 1 474 25
  45 000a 094B     	 ldr r3,.L2
  46 000c 03F58053 	 add r3,r3,#4096
  47 0010 9B69     	 ldr r3,[r3,#24]
  48              	 .loc 1 474 32
  49 0012 23F00F02 	 bic r2,r3,#15
  50              	 .loc 1 474 68
  51 0016 FB79     	 ldrb r3,[r7,#7]
  52              	 .loc 1 474 9
  53 0018 0549     	 ldr r1,.L2
  54              	 .loc 1 474 68
  55 001a 1343     	 orrs r3,r3,r2
  56              	 .loc 1 474 16
  57 001c 01F58052 	 add r2,r1,#4096
  58 0020 9361     	 str r3,[r2,#24]
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
  59              	 .loc 1 475 1
  60 0022 00BF     	 nop
  61 0024 0C37     	 adds r7,r7,#12
  62              	.LCFI3:
  63              	 .cfi_def_cfa_offset 4
  64 0026 BD46     	 mov sp,r7
  65              	.LCFI4:
  66              	 .cfi_def_cfa_register 13
  67              	 
  68 0028 5DF8047B 	 ldr r7,[sp],#4
  69              	.LCFI5:
  70              	 .cfi_restore 7
  71              	 .cfi_def_cfa_offset 0
  72 002c 7047     	 bx lr
  73              	.L3:
  74 002e 00BF     	 .align 2
  75              	.L2:
  76 0030 00100058 	 .word 1476399104
  77              	 .cfi_endproc
  78              	.LFE139:
  80              	 .section .text.XMC_FLASH_EnableDoubleBitErrorTrap,"ax",%progbits
  81              	 .align 1
  82              	 .syntax unified
  83              	 .thumb
  84              	 .thumb_func
  85              	 .fpu fpv4-sp-d16
  87              	XMC_FLASH_EnableDoubleBitErrorTrap:
  88              	.LFB140:
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Enables double bit error trap.\n\n. It enables by setting MARP register bit TRAPDIS.
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * None
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_EnableDoubleBitErrorTrap(void)
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
  89              	 .loc 1 490 1
  90              	 .cfi_startproc
  91              	 
  92              	 
  93              	 
  94 0000 80B4     	 push {r7}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 4
  97              	 .cfi_offset 7,-4
  98 0002 00AF     	 add r7,sp,#0
  99              	.LCFI7:
 100              	 .cfi_def_cfa_register 7
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->MARP &= (uint32_t)~FLASH_MARP_TRAPDIS_Msk;
 101              	 .loc 1 491 16
 102 0004 074B     	 ldr r3,.L5
 103 0006 03F58053 	 add r3,r3,#4096
 104 000a 9B69     	 ldr r3,[r3,#24]
 105 000c 054A     	 ldr r2,.L5
 106 000e 23F40043 	 bic r3,r3,#32768
 107 0012 02F58052 	 add r2,r2,#4096
 108 0016 9361     	 str r3,[r2,#24]
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 109              	 .loc 1 492 1
 110 0018 00BF     	 nop
 111 001a BD46     	 mov sp,r7
 112              	.LCFI8:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 001c 5DF8047B 	 ldr r7,[sp],#4
 116              	.LCFI9:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 0020 7047     	 bx lr
 120              	.L6:
 121 0022 00BF     	 .align 2
 122              	.L5:
 123 0024 00100058 	 .word 1476399104
 124              	 .cfi_endproc
 125              	.LFE140:
 127              	 .section .text.XMC_FLASH_DisableDoubleBitErrorTrap,"ax",%progbits
 128              	 .align 1
 129              	 .syntax unified
 130              	 .thumb
 131              	 .thumb_func
 132              	 .fpu fpv4-sp-d16
 134              	XMC_FLASH_DisableDoubleBitErrorTrap:
 135              	.LFB141:
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** 
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** /**
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @param None
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * @return None
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Description:</b><br>
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * Disables the trap generation for double bit error by clearing MARP register bit TRAPDIS.\n\n The
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * trap can be disabled for margin checks and also redirected to an error interrupt. Any time durin
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * double bit error trap can be enabled back by calling XMC_FLASH_EnableDoubleBitErrorTrap() API.
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  *
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * \par<b>Related APIs:</b><BR>
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  * None
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****  */
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** __STATIC_INLINE void XMC_FLASH_DisableDoubleBitErrorTrap(void)
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** {
 136              	 .loc 1 509 1
 137              	 .cfi_startproc
 138              	 
 139              	 
 140              	 
 141 0000 80B4     	 push {r7}
 142              	.LCFI10:
 143              	 .cfi_def_cfa_offset 4
 144              	 .cfi_offset 7,-4
 145 0002 00AF     	 add r7,sp,#0
 146              	.LCFI11:
 147              	 .cfi_def_cfa_register 7
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h ****   FLASH0->MARP |= FLASH_MARP_TRAPDIS_Msk;
 148              	 .loc 1 510 16
 149 0004 074B     	 ldr r3,.L8
 150 0006 03F58053 	 add r3,r3,#4096
 151 000a 9B69     	 ldr r3,[r3,#24]
 152 000c 054A     	 ldr r2,.L8
 153 000e 43F40043 	 orr r3,r3,#32768
 154 0012 02F58052 	 add r2,r2,#4096
 155 0016 9361     	 str r3,[r2,#24]
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc4_flash.h **** }
 156              	 .loc 1 511 1
 157 0018 00BF     	 nop
 158 001a BD46     	 mov sp,r7
 159              	.LCFI12:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 001c 5DF8047B 	 ldr r7,[sp],#4
 163              	.LCFI13:
 164              	 .cfi_restore 7
 165              	 .cfi_def_cfa_offset 0
 166 0020 7047     	 bx lr
 167              	.L9:
 168 0022 00BF     	 .align 2
 169              	.L8:
 170 0024 00100058 	 .word 1476399104
 171              	 .cfi_endproc
 172              	.LFE141:
 174              	 .section .text.XMC_FCE_InitializeSeedValue,"ax",%progbits
 175              	 .align 1
 176              	 .syntax unified
 177              	 .thumb
 178              	 .thumb_func
 179              	 .fpu fpv4-sp-d16
 181              	XMC_FCE_InitializeSeedValue:
 182              	.LFB151:
 183              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc/xmc_fce.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @file xmc_fce.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @date 2019-12-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Initial
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * 2015-05-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Description updated <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * 2015-06-20:
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * 2019-03-30:
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Added XMC_FCE_CalculateCRC16Ex() and XMC_FCE_CalculateCRC32Ex()
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * 2019-12-02:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @endcond
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #ifndef XMC_FCE_H
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_H
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * HEADER FILES
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #include "xmc_common.h"
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #if defined (FCE)
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @addtogroup XMClib
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @{
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @addtogroup FCE
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @brief Flexible CRC Engine(FCE) driver for the XMC microcontroller family.
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The FCE provides a parallel implementation of Cyclic Redundancy Code (CRC)
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * algorithms. The current FCE version for the XMC4000 microcontroller family implements the
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * IEEE 802.3 ethernet CRC32, the CCITT CRC16 and the SAE J1850 CRC8 polynomials.
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The primary target of FCE is to be used as an hardware acceleration engine for software
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * applications or operating systems services using CRC signatures.
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @image html fce_overview.png
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @image latex ../images/fce_overview.png
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE Features: <br>
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @image html fce_polynomials.png
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @image latex ../images/fce_polynomials.png
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 0 and 1: IEEE 802.3 CRC32 ethernet polynomial: 0x04C11DB71 <br>
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 2: CCITT CRC16 polynomial: 0x1021 <br>
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 3: SAE J1850 CRC8 polynomial: 0x1D <br>
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *    * Configuration Registers enable to control the CRC operation and perform automatic checksum 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *      the end of a message. <br>
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *    * Extended register interface to control reliability of FCE execution in safety applications.
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *    * Error notification scheme via dedicated interrupt node for: <br>
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****         a)Transient error detection: Error interrupt generation (maskable) with local status regist
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 		  (cleared by software) <br>
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****         b)Checksum failure: Error interrupt generation (maskable) with local status register (clear
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****      FCE provides one interrupt line to the interrupt system. Each CRC engine has its own set of fl
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @{
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * MACROS
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC32_0        FCE_KE0 /**< Kernel 0 <br> */
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC32_1        FCE_KE1 /**< Kernel 1 <br> */
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC16          FCE_KE2 /**< Kernel 2 <br> */
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC8           FCE_KE3 /**< Kernel 3 <br> */
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFIN_SET      (1U) /**< Enables input reflection */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFIN_RESET    (0U) /**< Disables input reflection */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFOUT_SET     (1U) /**< Enables output reflection */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFOUT_RESET   (0U) /**< Disables output reflection */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_INVSEL_SET     (1U) /**< Enables output inversion */
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_INVSEL_RESET   (0U) /**< Disables output inversion */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * ENUMS
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE interrupt configuration
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_INTERRUPT
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CMI = FCE_KE_CFG_CMI_Msk, /**< Enables CRC Mismatch interrupt \n*/
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CEI = FCE_KE_CFG_CEI_Msk, /**< Enables Configuration error interrupt \n*/
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_LEI = FCE_KE_CFG_LEI_Msk, /**< Enables Length error interrupt \n*/
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_BEI = FCE_KE_CFG_BEI_Msk  /**< Enables Bus error interrupt \n*/
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_INTERRUPT_t;
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE operation configuration
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_OPERATION
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CCE = FCE_KE_CFG_CCE_Msk, /**< Enables CRC check */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_ALR = FCE_KE_CFG_ALR_Msk  /**< Enables Automatic length reload */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_OPERATION_t;
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE algorithm configuration
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_ALGO
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_REFIN  = FCE_KE_CFG_REFIN_Msk,  /**< Enables input byte reflection */
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_REFOUT = FCE_KE_CFG_REFOUT_Msk, /**< Enables Final CRC reflection */
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_XSEL   = FCE_KE_CFG_XSEL_Msk    /**< Enables output inversion */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_ALGO_t;
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE status flag configuration
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_STS_FLAG
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_MISMATCH_CRC = FCE_KE_STS_CMF_Msk, /**< CRC Mismatch flag */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_CONFIG_ERROR = FCE_KE_STS_CEF_Msk, /**< Configuration Error flag */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_LENGTH_ERROR = FCE_KE_STS_LEF_Msk, /**< Length Error flag */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_BUS_ERROR    = FCE_KE_STS_BEF_Msk	 /**< Bus Error flag */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_STS_FLAG_t;
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE control configuration
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CTR_TEST
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CRC   = FCE_KE_CTR_FCM_Msk,      /**< Forces CRC mismatch */
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CFG   = FCE_KE_CTR_FRM_CFG_Msk,	/**< Forces CFG Register mismatch */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CHECK = FCE_KE_CTR_FRM_CHECK_Msk /**< Forces CRC Check Register mismatch */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CTR_TEST_t;
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE status enumeration
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_STATUS
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_OK = 0, /**< Returns OK on success */
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_BUSY,   /**< Returns BUSY when API is busy with a previous request */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_ERROR   /**< Returns ERROR when API cannot fulfil request */
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_STATUS_t;
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * DATA STRUCTURES
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE kernel
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef FCE_KE_TypeDef XMC_FCE_Kernel_t;
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /* Anonymous structure/union guard start */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #if defined (__CC_ARM)
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #pragma push
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #pragma anon_unions
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #elif defined (__TASKING__)
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #pragma warning 586
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #endif
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @brief XMC_FCE configuration structure
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef struct XMC_FCE_CONFIG
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   union
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   {
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****     uint32_t regval;
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****     struct
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****     {
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t               : 8;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t config_refin  : 1;  /**< Enables byte-wise reflection */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t config_refout : 1;  /**< Enables bit-wise reflection */
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t config_xsel   : 1;  /**< Enables output inversion */
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t               : 21; /**< Reserved bits */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****     };
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   };
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_t;
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /* Anonymous structure/union guard end */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #if defined (__CC_ARM)
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #pragma pop
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #elif defined (__TASKING__)
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #pragma warning restore
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #endif
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE handler
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** typedef struct XMC_FCE
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_Kernel_t *kernel_ptr;    /**< FCE Kernel Pointer */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CONFIG_t fce_cfg_update; /**< FCE CFG register update */
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   uint32_t seedvalue;              /**< CRC seed value to be used */
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_t;
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * API PROTOTYPES
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #ifdef __cplusplus
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** extern "C" {
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** #endif
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module revision number
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Read FCE module revision number <br>
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The value of a module revision starts with 0x01 (first revision). The current revision
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * number is 0x01.
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleRev(void)
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   return (uint32_t)(FCE->ID & FCE_ID_MOD_REV_Msk);
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** }
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module type
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Read the FCE module type <br>
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The return value is currently 0xC0. It defines the module as a 32-bit module.
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleType(void)
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   return (uint32_t)((FCE->ID & FCE_ID_MOD_TYPE_Msk) >> FCE_ID_MOD_TYPE_Pos);
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** }
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module number
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Read FCE module number <br>
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The return value for FCE module is currently 0x00CA.
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleNumber(void)
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   return ((uint32_t)((FCE->ID & FCE_ID_MOD_NUMBER_Msk) >> FCE_ID_MOD_NUMBER_Pos));
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** }
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return bool Disable status
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Return the disable status <br>
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The function reads the FCE module disable status (DISS) bit. It returns "true" if
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * set, "false" otherwise.
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE bool XMC_FCE_Get_DisableStatus(void)
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   return (bool)(FCE->CLC &= (uint32_t)~FCE_CLC_DISS_Msk);
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** }
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Disable the FCE module <br>
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The function asserts the FCE peripheral reset and sets the DISR bit in the CLC
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * register.
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * All pending transactions running on the bus slave interface must be completed before
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * entering the disabled state.
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** void XMC_FCE_Disable(void);
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Enable the FCE module <br>
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The function de-asserts the peripheral reset and clears the DISR bit CLC register.
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** void XMC_FCE_Enable(void);
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return ::XMC_FCE_STATUS_t
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Initialize the FCE engine <br>
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The function sets to the CFG and CRC registers with the FCE configuration and
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * seeds values. The function always returns XMC_FCE_STATUS_SUCCESS.
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The software must first ensure that the CRC kernel is properly configured with the
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * initial CRC value (seed value).
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** XMC_FCE_STATUS_t XMC_FCE_Init(const XMC_FCE_t *const engine);
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** 
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** /**
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @param seedvalue Initial CRC value
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * Initialize FCE seed value
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  *
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  * The function sets the initial CRC (seed) value in the CRC register.
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****  */
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_InitializeSeedValue(const XMC_FCE_t *const engine, uint32_t seedvalue)
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** {
 184              	 .loc 2 373 1
 185              	 .cfi_startproc
 186              	 
 187              	 
 188              	 
 189 0000 80B4     	 push {r7}
 190              	.LCFI14:
 191              	 .cfi_def_cfa_offset 4
 192              	 .cfi_offset 7,-4
 193 0002 83B0     	 sub sp,sp,#12
 194              	.LCFI15:
 195              	 .cfi_def_cfa_offset 16
 196 0004 00AF     	 add r7,sp,#0
 197              	.LCFI16:
 198              	 .cfi_def_cfa_register 7
 199 0006 7860     	 str r0,[r7,#4]
 200 0008 3960     	 str r1,[r7]
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CRC = seedvalue;
 201              	 .loc 2 374 9
 202 000a 7B68     	 ldr r3,[r7,#4]
 203 000c 1B68     	 ldr r3,[r3]
 204              	 .loc 2 374 27
 205 000e 3A68     	 ldr r2,[r7]
 206 0010 9A61     	 str r2,[r3,#24]
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/XMCLib/inc\xmc_fce.h **** }
 207              	 .loc 2 375 1
 208 0012 00BF     	 nop
 209 0014 0C37     	 adds r7,r7,#12
 210              	.LCFI17:
 211              	 .cfi_def_cfa_offset 4
 212 0016 BD46     	 mov sp,r7
 213              	.LCFI18:
 214              	 .cfi_def_cfa_register 13
 215              	 
 216 0018 5DF8047B 	 ldr r7,[sp],#4
 217              	.LCFI19:
 218              	 .cfi_restore 7
 219              	 .cfi_def_cfa_offset 0
 220 001c 7047     	 bx lr
 221              	 .cfi_endproc
 222              	.LFE151:
 224              	 .section .rodata.e_eeprom_xmc4_fce,"a"
 225              	 .align 2
 228              	e_eeprom_xmc4_fce:
 229 0000 20000250 	 .word 1342308384
 230 0004 00       	 .space 1
 231 0005 07       	 .byte 7
 232 0006 0000     	 .space 2
 233 0008 00000000 	 .word 0
 234              	 .section .bss.e_eeprom_xmc4_data_buffer,"aw",%nobits
 235              	 .align 2
 238              	e_eeprom_xmc4_data_buffer:
 239 0000 00000000 	 .space 2048
 239      00000000 
 239      00000000 
 239      00000000 
 239      00000000 
 240              	 .section .data.e_eeprom_xmc4_sector_info,"aw"
 241              	 .align 2
 244              	e_eeprom_xmc4_sector_info:
 245 0000 00000000 	 .word 0
 246 0004 00000000 	 .word 0
 247 0008 FFFFFFFF 	 .word -1
 248 000c 00000000 	 .word 0
 249              	 .global RETAIN
 250              	 .section .bss.RETAIN,"aw",%nobits
 251              	 .align 2
 254              	RETAIN:
 255 0000 00       	 .space 1
 256              	 .section .text.E_EEPROM_XMC4_Init,"ax",%progbits
 257              	 .align 1
 258              	 .global E_EEPROM_XMC4_Init
 259              	 .syntax unified
 260              	 .thumb
 261              	 .thumb_func
 262              	 .fpu fpv4-sp-d16
 264              	E_EEPROM_XMC4_Init:
 265              	.LFB163:
 266              	 .file 3 "../MainAlg/retain_xmc4.c"
   1:../MainAlg/retain_xmc4.c **** /*
   2:../MainAlg/retain_xmc4.c ****  * retain.c
   3:../MainAlg/retain_xmc4.c ****  *
   4:../MainAlg/retain_xmc4.c ****  *  Created on: Jul 19, 2021
   5:../MainAlg/retain_xmc4.c ****  *      Author: Primary
   6:../MainAlg/retain_xmc4.c ****  */
   7:../MainAlg/retain_xmc4.c **** 
   8:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
   9:../MainAlg/retain_xmc4.c **** /* Includes ------------------------------------------------------------------*/
  10:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  11:../MainAlg/retain_xmc4.c **** #include "retain_xmc4.h"
  12:../MainAlg/retain_xmc4.c **** 
  13:../MainAlg/retain_xmc4.c **** 
  14:../MainAlg/retain_xmc4.c **** 
  15:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  16:../MainAlg/retain_xmc4.c **** /* Private define ------------------------------------------------------------*/
  17:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  18:../MainAlg/retain_xmc4.c **** 
  19:../MainAlg/retain_xmc4.c **** /* EEPROM SECTOR numbers definitions */
  20:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_0    ((uint32_t)0U)
  21:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_1    ((uint32_t)1U)
  22:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_2    ((uint32_t)2U)
  23:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_3    ((uint32_t)3U)
  24:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_MAX_SECTORS ((uint32_t)4U)
  25:../MainAlg/retain_xmc4.c **** 
  26:../MainAlg/retain_xmc4.c **** /* Offset positions for CRC and user DATA definitions*/
  27:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_BCC_OFFSET  ((uint8_t)1U)
  28:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_DATA_OFFSET ((uint8_t)2U)
  29:../MainAlg/retain_xmc4.c **** 
  30:../MainAlg/retain_xmc4.c **** /* All four logical sector starting addresses defined */
  31:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR0_START_ADDR   (XMC_FLASH_UNCACHED_BASE + 0x10000U)
  32:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR1_START_ADDR   (XMC_FLASH_UNCACHED_BASE + 0x14000U)
  33:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR2_START_ADDR   (XMC_FLASH_UNCACHED_BASE + 0x18000U)
  34:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR3_START_ADDR   (XMC_FLASH_UNCACHED_BASE + 0x1C000U)
  35:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR4_START_ADDR   (XMC_FLASH_UNCACHED_BASE + 0x20000U)
  36:../MainAlg/retain_xmc4.c **** 
  37:../MainAlg/retain_xmc4.c **** /* Local definitions for internal usage*/
  38:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_EMPTY                   ((uint32_t)0x0U)
  39:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_ALL_SECTORS_FILLED      ((uint8_t)0x0FU)
  40:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_MIN_WORDS_PER_PAGE      ((uint32_t)64U)
  41:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_SIZE             ((uint32_t)0x00004000U)
  42:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_POSITION_MASK    ((uint32_t)0x0000C000U)
  43:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_SECTOR_POSITION         ((uint32_t)14U)
  44:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_WORKING_BUFFER_SIZE     ((uint32_t)E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE - (u
  45:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_DATA_SIZE_FOR_CRC       ((uint32_t)E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE - (u
  46:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_MAX_PAGES               ((uint32_t)E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE >> (
  47:../MainAlg/retain_xmc4.c **** #define E_EEPROM_XMC4_MAX_WORDS               ((uint32_t)E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE >> (
  48:../MainAlg/retain_xmc4.c **** 
  49:../MainAlg/retain_xmc4.c **** 
  50:../MainAlg/retain_xmc4.c **** 
  51:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  52:../MainAlg/retain_xmc4.c **** /* Private typedef -----------------------------------------------------------*/
  53:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  54:../MainAlg/retain_xmc4.c **** 
  55:../MainAlg/retain_xmc4.c **** /** Data structure to hold the complete state data information of sector*/
  56:../MainAlg/retain_xmc4.c **** typedef struct E_EEPROM_XMC4_SECTOR_INFO
  57:../MainAlg/retain_xmc4.c **** {
  58:../MainAlg/retain_xmc4.c ****   uint32_t next_free_start_addr;
  59:../MainAlg/retain_xmc4.c **** 
  60:../MainAlg/retain_xmc4.c ****   uint32_t flash_data_addr;
  61:../MainAlg/retain_xmc4.c **** 
  62:../MainAlg/retain_xmc4.c ****   uint32_t  current_sector;
  63:../MainAlg/retain_xmc4.c **** 
  64:../MainAlg/retain_xmc4.c ****   uint32_t  erase_state;
  65:../MainAlg/retain_xmc4.c **** 
  66:../MainAlg/retain_xmc4.c **** } E_EEPROM_XMC4_SECTOR_INFO_t;
  67:../MainAlg/retain_xmc4.c **** 
  68:../MainAlg/retain_xmc4.c **** /* Data structure to hold the User Data block information (BCC + CRC + DATA)*/
  69:../MainAlg/retain_xmc4.c **** typedef struct E_EEPROM_XMC4_RAM_BUFFER
  70:../MainAlg/retain_xmc4.c **** {
  71:../MainAlg/retain_xmc4.c ****   uint32_t crc;
  72:../MainAlg/retain_xmc4.c **** 
  73:../MainAlg/retain_xmc4.c ****   uint32_t block_cycle_count;
  74:../MainAlg/retain_xmc4.c **** 
  75:../MainAlg/retain_xmc4.c ****   uint8_t  eeprom_data[E_EEPROM_XMC4_WORKING_BUFFER_SIZE];
  76:../MainAlg/retain_xmc4.c **** 
  77:../MainAlg/retain_xmc4.c **** } E_EEPROM_XMC4_RAM_BUFFER_t;
  78:../MainAlg/retain_xmc4.c **** 
  79:../MainAlg/retain_xmc4.c **** 
  80:../MainAlg/retain_xmc4.c **** 
  81:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  82:../MainAlg/retain_xmc4.c **** /* Private macro -------------------------------------------------------------*/
  83:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  84:../MainAlg/retain_xmc4.c **** 
  85:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  86:../MainAlg/retain_xmc4.c **** /* Private constants ---------------------------------------------------------*/
  87:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
  88:../MainAlg/retain_xmc4.c **** 
  89:../MainAlg/retain_xmc4.c **** /* FCE configuration data structure definition */
  90:../MainAlg/retain_xmc4.c **** static const XMC_FCE_t e_eeprom_xmc4_fce =
  91:../MainAlg/retain_xmc4.c **** {
  92:../MainAlg/retain_xmc4.c ****  .kernel_ptr     = (XMC_FCE_Kernel_t*)(void*)E_EEPROM_XMC4_FCE_KERNEL_BASE,
  93:../MainAlg/retain_xmc4.c ****  .fce_cfg_update = {{
  94:../MainAlg/retain_xmc4.c ****                      .config_refin  = 1U,
  95:../MainAlg/retain_xmc4.c ****                      .config_refout = 1U,
  96:../MainAlg/retain_xmc4.c ****                      .config_xsel   = 1U
  97:../MainAlg/retain_xmc4.c ****                    }},
  98:../MainAlg/retain_xmc4.c ****  .seedvalue      = 0U
  99:../MainAlg/retain_xmc4.c **** };
 100:../MainAlg/retain_xmc4.c **** 
 101:../MainAlg/retain_xmc4.c **** 
 102:../MainAlg/retain_xmc4.c **** 
 103:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 104:../MainAlg/retain_xmc4.c **** /* Private variables ---------------------------------------------------------*/
 105:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 106:../MainAlg/retain_xmc4.c **** 
 107:../MainAlg/retain_xmc4.c **** /* RAM data buffer structure definition */
 108:../MainAlg/retain_xmc4.c **** static E_EEPROM_XMC4_RAM_BUFFER_t e_eeprom_xmc4_data_buffer;
 109:../MainAlg/retain_xmc4.c **** 
 110:../MainAlg/retain_xmc4.c **** /* Sector info data structure definition */
 111:../MainAlg/retain_xmc4.c **** static E_EEPROM_XMC4_SECTOR_INFO_t  e_eeprom_xmc4_sector_info  =
 112:../MainAlg/retain_xmc4.c **** {
 113:../MainAlg/retain_xmc4.c ****   .next_free_start_addr = 0U,
 114:../MainAlg/retain_xmc4.c ****   .flash_data_addr      = 0U,
 115:../MainAlg/retain_xmc4.c ****   .current_sector       = 0xFFFFFFFFU,
 116:../MainAlg/retain_xmc4.c ****   .erase_state          = 0U
 117:../MainAlg/retain_xmc4.c **** };
 118:../MainAlg/retain_xmc4.c **** 
 119:../MainAlg/retain_xmc4.c **** // EEPROM memory class instance
 120:../MainAlg/retain_xmc4.c **** E_EEPROM_XMC4_t RETAIN = { .initialized  = false };
 121:../MainAlg/retain_xmc4.c **** 
 122:../MainAlg/retain_xmc4.c **** 
 123:../MainAlg/retain_xmc4.c **** 
 124:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 125:../MainAlg/retain_xmc4.c **** /* External variables --------------------------------------------------------*/
 126:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 127:../MainAlg/retain_xmc4.c **** 
 128:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 129:../MainAlg/retain_xmc4.c **** /* Private function prototypes -----------------------------------------------*/
 130:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 131:../MainAlg/retain_xmc4.c **** static E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_lWriteToFlash(void);
 132:../MainAlg/retain_xmc4.c **** 
 133:../MainAlg/retain_xmc4.c **** static void E_EEPROM_XMC4_lCopyFlashToRam(void);
 134:../MainAlg/retain_xmc4.c **** 
 135:../MainAlg/retain_xmc4.c **** static void E_EEPROM_XMC4_lInitReadSectorInfo(uint32_t sector);
 136:../MainAlg/retain_xmc4.c **** 
 137:../MainAlg/retain_xmc4.c **** static E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_lInitEraseStateMachine(void);
 138:../MainAlg/retain_xmc4.c **** 
 139:../MainAlg/retain_xmc4.c **** static uint32_t E_EEPROM_XMC4_lCalculateCRC(const uint32_t *data_start_addr);
 140:../MainAlg/retain_xmc4.c **** 
 141:../MainAlg/retain_xmc4.c **** 
 142:../MainAlg/retain_xmc4.c **** 
 143:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 144:../MainAlg/retain_xmc4.c **** /* Public Functions ----------------------------------------------------------*/
 145:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 146:../MainAlg/retain_xmc4.c **** E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_Init(E_EEPROM_XMC4_t *const handle)
 147:../MainAlg/retain_xmc4.c **** {
 267              	 .loc 3 147 1
 268              	 .cfi_startproc
 269              	 
 270              	 
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI20:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 84B0     	 sub sp,sp,#16
 277              	.LCFI21:
 278              	 .cfi_def_cfa_offset 24
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI22:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 148:../MainAlg/retain_xmc4.c ****   uint32_t sector_count;
 149:../MainAlg/retain_xmc4.c ****   E_EEPROM_XMC4_STATUS_t status ;
 150:../MainAlg/retain_xmc4.c **** 
 151:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_Init:Invalid handle Pointer", (handle != NULL));
 152:../MainAlg/retain_xmc4.c **** 
 153:../MainAlg/retain_xmc4.c ****   status = E_EEPROM_XMC4_STATUS_OK;
 283              	 .loc 3 153 10
 284 0008 0023     	 movs r3,#0
 285 000a FB72     	 strb r3,[r7,#11]
 154:../MainAlg/retain_xmc4.c **** 
 155:../MainAlg/retain_xmc4.c ****   if (handle->initialized == (bool)false)
 286              	 .loc 3 155 13
 287 000c 7B68     	 ldr r3,[r7,#4]
 288 000e 1B78     	 ldrb r3,[r3]
 289              	 .loc 3 155 27
 290 0010 83F00103 	 eor r3,r3,#1
 291 0014 DBB2     	 uxtb r3,r3
 292              	 .loc 3 155 6
 293 0016 002B     	 cmp r3,#0
 294 0018 4CD0     	 beq .L12
 156:../MainAlg/retain_xmc4.c ****   {
 157:../MainAlg/retain_xmc4.c ****     e_eeprom_xmc4_data_buffer.block_cycle_count = 0U;
 295              	 .loc 3 157 49
 296 001a 294B     	 ldr r3,.L19
 297 001c 0022     	 movs r2,#0
 298 001e 5A60     	 str r2,[r3,#4]
 158:../MainAlg/retain_xmc4.c ****     e_eeprom_xmc4_sector_info.flash_data_addr = E_EEPROM_XMC4_EMPTY;
 299              	 .loc 3 158 47
 300 0020 284B     	 ldr r3,.L19+4
 301 0022 0022     	 movs r2,#0
 302 0024 5A60     	 str r2,[r3,#4]
 159:../MainAlg/retain_xmc4.c **** 
 160:../MainAlg/retain_xmc4.c ****     XMC_FLASH_SetMargin(XMC_FLASH_MARGIN_TIGHT0);
 303              	 .loc 3 160 5
 304 0026 0120     	 movs r0,#1
 305 0028 FFF7FEFF 	 bl XMC_FLASH_SetMargin
 161:../MainAlg/retain_xmc4.c ****     XMC_FLASH_DisableDoubleBitErrorTrap();
 306              	 .loc 3 161 5
 307 002c FFF7FEFF 	 bl XMC_FLASH_DisableDoubleBitErrorTrap
 162:../MainAlg/retain_xmc4.c **** 
 163:../MainAlg/retain_xmc4.c ****     XMC_FCE_Enable();
 308              	 .loc 3 163 5
 309 0030 FFF7FEFF 	 bl XMC_FCE_Enable
 164:../MainAlg/retain_xmc4.c **** 
 165:../MainAlg/retain_xmc4.c ****     /* Initialize FCE module for Hardware calculations */
 166:../MainAlg/retain_xmc4.c ****     (void)XMC_FCE_Init(&e_eeprom_xmc4_fce);
 310              	 .loc 3 166 11
 311 0034 2448     	 ldr r0,.L19+8
 312 0036 FFF7FEFF 	 bl XMC_FCE_Init
 167:../MainAlg/retain_xmc4.c **** 
 168:../MainAlg/retain_xmc4.c ****     /* Iterate all 4 sectors to find out which is the active sector having the latest data block*/
 169:../MainAlg/retain_xmc4.c ****     for (sector_count = 0U; sector_count < E_EEPROM_XMC4_MAX_SECTORS ; sector_count++)
 313              	 .loc 3 169 23
 314 003a 0023     	 movs r3,#0
 315 003c FB60     	 str r3,[r7,#12]
 316              	 .loc 3 169 5
 317 003e 05E0     	 b .L13
 318              	.L14:
 170:../MainAlg/retain_xmc4.c ****     {
 171:../MainAlg/retain_xmc4.c ****       E_EEPROM_XMC4_lInitReadSectorInfo(sector_count);
 319              	 .loc 3 171 7 discriminator 3
 320 0040 F868     	 ldr r0,[r7,#12]
 321 0042 FFF7FEFF 	 bl E_EEPROM_XMC4_lInitReadSectorInfo
 169:../MainAlg/retain_xmc4.c ****     {
 322              	 .loc 3 169 84 discriminator 3
 323 0046 FB68     	 ldr r3,[r7,#12]
 324 0048 0133     	 adds r3,r3,#1
 325 004a FB60     	 str r3,[r7,#12]
 326              	.L13:
 169:../MainAlg/retain_xmc4.c ****     {
 327              	 .loc 3 169 5 discriminator 1
 328 004c FB68     	 ldr r3,[r7,#12]
 329 004e 032B     	 cmp r3,#3
 330 0050 F6D9     	 bls .L14
 172:../MainAlg/retain_xmc4.c ****     }
 173:../MainAlg/retain_xmc4.c **** 
 174:../MainAlg/retain_xmc4.c ****     XMC_FLASH_SetMargin(XMC_FLASH_MARGIN_DEFAULT);
 331              	 .loc 3 174 5
 332 0052 0020     	 movs r0,#0
 333 0054 FFF7FEFF 	 bl XMC_FLASH_SetMargin
 175:../MainAlg/retain_xmc4.c **** 
 176:../MainAlg/retain_xmc4.c ****     /* Implement the OVER ERASE CHECK code here and return the status*/
 177:../MainAlg/retain_xmc4.c **** 
 178:../MainAlg/retain_xmc4.c ****     /* If Read was successful*/
 179:../MainAlg/retain_xmc4.c ****     if (status == E_EEPROM_XMC4_STATUS_OK)
 334              	 .loc 3 179 8
 335 0058 FB7A     	 ldrb r3,[r7,#11]
 336 005a 002B     	 cmp r3,#0
 337 005c 25D1     	 bne .L15
 180:../MainAlg/retain_xmc4.c ****     {
 181:../MainAlg/retain_xmc4.c ****       /* Execute erase state machine to free up the unwanted sectors and keep
 182:../MainAlg/retain_xmc4.c ****        * only the sector which has latest valid block. If no valid block found then all sectors are
 183:../MainAlg/retain_xmc4.c ****        */
 184:../MainAlg/retain_xmc4.c ****       status = E_EEPROM_XMC4_lInitEraseStateMachine();
 338              	 .loc 3 184 16
 339 005e FFF7FEFF 	 bl E_EEPROM_XMC4_lInitEraseStateMachine
 340 0062 0346     	 mov r3,r0
 341 0064 FB72     	 strb r3,[r7,#11]
 185:../MainAlg/retain_xmc4.c **** 
 186:../MainAlg/retain_xmc4.c ****       /* If erase operations were successful, continue block data updates to RAM buffer */
 187:../MainAlg/retain_xmc4.c ****       if (status == E_EEPROM_XMC4_STATUS_OK)
 342              	 .loc 3 187 10
 343 0066 FB7A     	 ldrb r3,[r7,#11]
 344 0068 002B     	 cmp r3,#0
 345 006a 1ED1     	 bne .L15
 188:../MainAlg/retain_xmc4.c ****       {
 189:../MainAlg/retain_xmc4.c **** 
 190:../MainAlg/retain_xmc4.c ****         /* If a valid latest block were not detected, we shall assume that all sectors may be empty
 191:../MainAlg/retain_xmc4.c ****          * Then make Sector-0 as current sector and next free address as Sector0 start address
 192:../MainAlg/retain_xmc4.c ****          */
 193:../MainAlg/retain_xmc4.c ****         if (e_eeprom_xmc4_sector_info.flash_data_addr == E_EEPROM_XMC4_EMPTY)
 346              	 .loc 3 193 38
 347 006c 154B     	 ldr r3,.L19+4
 348 006e 5B68     	 ldr r3,[r3,#4]
 349              	 .loc 3 193 12
 350 0070 002B     	 cmp r3,#0
 351 0072 06D1     	 bne .L16
 194:../MainAlg/retain_xmc4.c ****         {
 195:../MainAlg/retain_xmc4.c ****           e_eeprom_xmc4_sector_info.current_sector = E_EEPROM_XMC4_SECTOR_0;
 352              	 .loc 3 195 52
 353 0074 134B     	 ldr r3,.L19+4
 354 0076 0022     	 movs r2,#0
 355 0078 9A60     	 str r2,[r3,#8]
 196:../MainAlg/retain_xmc4.c ****           e_eeprom_xmc4_sector_info.next_free_start_addr =  E_EEPROM_XMC4_SECTOR0_START_ADDR;
 356              	 .loc 3 196 58
 357 007a 124B     	 ldr r3,.L19+4
 358 007c 134A     	 ldr r2,.L19+12
 359 007e 1A60     	 str r2,[r3]
 360 0080 13E0     	 b .L15
 361              	.L16:
 197:../MainAlg/retain_xmc4.c ****         }
 198:../MainAlg/retain_xmc4.c ****         else
 199:../MainAlg/retain_xmc4.c ****         {
 200:../MainAlg/retain_xmc4.c ****           /* If a valid latest block was detected, copy the valid block from flash to RAM. */
 201:../MainAlg/retain_xmc4.c ****           E_EEPROM_XMC4_lCopyFlashToRam();
 362              	 .loc 3 201 11
 363 0082 FFF7FEFF 	 bl E_EEPROM_XMC4_lCopyFlashToRam
 202:../MainAlg/retain_xmc4.c **** 
 203:../MainAlg/retain_xmc4.c ****           if ((e_eeprom_xmc4_sector_info.next_free_start_addr - e_eeprom_xmc4_sector_info.flash_dat
 364              	 .loc 3 203 41
 365 0086 0F4B     	 ldr r3,.L19+4
 366 0088 1A68     	 ldr r2,[r3]
 367              	 .loc 3 203 90
 368 008a 0E4B     	 ldr r3,.L19+4
 369 008c 5B68     	 ldr r3,[r3,#4]
 370              	 .loc 3 203 63
 371 008e D31A     	 subs r3,r2,r3
 372              	 .loc 3 203 14
 373 0090 B3F5006F 	 cmp r3,#2048
 374 0094 01D0     	 beq .L17
 204:../MainAlg/retain_xmc4.c ****               E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE)
 205:../MainAlg/retain_xmc4.c ****           {
 206:../MainAlg/retain_xmc4.c ****             status = E_EEPROM_XMC4_STATUS_ERROR_OLD_DATA;
 375              	 .loc 3 206 20
 376 0096 0123     	 movs r3,#1
 377 0098 FB72     	 strb r3,[r7,#11]
 378              	.L17:
 207:../MainAlg/retain_xmc4.c ****           }
 208:../MainAlg/retain_xmc4.c **** 
 209:../MainAlg/retain_xmc4.c ****           if (e_eeprom_xmc4_sector_info.next_free_start_addr >= E_EEPROM_XMC4_SECTOR4_START_ADDR)
 379              	 .loc 3 209 40
 380 009a 0A4B     	 ldr r3,.L19+4
 381 009c 1B68     	 ldr r3,[r3]
 382              	 .loc 3 209 14
 383 009e 0C4A     	 ldr r2,.L19+16
 384 00a0 9342     	 cmp r3,r2
 385 00a2 02D9     	 bls .L15
 210:../MainAlg/retain_xmc4.c ****           {
 211:../MainAlg/retain_xmc4.c ****             e_eeprom_xmc4_sector_info.next_free_start_addr =  E_EEPROM_XMC4_SECTOR0_START_ADDR;
 386              	 .loc 3 211 60
 387 00a4 074B     	 ldr r3,.L19+4
 388 00a6 094A     	 ldr r2,.L19+12
 389 00a8 1A60     	 str r2,[r3]
 390              	.L15:
 212:../MainAlg/retain_xmc4.c ****           }
 213:../MainAlg/retain_xmc4.c **** 
 214:../MainAlg/retain_xmc4.c ****         }
 215:../MainAlg/retain_xmc4.c ****       }
 216:../MainAlg/retain_xmc4.c ****     }
 217:../MainAlg/retain_xmc4.c **** 
 218:../MainAlg/retain_xmc4.c ****     XMC_FLASH_EnableDoubleBitErrorTrap();
 391              	 .loc 3 218 5
 392 00aa FFF7FEFF 	 bl XMC_FLASH_EnableDoubleBitErrorTrap
 219:../MainAlg/retain_xmc4.c **** 
 220:../MainAlg/retain_xmc4.c ****     handle->initialized = (bool)true;
 393              	 .loc 3 220 25
 394 00ae 7B68     	 ldr r3,[r7,#4]
 395 00b0 0122     	 movs r2,#1
 396 00b2 1A70     	 strb r2,[r3]
 397              	.L12:
 221:../MainAlg/retain_xmc4.c ****   }
 222:../MainAlg/retain_xmc4.c **** 
 223:../MainAlg/retain_xmc4.c ****   return (status);
 398              	 .loc 3 223 10
 399 00b4 FB7A     	 ldrb r3,[r7,#11]
 224:../MainAlg/retain_xmc4.c **** }
 400              	 .loc 3 224 1
 401 00b6 1846     	 mov r0,r3
 402 00b8 1037     	 adds r7,r7,#16
 403              	.LCFI23:
 404              	 .cfi_def_cfa_offset 8
 405 00ba BD46     	 mov sp,r7
 406              	.LCFI24:
 407              	 .cfi_def_cfa_register 13
 408              	 
 409 00bc 80BD     	 pop {r7,pc}
 410              	.L20:
 411 00be 00BF     	 .align 2
 412              	.L19:
 413 00c0 00000000 	 .word e_eeprom_xmc4_data_buffer
 414 00c4 00000000 	 .word e_eeprom_xmc4_sector_info
 415 00c8 00000000 	 .word e_eeprom_xmc4_fce
 416 00cc 0000010C 	 .word 201392128
 417 00d0 FFFF010C 	 .word 201457663
 418              	 .cfi_endproc
 419              	.LFE163:
 421              	 .section .text.E_EEPROM_XMC4_WriteByte,"ax",%progbits
 422              	 .align 1
 423              	 .global E_EEPROM_XMC4_WriteByte
 424              	 .syntax unified
 425              	 .thumb
 426              	 .thumb_func
 427              	 .fpu fpv4-sp-d16
 429              	E_EEPROM_XMC4_WriteByte:
 430              	.LFB164:
 225:../MainAlg/retain_xmc4.c **** 
 226:../MainAlg/retain_xmc4.c **** 
 227:../MainAlg/retain_xmc4.c **** 
 228:../MainAlg/retain_xmc4.c **** /* Update a single byte to RAM buffer*/
 229:../MainAlg/retain_xmc4.c **** bool E_EEPROM_XMC4_WriteByte(const uint16_t offset_address, const uint8_t value)
 230:../MainAlg/retain_xmc4.c **** {
 431              	 .loc 3 230 1
 432              	 .cfi_startproc
 433              	 
 434              	 
 435              	 
 436 0000 80B4     	 push {r7}
 437              	.LCFI25:
 438              	 .cfi_def_cfa_offset 4
 439              	 .cfi_offset 7,-4
 440 0002 85B0     	 sub sp,sp,#20
 441              	.LCFI26:
 442              	 .cfi_def_cfa_offset 24
 443 0004 00AF     	 add r7,sp,#0
 444              	.LCFI27:
 445              	 .cfi_def_cfa_register 7
 446 0006 0346     	 mov r3,r0
 447 0008 0A46     	 mov r2,r1
 448 000a FB80     	 strh r3,[r7,#6]
 449 000c 1346     	 mov r3,r2
 450 000e 7B71     	 strb r3,[r7,#5]
 231:../MainAlg/retain_xmc4.c ****   uint8_t *address_ptr;
 232:../MainAlg/retain_xmc4.c ****   bool status;
 233:../MainAlg/retain_xmc4.c **** 
 234:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_WriteByte: Wrong offset address", (offset_address < E_EEPROM_XMC4_DATA_
 235:../MainAlg/retain_xmc4.c ****   address_ptr = (uint8_t*)(void*)(&e_eeprom_xmc4_data_buffer.eeprom_data) + (uint32_t)offset_addres
 451              	 .loc 3 235 77
 452 0010 FB88     	 ldrh r3,[r7,#6]
 453              	 .loc 3 235 15
 454 0012 0A4A     	 ldr r2,.L23
 455 0014 1344     	 add r3,r3,r2
 456 0016 FB60     	 str r3,[r7,#12]
 236:../MainAlg/retain_xmc4.c ****   status = (*address_ptr != value);
 457              	 .loc 3 236 13
 458 0018 FB68     	 ldr r3,[r7,#12]
 459 001a 1B78     	 ldrb r3,[r3]
 460              	 .loc 3 236 10
 461 001c 7A79     	 ldrb r2,[r7,#5]
 462 001e 9A42     	 cmp r2,r3
 463 0020 14BF     	 ite ne
 464 0022 0123     	 movne r3,#1
 465 0024 0023     	 moveq r3,#0
 466 0026 FB72     	 strb r3,[r7,#11]
 237:../MainAlg/retain_xmc4.c **** 
 238:../MainAlg/retain_xmc4.c ****   *address_ptr = value;
 467              	 .loc 3 238 16
 468 0028 FB68     	 ldr r3,[r7,#12]
 469 002a 7A79     	 ldrb r2,[r7,#5]
 470 002c 1A70     	 strb r2,[r3]
 239:../MainAlg/retain_xmc4.c **** 
 240:../MainAlg/retain_xmc4.c ****   return status;
 471              	 .loc 3 240 10
 472 002e FB7A     	 ldrb r3,[r7,#11]
 241:../MainAlg/retain_xmc4.c **** }
 473              	 .loc 3 241 1
 474 0030 1846     	 mov r0,r3
 475 0032 1437     	 adds r7,r7,#20
 476              	.LCFI28:
 477              	 .cfi_def_cfa_offset 4
 478 0034 BD46     	 mov sp,r7
 479              	.LCFI29:
 480              	 .cfi_def_cfa_register 13
 481              	 
 482 0036 5DF8047B 	 ldr r7,[sp],#4
 483              	.LCFI30:
 484              	 .cfi_restore 7
 485              	 .cfi_def_cfa_offset 0
 486 003a 7047     	 bx lr
 487              	.L24:
 488              	 .align 2
 489              	.L23:
 490 003c 08000000 	 .word e_eeprom_xmc4_data_buffer+8
 491              	 .cfi_endproc
 492              	.LFE164:
 494              	 .section .text.E_EEPROM_XMC4_WriteArray,"ax",%progbits
 495              	 .align 1
 496              	 .global E_EEPROM_XMC4_WriteArray
 497              	 .syntax unified
 498              	 .thumb
 499              	 .thumb_func
 500              	 .fpu fpv4-sp-d16
 502              	E_EEPROM_XMC4_WriteArray:
 503              	.LFB165:
 242:../MainAlg/retain_xmc4.c **** 
 243:../MainAlg/retain_xmc4.c **** 
 244:../MainAlg/retain_xmc4.c **** 
 245:../MainAlg/retain_xmc4.c **** /* Update a set of bytes to RAM buffer*/
 246:../MainAlg/retain_xmc4.c **** bool E_EEPROM_XMC4_WriteArray(const uint16_t offset_address, const uint8_t *const data, const uint1
 247:../MainAlg/retain_xmc4.c **** {
 504              	 .loc 3 247 1
 505              	 .cfi_startproc
 506              	 
 507              	 
 508 0000 80B5     	 push {r7,lr}
 509              	.LCFI31:
 510              	 .cfi_def_cfa_offset 8
 511              	 .cfi_offset 7,-8
 512              	 .cfi_offset 14,-4
 513 0002 86B0     	 sub sp,sp,#24
 514              	.LCFI32:
 515              	 .cfi_def_cfa_offset 32
 516 0004 00AF     	 add r7,sp,#0
 517              	.LCFI33:
 518              	 .cfi_def_cfa_register 7
 519 0006 0346     	 mov r3,r0
 520 0008 3960     	 str r1,[r7]
 521 000a FB80     	 strh r3,[r7,#6]
 522 000c 1346     	 mov r3,r2
 523 000e BB80     	 strh r3,[r7,#4]
 248:../MainAlg/retain_xmc4.c ****   uint16_t i;
 249:../MainAlg/retain_xmc4.c ****   uint8_t  *address_ptr;
 250:../MainAlg/retain_xmc4.c ****   bool status;
 251:../MainAlg/retain_xmc4.c **** 
 252:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_WriteArray: Wrong offset address", (offset_address < E_EEPROM_XMC4_DATA
 253:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_WriteArray: Wrong length", ((offset_address + length) <= E_EEPROM_XMC4_
 254:../MainAlg/retain_xmc4.c **** 
 255:../MainAlg/retain_xmc4.c ****   address_ptr = (uint8_t*)(void*)(&e_eeprom_xmc4_data_buffer.eeprom_data) + (uint32_t)offset_addres
 524              	 .loc 3 255 77
 525 0010 FB88     	 ldrh r3,[r7,#6]
 526              	 .loc 3 255 15
 527 0012 134A     	 ldr r2,.L29
 528 0014 1344     	 add r3,r3,r2
 529 0016 3B61     	 str r3,[r7,#16]
 256:../MainAlg/retain_xmc4.c ****   status = (memcmp(address_ptr, data, length) != 0);
 530              	 .loc 3 256 13
 531 0018 BB88     	 ldrh r3,[r7,#4]
 532 001a 1A46     	 mov r2,r3
 533 001c 3968     	 ldr r1,[r7]
 534 001e 3869     	 ldr r0,[r7,#16]
 535 0020 FFF7FEFF 	 bl memcmp
 536 0024 0346     	 mov r3,r0
 537              	 .loc 3 256 10
 538 0026 002B     	 cmp r3,#0
 539 0028 14BF     	 ite ne
 540 002a 0123     	 movne r3,#1
 541 002c 0023     	 moveq r3,#0
 542 002e FB73     	 strb r3,[r7,#15]
 257:../MainAlg/retain_xmc4.c **** 
 258:../MainAlg/retain_xmc4.c ****   for (i = 0U; i < length; i++)
 543              	 .loc 3 258 10
 544 0030 0023     	 movs r3,#0
 545 0032 FB82     	 strh r3,[r7,#22]
 546              	 .loc 3 258 3
 547 0034 0AE0     	 b .L26
 548              	.L27:
 259:../MainAlg/retain_xmc4.c ****   {
 260:../MainAlg/retain_xmc4.c ****       *(address_ptr + i) = *(data + i);
 549              	 .loc 3 260 35 discriminator 3
 550 0036 FB8A     	 ldrh r3,[r7,#22]
 551 0038 3A68     	 ldr r2,[r7]
 552 003a 1A44     	 add r2,r2,r3
 553              	 .loc 3 260 21 discriminator 3
 554 003c FB8A     	 ldrh r3,[r7,#22]
 555 003e 3969     	 ldr r1,[r7,#16]
 556 0040 0B44     	 add r3,r3,r1
 557              	 .loc 3 260 28 discriminator 3
 558 0042 1278     	 ldrb r2,[r2]
 559              	 .loc 3 260 26 discriminator 3
 560 0044 1A70     	 strb r2,[r3]
 258:../MainAlg/retain_xmc4.c ****   {
 561              	 .loc 3 258 29 discriminator 3
 562 0046 FB8A     	 ldrh r3,[r7,#22]
 563 0048 0133     	 adds r3,r3,#1
 564 004a FB82     	 strh r3,[r7,#22]
 565              	.L26:
 258:../MainAlg/retain_xmc4.c ****   {
 566              	 .loc 3 258 3 discriminator 1
 567 004c FA8A     	 ldrh r2,[r7,#22]
 568 004e BB88     	 ldrh r3,[r7,#4]
 569 0050 9A42     	 cmp r2,r3
 570 0052 F0D3     	 bcc .L27
 261:../MainAlg/retain_xmc4.c ****   }
 262:../MainAlg/retain_xmc4.c **** 
 263:../MainAlg/retain_xmc4.c ****   return status;
 571              	 .loc 3 263 10
 572 0054 FB7B     	 ldrb r3,[r7,#15]
 264:../MainAlg/retain_xmc4.c **** }
 573              	 .loc 3 264 1
 574 0056 1846     	 mov r0,r3
 575 0058 1837     	 adds r7,r7,#24
 576              	.LCFI34:
 577              	 .cfi_def_cfa_offset 8
 578 005a BD46     	 mov sp,r7
 579              	.LCFI35:
 580              	 .cfi_def_cfa_register 13
 581              	 
 582 005c 80BD     	 pop {r7,pc}
 583              	.L30:
 584 005e 00BF     	 .align 2
 585              	.L29:
 586 0060 08000000 	 .word e_eeprom_xmc4_data_buffer+8
 587              	 .cfi_endproc
 588              	.LFE165:
 590              	 .section .text.E_EEPROM_XMC4_ReadByte,"ax",%progbits
 591              	 .align 1
 592              	 .global E_EEPROM_XMC4_ReadByte
 593              	 .syntax unified
 594              	 .thumb
 595              	 .thumb_func
 596              	 .fpu fpv4-sp-d16
 598              	E_EEPROM_XMC4_ReadByte:
 599              	.LFB166:
 265:../MainAlg/retain_xmc4.c **** 
 266:../MainAlg/retain_xmc4.c **** 
 267:../MainAlg/retain_xmc4.c **** 
 268:../MainAlg/retain_xmc4.c **** /* Read one byte from RAM Buffer */
 269:../MainAlg/retain_xmc4.c **** void E_EEPROM_XMC4_ReadByte(const uint16_t offset_address, uint8_t *const value)
 270:../MainAlg/retain_xmc4.c **** {
 600              	 .loc 3 270 1
 601              	 .cfi_startproc
 602              	 
 603              	 
 604              	 
 605 0000 80B4     	 push {r7}
 606              	.LCFI36:
 607              	 .cfi_def_cfa_offset 4
 608              	 .cfi_offset 7,-4
 609 0002 85B0     	 sub sp,sp,#20
 610              	.LCFI37:
 611              	 .cfi_def_cfa_offset 24
 612 0004 00AF     	 add r7,sp,#0
 613              	.LCFI38:
 614              	 .cfi_def_cfa_register 7
 615 0006 0346     	 mov r3,r0
 616 0008 3960     	 str r1,[r7]
 617 000a FB80     	 strh r3,[r7,#6]
 271:../MainAlg/retain_xmc4.c ****   uint8_t *address_ptr;
 272:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_ReadByte: Wrong offset address", (offset_address < E_EEPROM_XMC4_DATA_B
 273:../MainAlg/retain_xmc4.c ****   address_ptr = (uint8_t*)(void*)(&e_eeprom_xmc4_data_buffer.eeprom_data) + (uint32_t)offset_addres
 618              	 .loc 3 273 77
 619 000c FB88     	 ldrh r3,[r7,#6]
 620              	 .loc 3 273 15
 621 000e 064A     	 ldr r2,.L32
 622 0010 1344     	 add r3,r3,r2
 623 0012 FB60     	 str r3,[r7,#12]
 274:../MainAlg/retain_xmc4.c **** 
 275:../MainAlg/retain_xmc4.c ****   *value = *address_ptr;
 624              	 .loc 3 275 12
 625 0014 FB68     	 ldr r3,[r7,#12]
 626 0016 1A78     	 ldrb r2,[r3]
 627              	 .loc 3 275 10
 628 0018 3B68     	 ldr r3,[r7]
 629 001a 1A70     	 strb r2,[r3]
 276:../MainAlg/retain_xmc4.c **** }
 630              	 .loc 3 276 1
 631 001c 00BF     	 nop
 632 001e 1437     	 adds r7,r7,#20
 633              	.LCFI39:
 634              	 .cfi_def_cfa_offset 4
 635 0020 BD46     	 mov sp,r7
 636              	.LCFI40:
 637              	 .cfi_def_cfa_register 13
 638              	 
 639 0022 5DF8047B 	 ldr r7,[sp],#4
 640              	.LCFI41:
 641              	 .cfi_restore 7
 642              	 .cfi_def_cfa_offset 0
 643 0026 7047     	 bx lr
 644              	.L33:
 645              	 .align 2
 646              	.L32:
 647 0028 08000000 	 .word e_eeprom_xmc4_data_buffer+8
 648              	 .cfi_endproc
 649              	.LFE166:
 651              	 .section .text.E_EEPROM_XMC4_ReadArray,"ax",%progbits
 652              	 .align 1
 653              	 .global E_EEPROM_XMC4_ReadArray
 654              	 .syntax unified
 655              	 .thumb
 656              	 .thumb_func
 657              	 .fpu fpv4-sp-d16
 659              	E_EEPROM_XMC4_ReadArray:
 660              	.LFB167:
 277:../MainAlg/retain_xmc4.c **** 
 278:../MainAlg/retain_xmc4.c **** 
 279:../MainAlg/retain_xmc4.c **** 
 280:../MainAlg/retain_xmc4.c **** /* Read a set of bytes from RAM Buffer */
 281:../MainAlg/retain_xmc4.c **** void E_EEPROM_XMC4_ReadArray(const uint16_t offset_address, uint8_t *const data, const uint16_t len
 282:../MainAlg/retain_xmc4.c **** {
 661              	 .loc 3 282 1
 662              	 .cfi_startproc
 663              	 
 664              	 
 665              	 
 666 0000 80B4     	 push {r7}
 667              	.LCFI42:
 668              	 .cfi_def_cfa_offset 4
 669              	 .cfi_offset 7,-4
 670 0002 85B0     	 sub sp,sp,#20
 671              	.LCFI43:
 672              	 .cfi_def_cfa_offset 24
 673 0004 00AF     	 add r7,sp,#0
 674              	.LCFI44:
 675              	 .cfi_def_cfa_register 7
 676 0006 0346     	 mov r3,r0
 677 0008 3960     	 str r1,[r7]
 678 000a FB80     	 strh r3,[r7,#6]
 679 000c 1346     	 mov r3,r2
 680 000e BB80     	 strh r3,[r7,#4]
 283:../MainAlg/retain_xmc4.c ****   uint16_t i;
 284:../MainAlg/retain_xmc4.c ****   uint8_t  *address_ptr;
 285:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_ReadArray: Wrong offset address", (offset_address < E_EEPROM_XMC4_DATA_
 286:../MainAlg/retain_xmc4.c ****   XMC_ASSERT("E_EEPROM_XMC4_ReadArray: Wrong length", ((offset_address + length) <= E_EEPROM_XMC4_D
 287:../MainAlg/retain_xmc4.c ****   address_ptr = (uint8_t*)(void*)(&e_eeprom_xmc4_data_buffer.eeprom_data) + (uint32_t)offset_addres
 681              	 .loc 3 287 77
 682 0010 FB88     	 ldrh r3,[r7,#6]
 683              	 .loc 3 287 15
 684 0012 0E4A     	 ldr r2,.L37
 685 0014 1344     	 add r3,r3,r2
 686 0016 BB60     	 str r3,[r7,#8]
 288:../MainAlg/retain_xmc4.c **** 
 289:../MainAlg/retain_xmc4.c ****   for (i=0U; i<length; i++)
 687              	 .loc 3 289 9
 688 0018 0023     	 movs r3,#0
 689 001a FB81     	 strh r3,[r7,#14]
 690              	 .loc 3 289 3
 691 001c 0AE0     	 b .L35
 692              	.L36:
 290:../MainAlg/retain_xmc4.c ****   {
 291:../MainAlg/retain_xmc4.c ****     *(data + i) = *(address_ptr + i);
 693              	 .loc 3 291 33 discriminator 3
 694 001e FB89     	 ldrh r3,[r7,#14]
 695 0020 BA68     	 ldr r2,[r7,#8]
 696 0022 1A44     	 add r2,r2,r3
 697              	 .loc 3 291 12 discriminator 3
 698 0024 FB89     	 ldrh r3,[r7,#14]
 699 0026 3968     	 ldr r1,[r7]
 700 0028 0B44     	 add r3,r3,r1
 701              	 .loc 3 291 19 discriminator 3
 702 002a 1278     	 ldrb r2,[r2]
 703              	 .loc 3 291 17 discriminator 3
 704 002c 1A70     	 strb r2,[r3]
 289:../MainAlg/retain_xmc4.c ****   {
 705              	 .loc 3 289 25 discriminator 3
 706 002e FB89     	 ldrh r3,[r7,#14]
 707 0030 0133     	 adds r3,r3,#1
 708 0032 FB81     	 strh r3,[r7,#14]
 709              	.L35:
 289:../MainAlg/retain_xmc4.c ****   {
 710              	 .loc 3 289 3 discriminator 1
 711 0034 FA89     	 ldrh r2,[r7,#14]
 712 0036 BB88     	 ldrh r3,[r7,#4]
 713 0038 9A42     	 cmp r2,r3
 714 003a F0D3     	 bcc .L36
 292:../MainAlg/retain_xmc4.c ****   }
 293:../MainAlg/retain_xmc4.c **** }
 715              	 .loc 3 293 1
 716 003c 00BF     	 nop
 717 003e 00BF     	 nop
 718 0040 1437     	 adds r7,r7,#20
 719              	.LCFI45:
 720              	 .cfi_def_cfa_offset 4
 721 0042 BD46     	 mov sp,r7
 722              	.LCFI46:
 723              	 .cfi_def_cfa_register 13
 724              	 
 725 0044 5DF8047B 	 ldr r7,[sp],#4
 726              	.LCFI47:
 727              	 .cfi_restore 7
 728              	 .cfi_def_cfa_offset 0
 729 0048 7047     	 bx lr
 730              	.L38:
 731 004a 00BF     	 .align 2
 732              	.L37:
 733 004c 08000000 	 .word e_eeprom_xmc4_data_buffer+8
 734              	 .cfi_endproc
 735              	.LFE167:
 737              	 .section .text.E_EEPROM_XMC4_UpdateFlashContents,"ax",%progbits
 738              	 .align 1
 739              	 .global E_EEPROM_XMC4_UpdateFlashContents
 740              	 .syntax unified
 741              	 .thumb
 742              	 .thumb_func
 743              	 .fpu fpv4-sp-d16
 745              	E_EEPROM_XMC4_UpdateFlashContents:
 746              	.LFB168:
 294:../MainAlg/retain_xmc4.c **** 
 295:../MainAlg/retain_xmc4.c **** 
 296:../MainAlg/retain_xmc4.c **** 
 297:../MainAlg/retain_xmc4.c **** /* Copy data blocks from RAM to FLASH */
 298:../MainAlg/retain_xmc4.c **** E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_UpdateFlashContents(void)
 299:../MainAlg/retain_xmc4.c **** {
 747              	 .loc 3 299 1
 748              	 .cfi_startproc
 749              	 
 750              	 
 751 0000 80B5     	 push {r7,lr}
 752              	.LCFI48:
 753              	 .cfi_def_cfa_offset 8
 754              	 .cfi_offset 7,-8
 755              	 .cfi_offset 14,-4
 756 0002 82B0     	 sub sp,sp,#8
 757              	.LCFI49:
 758              	 .cfi_def_cfa_offset 16
 759 0004 00AF     	 add r7,sp,#0
 760              	.LCFI50:
 761              	 .cfi_def_cfa_register 7
 300:../MainAlg/retain_xmc4.c ****   E_EEPROM_XMC4_STATUS_t status;
 301:../MainAlg/retain_xmc4.c ****   uint32_t sector_start_addr;
 302:../MainAlg/retain_xmc4.c **** 
 303:../MainAlg/retain_xmc4.c ****   status = E_EEPROM_XMC4_STATUS_OK;
 762              	 .loc 3 303 10
 763 0006 0023     	 movs r3,#0
 764 0008 FB71     	 strb r3,[r7,#7]
 304:../MainAlg/retain_xmc4.c **** 
 305:../MainAlg/retain_xmc4.c ****   /* Calculate the starting address of the active sector from where the first write started for the
 306:../MainAlg/retain_xmc4.c ****   sector_start_addr = E_EEPROM_XMC4_SECTOR0_START_ADDR +
 307:../MainAlg/retain_xmc4.c ****                      (E_EEPROM_XMC4_SECTOR_SIZE * e_eeprom_xmc4_sector_info.current_sector);
 765              	 .loc 3 307 76
 766 000a 224B     	 ldr r3,.L44
 767 000c 9B68     	 ldr r3,[r3,#8]
 306:../MainAlg/retain_xmc4.c ****                      (E_EEPROM_XMC4_SECTOR_SIZE * e_eeprom_xmc4_sector_info.current_sector);
 768              	 .loc 3 306 56
 769 000e 03F54053 	 add r3,r3,#12288
 770 0012 0433     	 adds r3,r3,#4
 306:../MainAlg/retain_xmc4.c ****                      (E_EEPROM_XMC4_SECTOR_SIZE * e_eeprom_xmc4_sector_info.current_sector);
 771              	 .loc 3 306 21
 772 0014 9B03     	 lsls r3,r3,#14
 773 0016 3B60     	 str r3,[r7]
 308:../MainAlg/retain_xmc4.c **** 
 309:../MainAlg/retain_xmc4.c ****   /* If the next free address crosses current active sector starting address, then all the sectors 
 310:../MainAlg/retain_xmc4.c ****   if ((e_eeprom_xmc4_sector_info.next_free_start_addr == sector_start_addr) &&
 774              	 .loc 3 310 33
 775 0018 1E4B     	 ldr r3,.L44
 776 001a 1B68     	 ldr r3,[r3]
 777              	 .loc 3 310 6
 778 001c 3A68     	 ldr r2,[r7]
 779 001e 9A42     	 cmp r2,r3
 780 0020 11D1     	 bne .L40
 311:../MainAlg/retain_xmc4.c ****      (e_eeprom_xmc4_data_buffer.block_cycle_count != 0U))
 781              	 .loc 3 311 32 discriminator 1
 782 0022 1D4B     	 ldr r3,.L44+4
 783 0024 5B68     	 ldr r3,[r3,#4]
 310:../MainAlg/retain_xmc4.c ****      (e_eeprom_xmc4_data_buffer.block_cycle_count != 0U))
 784              	 .loc 3 310 77 discriminator 1
 785 0026 002B     	 cmp r3,#0
 786 0028 0DD0     	 beq .L40
 312:../MainAlg/retain_xmc4.c ****   {
 313:../MainAlg/retain_xmc4.c ****     /* Update the current sector to the latest sector on which the last write was executed. */
 314:../MainAlg/retain_xmc4.c ****     e_eeprom_xmc4_sector_info.current_sector =  ((e_eeprom_xmc4_sector_info.flash_data_addr &
 787              	 .loc 3 314 76
 788 002a 1A4B     	 ldr r3,.L44
 789 002c 5B68     	 ldr r3,[r3,#4]
 315:../MainAlg/retain_xmc4.c ****                                                 E_EEPROM_XMC4_SECTOR_POSITION_MASK) >>
 790              	 .loc 3 315 85
 791 002e 9B0B     	 lsrs r3,r3,#14
 792 0030 03F00303 	 and r3,r3,#3
 314:../MainAlg/retain_xmc4.c ****                                                 E_EEPROM_XMC4_SECTOR_POSITION_MASK) >>
 793              	 .loc 3 314 46
 794 0034 174A     	 ldr r2,.L44
 795 0036 9360     	 str r3,[r2,#8]
 316:../MainAlg/retain_xmc4.c ****                                                 E_EEPROM_XMC4_SECTOR_POSITION);
 317:../MainAlg/retain_xmc4.c **** 
 318:../MainAlg/retain_xmc4.c ****     /* Mark all the sectors as filled with data */
 319:../MainAlg/retain_xmc4.c ****     e_eeprom_xmc4_sector_info.erase_state = E_EEPROM_XMC4_ALL_SECTORS_FILLED ;
 796              	 .loc 3 319 43
 797 0038 164B     	 ldr r3,.L44
 798 003a 0F22     	 movs r2,#15
 799 003c DA60     	 str r2,[r3,#12]
 320:../MainAlg/retain_xmc4.c **** 
 321:../MainAlg/retain_xmc4.c ****     /* Execute erase state machine to free up the unwanted sectors and keep only the sector which h
 322:../MainAlg/retain_xmc4.c ****     status = E_EEPROM_XMC4_lInitEraseStateMachine();
 800              	 .loc 3 322 14
 801 003e FFF7FEFF 	 bl E_EEPROM_XMC4_lInitEraseStateMachine
 802 0042 0346     	 mov r3,r0
 803 0044 FB71     	 strb r3,[r7,#7]
 804              	.L40:
 323:../MainAlg/retain_xmc4.c ****   }
 324:../MainAlg/retain_xmc4.c **** 
 325:../MainAlg/retain_xmc4.c ****   if (status ==  E_EEPROM_XMC4_STATUS_OK)
 805              	 .loc 3 325 6
 806 0046 FB79     	 ldrb r3,[r7,#7]
 807 0048 002B     	 cmp r3,#0
 808 004a 1DD1     	 bne .L41
 326:../MainAlg/retain_xmc4.c ****   {
 327:../MainAlg/retain_xmc4.c ****     e_eeprom_xmc4_data_buffer.block_cycle_count++;
 809              	 .loc 3 327 30
 810 004c 124B     	 ldr r3,.L44+4
 811 004e 5B68     	 ldr r3,[r3,#4]
 812              	 .loc 3 327 48
 813 0050 0133     	 adds r3,r3,#1
 814 0052 114A     	 ldr r2,.L44+4
 815 0054 5360     	 str r3,[r2,#4]
 328:../MainAlg/retain_xmc4.c **** 
 329:../MainAlg/retain_xmc4.c ****     status = E_EEPROM_XMC4_lWriteToFlash();
 816              	 .loc 3 329 14
 817 0056 FFF7FEFF 	 bl E_EEPROM_XMC4_lWriteToFlash
 818 005a 0346     	 mov r3,r0
 819 005c FB71     	 strb r3,[r7,#7]
 330:../MainAlg/retain_xmc4.c **** 
 331:../MainAlg/retain_xmc4.c ****     /* If the flash write succeeds, update the latest flash data location in RAM for reference */
 332:../MainAlg/retain_xmc4.c ****     if (status == E_EEPROM_XMC4_STATUS_OK)
 820              	 .loc 3 332 8
 821 005e FB79     	 ldrb r3,[r7,#7]
 822 0060 002B     	 cmp r3,#0
 823 0062 03D1     	 bne .L42
 333:../MainAlg/retain_xmc4.c ****     {
 334:../MainAlg/retain_xmc4.c ****       e_eeprom_xmc4_sector_info.flash_data_addr = e_eeprom_xmc4_sector_info.next_free_start_addr;
 824              	 .loc 3 334 76
 825 0064 0B4B     	 ldr r3,.L44
 826 0066 1B68     	 ldr r3,[r3]
 827              	 .loc 3 334 49
 828 0068 0A4A     	 ldr r2,.L44
 829 006a 5360     	 str r3,[r2,#4]
 830              	.L42:
 335:../MainAlg/retain_xmc4.c ****     }
 336:../MainAlg/retain_xmc4.c **** 
 337:../MainAlg/retain_xmc4.c ****     /* Update the next free address to write the new data block*/
 338:../MainAlg/retain_xmc4.c ****     e_eeprom_xmc4_sector_info.next_free_start_addr += E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE;
 831              	 .loc 3 338 52
 832 006c 094B     	 ldr r3,.L44
 833 006e 1B68     	 ldr r3,[r3]
 834 0070 03F50063 	 add r3,r3,#2048
 835 0074 074A     	 ldr r2,.L44
 836 0076 1360     	 str r3,[r2]
 339:../MainAlg/retain_xmc4.c **** 
 340:../MainAlg/retain_xmc4.c ****     /* If the next free address crosses 3rd sector end address relocate the address to 0th sector s
 341:../MainAlg/retain_xmc4.c ****     if (e_eeprom_xmc4_sector_info.next_free_start_addr >= E_EEPROM_XMC4_SECTOR4_START_ADDR)
 837              	 .loc 3 341 34
 838 0078 064B     	 ldr r3,.L44
 839 007a 1B68     	 ldr r3,[r3]
 840              	 .loc 3 341 8
 841 007c 074A     	 ldr r2,.L44+8
 842 007e 9342     	 cmp r3,r2
 843 0080 02D9     	 bls .L41
 342:../MainAlg/retain_xmc4.c ****     {
 343:../MainAlg/retain_xmc4.c ****       e_eeprom_xmc4_sector_info.next_free_start_addr = E_EEPROM_XMC4_SECTOR0_START_ADDR;
 844              	 .loc 3 343 54
 845 0082 044B     	 ldr r3,.L44
 846 0084 064A     	 ldr r2,.L44+12
 847 0086 1A60     	 str r2,[r3]
 848              	.L41:
 344:../MainAlg/retain_xmc4.c ****     }
 345:../MainAlg/retain_xmc4.c ****   }
 346:../MainAlg/retain_xmc4.c **** 
 347:../MainAlg/retain_xmc4.c ****   return (status);
 849              	 .loc 3 347 10
 850 0088 FB79     	 ldrb r3,[r7,#7]
 348:../MainAlg/retain_xmc4.c **** }
 851              	 .loc 3 348 1
 852 008a 1846     	 mov r0,r3
 853 008c 0837     	 adds r7,r7,#8
 854              	.LCFI51:
 855              	 .cfi_def_cfa_offset 8
 856 008e BD46     	 mov sp,r7
 857              	.LCFI52:
 858              	 .cfi_def_cfa_register 13
 859              	 
 860 0090 80BD     	 pop {r7,pc}
 861              	.L45:
 862 0092 00BF     	 .align 2
 863              	.L44:
 864 0094 00000000 	 .word e_eeprom_xmc4_sector_info
 865 0098 00000000 	 .word e_eeprom_xmc4_data_buffer
 866 009c FFFF010C 	 .word 201457663
 867 00a0 0000010C 	 .word 201392128
 868              	 .cfi_endproc
 869              	.LFE168:
 871              	 .section .text.E_EEPROM_XMC4_IsFlashEmpty,"ax",%progbits
 872              	 .align 1
 873              	 .global E_EEPROM_XMC4_IsFlashEmpty
 874              	 .syntax unified
 875              	 .thumb
 876              	 .thumb_func
 877              	 .fpu fpv4-sp-d16
 879              	E_EEPROM_XMC4_IsFlashEmpty:
 880              	.LFB169:
 349:../MainAlg/retain_xmc4.c **** 
 350:../MainAlg/retain_xmc4.c **** 
 351:../MainAlg/retain_xmc4.c **** /* Check the availability data in the flash emulated EEPROM area */
 352:../MainAlg/retain_xmc4.c **** bool E_EEPROM_XMC4_IsFlashEmpty(void)
 353:../MainAlg/retain_xmc4.c **** {
 881              	 .loc 3 353 1
 882              	 .cfi_startproc
 883              	 
 884              	 
 885              	 
 886 0000 80B4     	 push {r7}
 887              	.LCFI53:
 888              	 .cfi_def_cfa_offset 4
 889              	 .cfi_offset 7,-4
 890 0002 83B0     	 sub sp,sp,#12
 891              	.LCFI54:
 892              	 .cfi_def_cfa_offset 16
 893 0004 00AF     	 add r7,sp,#0
 894              	.LCFI55:
 895              	 .cfi_def_cfa_register 7
 354:../MainAlg/retain_xmc4.c ****   bool status = false;
 896              	 .loc 3 354 8
 897 0006 0023     	 movs r3,#0
 898 0008 FB71     	 strb r3,[r7,#7]
 355:../MainAlg/retain_xmc4.c **** 
 356:../MainAlg/retain_xmc4.c ****   /* If data available flash_data_addr will have a valid address*/
 357:../MainAlg/retain_xmc4.c ****   if (e_eeprom_xmc4_sector_info.flash_data_addr == 0U)
 899              	 .loc 3 357 32
 900 000a 064B     	 ldr r3,.L49
 901 000c 5B68     	 ldr r3,[r3,#4]
 902              	 .loc 3 357 6
 903 000e 002B     	 cmp r3,#0
 904 0010 01D1     	 bne .L47
 358:../MainAlg/retain_xmc4.c ****   {
 359:../MainAlg/retain_xmc4.c ****     status = true;
 905              	 .loc 3 359 12
 906 0012 0123     	 movs r3,#1
 907 0014 FB71     	 strb r3,[r7,#7]
 908              	.L47:
 360:../MainAlg/retain_xmc4.c ****   }
 361:../MainAlg/retain_xmc4.c ****   return (status);
 909              	 .loc 3 361 10
 910 0016 FB79     	 ldrb r3,[r7,#7]
 362:../MainAlg/retain_xmc4.c **** }
 911              	 .loc 3 362 1
 912 0018 1846     	 mov r0,r3
 913 001a 0C37     	 adds r7,r7,#12
 914              	.LCFI56:
 915              	 .cfi_def_cfa_offset 4
 916 001c BD46     	 mov sp,r7
 917              	.LCFI57:
 918              	 .cfi_def_cfa_register 13
 919              	 
 920 001e 5DF8047B 	 ldr r7,[sp],#4
 921              	.LCFI58:
 922              	 .cfi_restore 7
 923              	 .cfi_def_cfa_offset 0
 924 0022 7047     	 bx lr
 925              	.L50:
 926              	 .align 2
 927              	.L49:
 928 0024 00000000 	 .word e_eeprom_xmc4_sector_info
 929              	 .cfi_endproc
 930              	.LFE169:
 932              	 .section .text.E_EEPROM_XMC4_lWriteToFlash,"ax",%progbits
 933              	 .align 1
 934              	 .syntax unified
 935              	 .thumb
 936              	 .thumb_func
 937              	 .fpu fpv4-sp-d16
 939              	E_EEPROM_XMC4_lWriteToFlash:
 940              	.LFB170:
 363:../MainAlg/retain_xmc4.c **** 
 364:../MainAlg/retain_xmc4.c **** 
 365:../MainAlg/retain_xmc4.c **** 
 366:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 367:../MainAlg/retain_xmc4.c **** /* Private Functions ---------------------------------------------------------*/
 368:../MainAlg/retain_xmc4.c **** /* ---------------------------------------------------------------------------*/
 369:../MainAlg/retain_xmc4.c **** 
 370:../MainAlg/retain_xmc4.c **** /* Local function to program data blocks from RAM into FLASH */
 371:../MainAlg/retain_xmc4.c **** static E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_lWriteToFlash(void)
 372:../MainAlg/retain_xmc4.c **** {
 941              	 .loc 3 372 1
 942              	 .cfi_startproc
 943              	 
 944              	 
 945 0000 80B5     	 push {r7,lr}
 946              	.LCFI59:
 947              	 .cfi_def_cfa_offset 8
 948              	 .cfi_offset 7,-8
 949              	 .cfi_offset 14,-4
 950 0002 84B0     	 sub sp,sp,#16
 951              	.LCFI60:
 952              	 .cfi_def_cfa_offset 24
 953 0004 00AF     	 add r7,sp,#0
 954              	.LCFI61:
 955              	 .cfi_def_cfa_register 7
 373:../MainAlg/retain_xmc4.c ****   uint32_t *flash_addr_ptr;
 374:../MainAlg/retain_xmc4.c ****   uint32_t *ram_addr_ptr;
 375:../MainAlg/retain_xmc4.c ****   uint32_t  page_index;
 376:../MainAlg/retain_xmc4.c ****   E_EEPROM_XMC4_STATUS_t status;
 377:../MainAlg/retain_xmc4.c **** 
 378:../MainAlg/retain_xmc4.c ****   status = E_EEPROM_XMC4_STATUS_OK;
 956              	 .loc 3 378 10
 957 0006 0023     	 movs r3,#0
 958 0008 FB70     	 strb r3,[r7,#3]
 379:../MainAlg/retain_xmc4.c ****   flash_addr_ptr = (uint32_t*)e_eeprom_xmc4_sector_info.next_free_start_addr;
 959              	 .loc 3 379 56
 960 000a 184B     	 ldr r3,.L57
 961 000c 1B68     	 ldr r3,[r3]
 962              	 .loc 3 379 18
 963 000e FB60     	 str r3,[r7,#12]
 380:../MainAlg/retain_xmc4.c ****   ram_addr_ptr   = (uint32_t*)(void*)&e_eeprom_xmc4_data_buffer;
 964              	 .loc 3 380 18
 965 0010 174B     	 ldr r3,.L57+4
 966 0012 BB60     	 str r3,[r7,#8]
 381:../MainAlg/retain_xmc4.c **** 
 382:../MainAlg/retain_xmc4.c ****   e_eeprom_xmc4_data_buffer.crc = E_EEPROM_XMC4_lCalculateCRC((uint32_t*)(void*)
 967              	 .loc 3 382 35
 968 0014 1748     	 ldr r0,.L57+8
 969 0016 FFF7FEFF 	 bl E_EEPROM_XMC4_lCalculateCRC
 970 001a 0346     	 mov r3,r0
 971              	 .loc 3 382 33
 972 001c 144A     	 ldr r2,.L57+4
 973 001e 1360     	 str r3,[r2]
 383:../MainAlg/retain_xmc4.c ****                                                              (&(e_eeprom_xmc4_data_buffer.block_cyc
 384:../MainAlg/retain_xmc4.c **** 
 385:../MainAlg/retain_xmc4.c ****   for (page_index = 0U ; page_index < E_EEPROM_XMC4_MAX_PAGES; page_index++)
 974              	 .loc 3 385 19
 975 0020 0023     	 movs r3,#0
 976 0022 7B60     	 str r3,[r7,#4]
 977              	 .loc 3 385 3
 978 0024 1AE0     	 b .L52
 979              	.L55:
 386:../MainAlg/retain_xmc4.c ****   {
 387:../MainAlg/retain_xmc4.c ****     XMC_FLASH_ClearStatus();
 980              	 .loc 3 387 5
 981 0026 FFF7FEFF 	 bl XMC_FLASH_ClearStatus
 388:../MainAlg/retain_xmc4.c **** 
 389:../MainAlg/retain_xmc4.c ****     XMC_FLASH_ProgramPage(flash_addr_ptr,ram_addr_ptr);
 982              	 .loc 3 389 5
 983 002a B968     	 ldr r1,[r7,#8]
 984 002c F868     	 ldr r0,[r7,#12]
 985 002e FFF7FEFF 	 bl XMC_FLASH_ProgramPage
 390:../MainAlg/retain_xmc4.c **** 
 391:../MainAlg/retain_xmc4.c ****     if ((XMC_FLASH_GetStatus() & (uint32_t)(XMC_FLASH_STATUS_VERIFY_ERROR | XMC_FLASH_STATUS_OPERAT
 986              	 .loc 3 391 10
 987 0032 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 988 0036 0246     	 mov r2,r0
 989              	 .loc 3 391 32
 990 0038 0F4B     	 ldr r3,.L57+12
 991 003a 1340     	 ands r3,r3,r2
 992              	 .loc 3 391 8
 993 003c 002B     	 cmp r3,#0
 994 003e 02D0     	 beq .L53
 392:../MainAlg/retain_xmc4.c ****     {
 393:../MainAlg/retain_xmc4.c ****       status = E_EEPROM_XMC4_STATUS_WRITE_ERROR;
 995              	 .loc 3 393 14
 996 0040 0323     	 movs r3,#3
 997 0042 FB70     	 strb r3,[r7,#3]
 394:../MainAlg/retain_xmc4.c ****       break;
 998              	 .loc 3 394 7
 999 0044 0DE0     	 b .L54
 1000              	.L53:
 395:../MainAlg/retain_xmc4.c ****     }
 396:../MainAlg/retain_xmc4.c ****     ram_addr_ptr   += E_EEPROM_XMC4_MIN_WORDS_PER_PAGE ;
 1001              	 .loc 3 396 20 discriminator 2
 1002 0046 BB68     	 ldr r3,[r7,#8]
 1003 0048 03F58073 	 add r3,r3,#256
 1004 004c BB60     	 str r3,[r7,#8]
 397:../MainAlg/retain_xmc4.c ****     flash_addr_ptr += E_EEPROM_XMC4_MIN_WORDS_PER_PAGE ;
 1005              	 .loc 3 397 20 discriminator 2
 1006 004e FB68     	 ldr r3,[r7,#12]
 1007 0050 03F58073 	 add r3,r3,#256
 1008 0054 FB60     	 str r3,[r7,#12]
 385:../MainAlg/retain_xmc4.c ****   {
 1009              	 .loc 3 385 74 discriminator 2
 1010 0056 7B68     	 ldr r3,[r7,#4]
 1011 0058 0133     	 adds r3,r3,#1
 1012 005a 7B60     	 str r3,[r7,#4]
 1013              	.L52:
 385:../MainAlg/retain_xmc4.c ****   {
 1014              	 .loc 3 385 3 discriminator 1
 1015 005c 7B68     	 ldr r3,[r7,#4]
 1016 005e 072B     	 cmp r3,#7
 1017 0060 E1D9     	 bls .L55
 1018              	.L54:
 398:../MainAlg/retain_xmc4.c ****   }
 399:../MainAlg/retain_xmc4.c **** 
 400:../MainAlg/retain_xmc4.c ****   return (status);
 1019              	 .loc 3 400 10
 1020 0062 FB78     	 ldrb r3,[r7,#3]
 401:../MainAlg/retain_xmc4.c **** }
 1021              	 .loc 3 401 1
 1022 0064 1846     	 mov r0,r3
 1023 0066 1037     	 adds r7,r7,#16
 1024              	.LCFI62:
 1025              	 .cfi_def_cfa_offset 8
 1026 0068 BD46     	 mov sp,r7
 1027              	.LCFI63:
 1028              	 .cfi_def_cfa_register 13
 1029              	 
 1030 006a 80BD     	 pop {r7,pc}
 1031              	.L58:
 1032              	 .align 2
 1033              	.L57:
 1034 006c 00000000 	 .word e_eeprom_xmc4_sector_info
 1035 0070 00000000 	 .word e_eeprom_xmc4_data_buffer
 1036 0074 04000000 	 .word e_eeprom_xmc4_data_buffer+4
 1037 0078 00010080 	 .word -2147483392
 1038              	 .cfi_endproc
 1039              	.LFE170:
 1041              	 .section .text.E_EEPROM_XMC4_lInitReadSectorInfo,"ax",%progbits
 1042              	 .align 1
 1043              	 .syntax unified
 1044              	 .thumb
 1045              	 .thumb_func
 1046              	 .fpu fpv4-sp-d16
 1048              	E_EEPROM_XMC4_lInitReadSectorInfo:
 1049              	.LFB171:
 402:../MainAlg/retain_xmc4.c **** 
 403:../MainAlg/retain_xmc4.c **** 
 404:../MainAlg/retain_xmc4.c **** 
 405:../MainAlg/retain_xmc4.c **** static void E_EEPROM_XMC4_lInitReadSectorInfo(const uint32_t sector)
 406:../MainAlg/retain_xmc4.c **** {
 1050              	 .loc 3 406 1
 1051              	 .cfi_startproc
 1052              	 
 1053              	 
 1054 0000 80B5     	 push {r7,lr}
 1055              	.LCFI64:
 1056              	 .cfi_def_cfa_offset 8
 1057              	 .cfi_offset 7,-8
 1058              	 .cfi_offset 14,-4
 1059 0002 8AB0     	 sub sp,sp,#40
 1060              	.LCFI65:
 1061              	 .cfi_def_cfa_offset 48
 1062 0004 00AF     	 add r7,sp,#0
 1063              	.LCFI66:
 1064              	 .cfi_def_cfa_register 7
 1065 0006 7860     	 str r0,[r7,#4]
 407:../MainAlg/retain_xmc4.c ****   uint32_t block_read_addr;
 408:../MainAlg/retain_xmc4.c ****   uint32_t sector_start_addr;
 409:../MainAlg/retain_xmc4.c ****   uint32_t free_block_addr;
 410:../MainAlg/retain_xmc4.c ****   uint32_t *data_ptr;
 411:../MainAlg/retain_xmc4.c ****   uint32_t block_cycle_count;
 412:../MainAlg/retain_xmc4.c ****   uint32_t written_crc;
 413:../MainAlg/retain_xmc4.c ****   uint32_t calculated_crc;
 414:../MainAlg/retain_xmc4.c **** 
 415:../MainAlg/retain_xmc4.c ****   /* Initialize starting address and last block address of the sector. */
 416:../MainAlg/retain_xmc4.c ****   sector_start_addr = E_EEPROM_XMC4_SECTOR0_START_ADDR + (E_EEPROM_XMC4_SECTOR_SIZE * (uint32_t)sec
 1066              	 .loc 3 416 56
 1067 0008 7B68     	 ldr r3,[r7,#4]
 1068 000a 03F54053 	 add r3,r3,#12288
 1069 000e 0433     	 adds r3,r3,#4
 1070              	 .loc 3 416 21
 1071 0010 9B03     	 lsls r3,r3,#14
 1072 0012 FB61     	 str r3,[r7,#28]
 417:../MainAlg/retain_xmc4.c ****   block_read_addr = (sector_start_addr + E_EEPROM_XMC4_SECTOR_SIZE) - E_EEPROM_XMC4_ACTUAL_FLASH_BL
 1073              	 .loc 3 417 19
 1074 0014 FB69     	 ldr r3,[r7,#28]
 1075 0016 03F56053 	 add r3,r3,#14336
 1076 001a 7B62     	 str r3,[r7,#36]
 418:../MainAlg/retain_xmc4.c ****   free_block_addr = E_EEPROM_XMC4_EMPTY;
 1077              	 .loc 3 418 19
 1078 001c 0023     	 movs r3,#0
 1079 001e 3B62     	 str r3,[r7,#32]
 1080              	.L63:
 419:../MainAlg/retain_xmc4.c **** 
 420:../MainAlg/retain_xmc4.c ****   do
 421:../MainAlg/retain_xmc4.c ****   {
 422:../MainAlg/retain_xmc4.c ****     /* Read first 32 bit data from the block which indicates the block cycle counter. */
 423:../MainAlg/retain_xmc4.c ****     data_ptr = (uint32_t*)block_read_addr;
 1081              	 .loc 3 423 14
 1082 0020 7B6A     	 ldr r3,[r7,#36]
 1083 0022 BB61     	 str r3,[r7,#24]
 424:../MainAlg/retain_xmc4.c ****     block_cycle_count = *(data_ptr + E_EEPROM_XMC4_BCC_OFFSET);
 1084              	 .loc 3 424 23
 1085 0024 BB69     	 ldr r3,[r7,#24]
 1086 0026 5B68     	 ldr r3,[r3,#4]
 1087 0028 7B61     	 str r3,[r7,#20]
 425:../MainAlg/retain_xmc4.c **** 
 426:../MainAlg/retain_xmc4.c ****     /* Check if block cycle count is a non zero value*/
 427:../MainAlg/retain_xmc4.c ****     if (block_cycle_count != E_EEPROM_XMC4_EMPTY)
 1088              	 .loc 3 427 8
 1089 002a 7B69     	 ldr r3,[r7,#20]
 1090 002c 002B     	 cmp r3,#0
 1091 002e 2ED0     	 beq .L60
 428:../MainAlg/retain_xmc4.c ****     {
 429:../MainAlg/retain_xmc4.c ****       /* Mark sector as non-empty sector*/
 430:../MainAlg/retain_xmc4.c ****       e_eeprom_xmc4_sector_info.erase_state |= ((uint32_t)1U << sector);
 1092              	 .loc 3 430 45
 1093 0030 1D4B     	 ldr r3,.L64
 1094 0032 DA68     	 ldr r2,[r3,#12]
 1095              	 .loc 3 430 62
 1096 0034 0121     	 movs r1,#1
 1097 0036 7B68     	 ldr r3,[r7,#4]
 1098 0038 01FA03F3 	 lsl r3,r1,r3
 1099              	 .loc 3 430 45
 1100 003c 1343     	 orrs r3,r3,r2
 1101 003e 1A4A     	 ldr r2,.L64
 1102 0040 D360     	 str r3,[r2,#12]
 431:../MainAlg/retain_xmc4.c **** 
 432:../MainAlg/retain_xmc4.c ****       /* If this is the first non empty block identified, then store the address as next free addre
 433:../MainAlg/retain_xmc4.c ****       if (free_block_addr == E_EEPROM_XMC4_EMPTY)
 1103              	 .loc 3 433 10
 1104 0042 3B6A     	 ldr r3,[r7,#32]
 1105 0044 002B     	 cmp r3,#0
 1106 0046 03D1     	 bne .L61
 434:../MainAlg/retain_xmc4.c ****       {
 435:../MainAlg/retain_xmc4.c ****         free_block_addr = block_read_addr + E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE;
 1107              	 .loc 3 435 25
 1108 0048 7B6A     	 ldr r3,[r7,#36]
 1109 004a 03F50063 	 add r3,r3,#2048
 1110 004e 3B62     	 str r3,[r7,#32]
 1111              	.L61:
 436:../MainAlg/retain_xmc4.c ****       }
 437:../MainAlg/retain_xmc4.c **** 
 438:../MainAlg/retain_xmc4.c ****       /* Read the second 32bit data which indicates the CRC */
 439:../MainAlg/retain_xmc4.c ****       written_crc = *data_ptr;
 1112              	 .loc 3 439 19
 1113 0050 BB69     	 ldr r3,[r7,#24]
 1114 0052 1B68     	 ldr r3,[r3]
 1115 0054 3B61     	 str r3,[r7,#16]
 440:../MainAlg/retain_xmc4.c ****       /* Calculate the CRC for the written data in flash (3rd word to the last word)*/
 441:../MainAlg/retain_xmc4.c ****       calculated_crc = E_EEPROM_XMC4_lCalculateCRC(data_ptr + E_EEPROM_XMC4_BCC_OFFSET);
 1116              	 .loc 3 441 61
 1117 0056 BB69     	 ldr r3,[r7,#24]
 1118 0058 0433     	 adds r3,r3,#4
 1119              	 .loc 3 441 24
 1120 005a 1846     	 mov r0,r3
 1121 005c FFF7FEFF 	 bl E_EEPROM_XMC4_lCalculateCRC
 1122 0060 F860     	 str r0,[r7,#12]
 442:../MainAlg/retain_xmc4.c **** 
 443:../MainAlg/retain_xmc4.c ****       if (calculated_crc == written_crc)
 1123              	 .loc 3 443 10
 1124 0062 FA68     	 ldr r2,[r7,#12]
 1125 0064 3B69     	 ldr r3,[r7,#16]
 1126 0066 9A42     	 cmp r2,r3
 1127 0068 11D1     	 bne .L60
 444:../MainAlg/retain_xmc4.c ****       {
 445:../MainAlg/retain_xmc4.c ****         /* If both CRC matches and the current block cycle counter is greater than the previous rec
 446:../MainAlg/retain_xmc4.c ****          * Update the Data structure with the current block as the "latest" one and the current sec
 447:../MainAlg/retain_xmc4.c ****          * Exit from the function.
 448:../MainAlg/retain_xmc4.c ****          */
 449:../MainAlg/retain_xmc4.c ****         if (block_cycle_count > e_eeprom_xmc4_data_buffer.block_cycle_count)
 1128              	 .loc 3 449 58
 1129 006a 104B     	 ldr r3,.L64+4
 1130 006c 5B68     	 ldr r3,[r3,#4]
 1131              	 .loc 3 449 12
 1132 006e 7A69     	 ldr r2,[r7,#20]
 1133 0070 9A42     	 cmp r2,r3
 1134 0072 0CD9     	 bls .L60
 450:../MainAlg/retain_xmc4.c ****         {
 451:../MainAlg/retain_xmc4.c ****           e_eeprom_xmc4_data_buffer.block_cycle_count = block_cycle_count;
 1135              	 .loc 3 451 55
 1136 0074 0D4A     	 ldr r2,.L64+4
 1137 0076 7B69     	 ldr r3,[r7,#20]
 1138 0078 5360     	 str r3,[r2,#4]
 452:../MainAlg/retain_xmc4.c ****           e_eeprom_xmc4_sector_info.current_sector = sector;
 1139              	 .loc 3 452 52
 1140 007a 0B4A     	 ldr r2,.L64
 1141 007c 7B68     	 ldr r3,[r7,#4]
 1142 007e 9360     	 str r3,[r2,#8]
 453:../MainAlg/retain_xmc4.c ****           e_eeprom_xmc4_sector_info.flash_data_addr = block_read_addr;
 1143              	 .loc 3 453 53
 1144 0080 094A     	 ldr r2,.L64
 1145 0082 7B6A     	 ldr r3,[r7,#36]
 1146 0084 5360     	 str r3,[r2,#4]
 454:../MainAlg/retain_xmc4.c ****           e_eeprom_xmc4_sector_info.next_free_start_addr = free_block_addr;
 1147              	 .loc 3 454 58
 1148 0086 084A     	 ldr r2,.L64
 1149 0088 3B6A     	 ldr r3,[r7,#32]
 1150 008a 1360     	 str r3,[r2]
 455:../MainAlg/retain_xmc4.c ****           break;
 1151              	 .loc 3 455 11
 1152 008c 08E0     	 b .L62
 1153              	.L60:
 456:../MainAlg/retain_xmc4.c ****         }
 457:../MainAlg/retain_xmc4.c ****       }
 458:../MainAlg/retain_xmc4.c ****     }
 459:../MainAlg/retain_xmc4.c ****     /* Move the block read address to one block size up starting from the bottom of sector */
 460:../MainAlg/retain_xmc4.c ****     block_read_addr -= E_EEPROM_XMC4_ACTUAL_FLASH_BLOCK_SIZE;
 1154              	 .loc 3 460 21
 1155 008e 7B6A     	 ldr r3,[r7,#36]
 1156 0090 A3F50063 	 sub r3,r3,#2048
 1157 0094 7B62     	 str r3,[r7,#36]
 461:../MainAlg/retain_xmc4.c **** 
 462:../MainAlg/retain_xmc4.c ****   /* Iterate the read process until the block read address crosses sector start address or a
 463:../MainAlg/retain_xmc4.c ****    * latest valid block is identified.
 464:../MainAlg/retain_xmc4.c ****    */
 465:../MainAlg/retain_xmc4.c ****   } while ( block_read_addr >= sector_start_addr );
 1158              	 .loc 3 465 3
 1159 0096 7A6A     	 ldr r2,[r7,#36]
 1160 0098 FB69     	 ldr r3,[r7,#28]
 1161 009a 9A42     	 cmp r2,r3
 1162 009c C0D2     	 bcs .L63
 466:../MainAlg/retain_xmc4.c **** 
 467:../MainAlg/retain_xmc4.c **** }
 1163              	 .loc 3 467 1
 1164 009e 00BF     	 nop
 1165              	.L62:
 1166 00a0 00BF     	 nop
 1167 00a2 2837     	 adds r7,r7,#40
 1168              	.LCFI67:
 1169              	 .cfi_def_cfa_offset 8
 1170 00a4 BD46     	 mov sp,r7
 1171              	.LCFI68:
 1172              	 .cfi_def_cfa_register 13
 1173              	 
 1174 00a6 80BD     	 pop {r7,pc}
 1175              	.L65:
 1176              	 .align 2
 1177              	.L64:
 1178 00a8 00000000 	 .word e_eeprom_xmc4_sector_info
 1179 00ac 00000000 	 .word e_eeprom_xmc4_data_buffer
 1180              	 .cfi_endproc
 1181              	.LFE171:
 1183              	 .section .text.E_EEPROM_XMC4_lInitEraseStateMachine,"ax",%progbits
 1184              	 .align 1
 1185              	 .syntax unified
 1186              	 .thumb
 1187              	 .thumb_func
 1188              	 .fpu fpv4-sp-d16
 1190              	E_EEPROM_XMC4_lInitEraseStateMachine:
 1191              	.LFB172:
 468:../MainAlg/retain_xmc4.c **** 
 469:../MainAlg/retain_xmc4.c **** 
 470:../MainAlg/retain_xmc4.c **** 
 471:../MainAlg/retain_xmc4.c **** static E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_lInitEraseStateMachine(void)
 472:../MainAlg/retain_xmc4.c **** {
 1192              	 .loc 3 472 1
 1193              	 .cfi_startproc
 1194              	 
 1195              	 
 1196 0000 80B5     	 push {r7,lr}
 1197              	.LCFI69:
 1198              	 .cfi_def_cfa_offset 8
 1199              	 .cfi_offset 7,-8
 1200              	 .cfi_offset 14,-4
 1201 0002 84B0     	 sub sp,sp,#16
 1202              	.LCFI70:
 1203              	 .cfi_def_cfa_offset 24
 1204 0004 00AF     	 add r7,sp,#0
 1205              	.LCFI71:
 1206              	 .cfi_def_cfa_register 7
 473:../MainAlg/retain_xmc4.c ****   uint32_t sector_count;
 474:../MainAlg/retain_xmc4.c ****   uint32_t sector_start_addr;
 475:../MainAlg/retain_xmc4.c ****   E_EEPROM_XMC4_STATUS_t status ;
 476:../MainAlg/retain_xmc4.c **** 
 477:../MainAlg/retain_xmc4.c ****   status = E_EEPROM_XMC4_STATUS_OK;
 1207              	 .loc 3 477 10
 1208 0006 0023     	 movs r3,#0
 1209 0008 FB72     	 strb r3,[r7,#11]
 478:../MainAlg/retain_xmc4.c ****   sector_count = 0U;
 1210              	 .loc 3 478 16
 1211 000a 0023     	 movs r3,#0
 1212 000c FB60     	 str r3,[r7,#12]
 1213              	.L70:
 479:../MainAlg/retain_xmc4.c **** 
 480:../MainAlg/retain_xmc4.c ****   do
 481:../MainAlg/retain_xmc4.c ****   {
 482:../MainAlg/retain_xmc4.c ****     /* If the non empty sector is the current active sector, then do not erase it*/
 483:../MainAlg/retain_xmc4.c ****     if (e_eeprom_xmc4_sector_info.current_sector != sector_count)
 1214              	 .loc 3 483 34
 1215 000e 1B4B     	 ldr r3,.L72
 1216 0010 9B68     	 ldr r3,[r3,#8]
 1217              	 .loc 3 483 8
 1218 0012 FA68     	 ldr r2,[r7,#12]
 1219 0014 9A42     	 cmp r2,r3
 1220 0016 26D0     	 beq .L67
 484:../MainAlg/retain_xmc4.c ****     {
 485:../MainAlg/retain_xmc4.c ****       /* Check if the sector was previously identified as non-empty. i.e It is having old data or c
 486:../MainAlg/retain_xmc4.c ****        * If so erase the sector and mark it as erase attempted.
 487:../MainAlg/retain_xmc4.c ****        */
 488:../MainAlg/retain_xmc4.c ****       if ((e_eeprom_xmc4_sector_info.erase_state >> sector_count) & ((uint32_t)1U))
 1221              	 .loc 3 488 37
 1222 0018 184B     	 ldr r3,.L72
 1223 001a DA68     	 ldr r2,[r3,#12]
 1224              	 .loc 3 488 50
 1225 001c FB68     	 ldr r3,[r7,#12]
 1226 001e 22FA03F3 	 lsr r3,r2,r3
 1227              	 .loc 3 488 67
 1228 0022 03F00103 	 and r3,r3,#1
 1229              	 .loc 3 488 10
 1230 0026 002B     	 cmp r3,#0
 1231 0028 1DD0     	 beq .L67
 489:../MainAlg/retain_xmc4.c ****       {
 490:../MainAlg/retain_xmc4.c ****         sector_start_addr = E_EEPROM_XMC4_SECTOR0_START_ADDR + (E_EEPROM_XMC4_SECTOR_SIZE * (uint32
 1232              	 .loc 3 490 62
 1233 002a FB68     	 ldr r3,[r7,#12]
 1234 002c 03F54053 	 add r3,r3,#12288
 1235 0030 0433     	 adds r3,r3,#4
 1236              	 .loc 3 490 27
 1237 0032 9B03     	 lsls r3,r3,#14
 1238 0034 7B60     	 str r3,[r7,#4]
 491:../MainAlg/retain_xmc4.c **** 
 492:../MainAlg/retain_xmc4.c ****         XMC_FLASH_ClearStatus();
 1239              	 .loc 3 492 9
 1240 0036 FFF7FEFF 	 bl XMC_FLASH_ClearStatus
 493:../MainAlg/retain_xmc4.c ****         XMC_FLASH_EraseSector((uint32_t*)sector_start_addr);
 1241              	 .loc 3 493 9
 1242 003a 7B68     	 ldr r3,[r7,#4]
 1243 003c 1846     	 mov r0,r3
 1244 003e FFF7FEFF 	 bl XMC_FLASH_EraseSector
 494:../MainAlg/retain_xmc4.c **** 
 495:../MainAlg/retain_xmc4.c ****         if (XMC_FLASH_GetStatus() != (uint32_t)XMC_FLASH_STATUS_ERASE_STATE)
 1245              	 .loc 3 495 13
 1246 0042 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1247 0046 0346     	 mov r3,r0
 1248              	 .loc 3 495 12
 1249 0048 202B     	 cmp r3,#32
 1250 004a 02D0     	 beq .L68
 496:../MainAlg/retain_xmc4.c ****         {
 497:../MainAlg/retain_xmc4.c ****           status = E_EEPROM_XMC4_STATUS_ERASE_ERROR;
 1251              	 .loc 3 497 18
 1252 004c 0423     	 movs r3,#4
 1253 004e FB72     	 strb r3,[r7,#11]
 498:../MainAlg/retain_xmc4.c ****           break;
 1254              	 .loc 3 498 11
 1255 0050 0FE0     	 b .L69
 1256              	.L68:
 499:../MainAlg/retain_xmc4.c ****         }
 500:../MainAlg/retain_xmc4.c ****         e_eeprom_xmc4_sector_info.erase_state &= ~(((uint32_t)1U << sector_count));
 1257              	 .loc 3 500 47
 1258 0052 0A4B     	 ldr r3,.L72
 1259 0054 DA68     	 ldr r2,[r3,#12]
 1260              	 .loc 3 500 66
 1261 0056 0121     	 movs r1,#1
 1262 0058 FB68     	 ldr r3,[r7,#12]
 1263 005a 01FA03F3 	 lsl r3,r1,r3
 1264              	 .loc 3 500 50
 1265 005e DB43     	 mvns r3,r3
 1266              	 .loc 3 500 47
 1267 0060 1340     	 ands r3,r3,r2
 1268 0062 064A     	 ldr r2,.L72
 1269 0064 D360     	 str r3,[r2,#12]
 1270              	.L67:
 501:../MainAlg/retain_xmc4.c ****       }
 502:../MainAlg/retain_xmc4.c ****     }
 503:../MainAlg/retain_xmc4.c ****     sector_count++;
 1271              	 .loc 3 503 17
 1272 0066 FB68     	 ldr r3,[r7,#12]
 1273 0068 0133     	 adds r3,r3,#1
 1274 006a FB60     	 str r3,[r7,#12]
 504:../MainAlg/retain_xmc4.c ****     /* Iterate the erase loop until all 4 sectors are checked. Break and return failure on any sect
 505:../MainAlg/retain_xmc4.c ****   } while ( sector_count < E_EEPROM_XMC4_MAX_SECTORS );
 1275              	 .loc 3 505 3
 1276 006c FB68     	 ldr r3,[r7,#12]
 1277 006e 032B     	 cmp r3,#3
 1278 0070 CDD9     	 bls .L70
 1279              	.L69:
 506:../MainAlg/retain_xmc4.c **** 
 507:../MainAlg/retain_xmc4.c ****   return (status);
 1280              	 .loc 3 507 10
 1281 0072 FB7A     	 ldrb r3,[r7,#11]
 508:../MainAlg/retain_xmc4.c **** }
 1282              	 .loc 3 508 1
 1283 0074 1846     	 mov r0,r3
 1284 0076 1037     	 adds r7,r7,#16
 1285              	.LCFI72:
 1286              	 .cfi_def_cfa_offset 8
 1287 0078 BD46     	 mov sp,r7
 1288              	.LCFI73:
 1289              	 .cfi_def_cfa_register 13
 1290              	 
 1291 007a 80BD     	 pop {r7,pc}
 1292              	.L73:
 1293              	 .align 2
 1294              	.L72:
 1295 007c 00000000 	 .word e_eeprom_xmc4_sector_info
 1296              	 .cfi_endproc
 1297              	.LFE172:
 1299              	 .section .text.E_EEPROM_XMC4_lCalculateCRC,"ax",%progbits
 1300              	 .align 1
 1301              	 .syntax unified
 1302              	 .thumb
 1303              	 .thumb_func
 1304              	 .fpu fpv4-sp-d16
 1306              	E_EEPROM_XMC4_lCalculateCRC:
 1307              	.LFB173:
 509:../MainAlg/retain_xmc4.c **** 
 510:../MainAlg/retain_xmc4.c **** /* Local function to CRC */
 511:../MainAlg/retain_xmc4.c **** static uint32_t E_EEPROM_XMC4_lCalculateCRC(const uint32_t *data_start_addr)
 512:../MainAlg/retain_xmc4.c **** {
 1308              	 .loc 3 512 1
 1309              	 .cfi_startproc
 1310              	 
 1311              	 
 1312 0000 80B5     	 push {r7,lr}
 1313              	.LCFI74:
 1314              	 .cfi_def_cfa_offset 8
 1315              	 .cfi_offset 7,-8
 1316              	 .cfi_offset 14,-4
 1317 0002 84B0     	 sub sp,sp,#16
 1318              	.LCFI75:
 1319              	 .cfi_def_cfa_offset 24
 1320 0004 00AF     	 add r7,sp,#0
 1321              	.LCFI76:
 1322              	 .cfi_def_cfa_register 7
 1323 0006 7860     	 str r0,[r7,#4]
 513:../MainAlg/retain_xmc4.c ****   uint32_t result;
 514:../MainAlg/retain_xmc4.c **** 
 515:../MainAlg/retain_xmc4.c ****   /* Reset the CRC result register before new CRC calculation */
 516:../MainAlg/retain_xmc4.c ****   XMC_FCE_InitializeSeedValue(&e_eeprom_xmc4_fce, 0U);
 1324              	 .loc 3 516 3
 1325 0008 0021     	 movs r1,#0
 1326 000a 0848     	 ldr r0,.L76
 1327 000c FFF7FEFF 	 bl XMC_FCE_InitializeSeedValue
 517:../MainAlg/retain_xmc4.c **** 
 518:../MainAlg/retain_xmc4.c ****   (void)XMC_FCE_CalculateCRC32(&e_eeprom_xmc4_fce, data_start_addr, E_EEPROM_XMC4_DATA_SIZE_FOR_CRC
 1328              	 .loc 3 518 9
 1329 0010 07F10C03 	 add r3,r7,#12
 1330 0014 40F2FC72 	 movw r2,#2044
 1331 0018 7968     	 ldr r1,[r7,#4]
 1332 001a 0448     	 ldr r0,.L76
 1333 001c FFF7FEFF 	 bl XMC_FCE_CalculateCRC32
 519:../MainAlg/retain_xmc4.c **** 
 520:../MainAlg/retain_xmc4.c ****   return (result);
 1334              	 .loc 3 520 10
 1335 0020 FB68     	 ldr r3,[r7,#12]
 521:../MainAlg/retain_xmc4.c **** }
 1336              	 .loc 3 521 1
 1337 0022 1846     	 mov r0,r3
 1338 0024 1037     	 adds r7,r7,#16
 1339              	.LCFI77:
 1340              	 .cfi_def_cfa_offset 8
 1341 0026 BD46     	 mov sp,r7
 1342              	.LCFI78:
 1343              	 .cfi_def_cfa_register 13
 1344              	 
 1345 0028 80BD     	 pop {r7,pc}
 1346              	.L77:
 1347 002a 00BF     	 .align 2
 1348              	.L76:
 1349 002c 00000000 	 .word e_eeprom_xmc4_fce
 1350              	 .cfi_endproc
 1351              	.LFE173:
 1353              	 .section .text.E_EEPROM_XMC4_lCopyFlashToRam,"ax",%progbits
 1354              	 .align 1
 1355              	 .syntax unified
 1356              	 .thumb
 1357              	 .thumb_func
 1358              	 .fpu fpv4-sp-d16
 1360              	E_EEPROM_XMC4_lCopyFlashToRam:
 1361              	.LFB174:
 522:../MainAlg/retain_xmc4.c **** 
 523:../MainAlg/retain_xmc4.c **** 
 524:../MainAlg/retain_xmc4.c **** 
 525:../MainAlg/retain_xmc4.c **** /* Local function to copy data blocks from FLASH to RAM */
 526:../MainAlg/retain_xmc4.c **** static void E_EEPROM_XMC4_lCopyFlashToRam(void)
 527:../MainAlg/retain_xmc4.c **** {
 1362              	 .loc 3 527 1
 1363              	 .cfi_startproc
 1364              	 
 1365              	 
 1366              	 
 1367 0000 80B4     	 push {r7}
 1368              	.LCFI79:
 1369              	 .cfi_def_cfa_offset 4
 1370              	 .cfi_offset 7,-4
 1371 0002 85B0     	 sub sp,sp,#20
 1372              	.LCFI80:
 1373              	 .cfi_def_cfa_offset 24
 1374 0004 00AF     	 add r7,sp,#0
 1375              	.LCFI81:
 1376              	 .cfi_def_cfa_register 7
 528:../MainAlg/retain_xmc4.c ****   uint32_t *flash_addr_ptr;
 529:../MainAlg/retain_xmc4.c ****   uint32_t *ram_addr_ptr;
 530:../MainAlg/retain_xmc4.c ****   uint32_t byte_index;
 531:../MainAlg/retain_xmc4.c **** 
 532:../MainAlg/retain_xmc4.c ****   flash_addr_ptr = (uint32_t*)e_eeprom_xmc4_sector_info.flash_data_addr;
 1377              	 .loc 3 532 56
 1378 0006 104B     	 ldr r3,.L81
 1379 0008 5B68     	 ldr r3,[r3,#4]
 1380              	 .loc 3 532 18
 1381 000a BB60     	 str r3,[r7,#8]
 533:../MainAlg/retain_xmc4.c ****   ram_addr_ptr = (uint32_t*)(void*)&e_eeprom_xmc4_data_buffer;
 1382              	 .loc 3 533 16
 1383 000c 0F4B     	 ldr r3,.L81+4
 1384 000e 7B60     	 str r3,[r7,#4]
 534:../MainAlg/retain_xmc4.c **** 
 535:../MainAlg/retain_xmc4.c ****   for(byte_index = 0U ; byte_index < E_EEPROM_XMC4_MAX_WORDS; byte_index++)
 1385              	 .loc 3 535 18
 1386 0010 0023     	 movs r3,#0
 1387 0012 FB60     	 str r3,[r7,#12]
 1388              	 .loc 3 535 3
 1389 0014 0CE0     	 b .L79
 1390              	.L80:
 536:../MainAlg/retain_xmc4.c ****   {
 537:../MainAlg/retain_xmc4.c ****     *(ram_addr_ptr + byte_index) = *(flash_addr_ptr + byte_index);
 1391              	 .loc 3 537 53 discriminator 3
 1392 0016 FB68     	 ldr r3,[r7,#12]
 1393 0018 9B00     	 lsls r3,r3,#2
 1394 001a BA68     	 ldr r2,[r7,#8]
 1395 001c 1A44     	 add r2,r2,r3
 1396              	 .loc 3 537 20 discriminator 3
 1397 001e FB68     	 ldr r3,[r7,#12]
 1398 0020 9B00     	 lsls r3,r3,#2
 1399 0022 7968     	 ldr r1,[r7,#4]
 1400 0024 0B44     	 add r3,r3,r1
 1401              	 .loc 3 537 36 discriminator 3
 1402 0026 1268     	 ldr r2,[r2]
 1403              	 .loc 3 537 34 discriminator 3
 1404 0028 1A60     	 str r2,[r3]
 535:../MainAlg/retain_xmc4.c ****   {
 1405              	 .loc 3 535 73 discriminator 3
 1406 002a FB68     	 ldr r3,[r7,#12]
 1407 002c 0133     	 adds r3,r3,#1
 1408 002e FB60     	 str r3,[r7,#12]
 1409              	.L79:
 535:../MainAlg/retain_xmc4.c ****   {
 1410              	 .loc 3 535 3 discriminator 1
 1411 0030 FB68     	 ldr r3,[r7,#12]
 1412 0032 B3F5007F 	 cmp r3,#512
 1413 0036 EED3     	 bcc .L80
 538:../MainAlg/retain_xmc4.c ****   }
 539:../MainAlg/retain_xmc4.c **** }
 1414              	 .loc 3 539 1
 1415 0038 00BF     	 nop
 1416 003a 00BF     	 nop
 1417 003c 1437     	 adds r7,r7,#20
 1418              	.LCFI82:
 1419              	 .cfi_def_cfa_offset 4
 1420 003e BD46     	 mov sp,r7
 1421              	.LCFI83:
 1422              	 .cfi_def_cfa_register 13
 1423              	 
 1424 0040 5DF8047B 	 ldr r7,[sp],#4
 1425              	.LCFI84:
 1426              	 .cfi_restore 7
 1427              	 .cfi_def_cfa_offset 0
 1428 0044 7047     	 bx lr
 1429              	.L82:
 1430 0046 00BF     	 .align 2
 1431              	.L81:
 1432 0048 00000000 	 .word e_eeprom_xmc4_sector_info
 1433 004c 00000000 	 .word e_eeprom_xmc4_data_buffer
 1434              	 .cfi_endproc
 1435              	.LFE174:
 1437              	 .text
 1438              	.Letext0:
 1439              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1440              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1441              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_811_X47_V1_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1442              	 .file 7 "../MainAlg/retain_xmc4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 retain_xmc4.c
    {standard input}:17     .text.XMC_FLASH_SetMargin:00000000 $t
    {standard input}:24     .text.XMC_FLASH_SetMargin:00000000 XMC_FLASH_SetMargin
    {standard input}:76     .text.XMC_FLASH_SetMargin:00000030 $d
    {standard input}:81     .text.XMC_FLASH_EnableDoubleBitErrorTrap:00000000 $t
    {standard input}:87     .text.XMC_FLASH_EnableDoubleBitErrorTrap:00000000 XMC_FLASH_EnableDoubleBitErrorTrap
    {standard input}:123    .text.XMC_FLASH_EnableDoubleBitErrorTrap:00000024 $d
    {standard input}:128    .text.XMC_FLASH_DisableDoubleBitErrorTrap:00000000 $t
    {standard input}:134    .text.XMC_FLASH_DisableDoubleBitErrorTrap:00000000 XMC_FLASH_DisableDoubleBitErrorTrap
    {standard input}:170    .text.XMC_FLASH_DisableDoubleBitErrorTrap:00000024 $d
    {standard input}:175    .text.XMC_FCE_InitializeSeedValue:00000000 $t
    {standard input}:181    .text.XMC_FCE_InitializeSeedValue:00000000 XMC_FCE_InitializeSeedValue
    {standard input}:225    .rodata.e_eeprom_xmc4_fce:00000000 $d
    {standard input}:228    .rodata.e_eeprom_xmc4_fce:00000000 e_eeprom_xmc4_fce
    {standard input}:235    .bss.e_eeprom_xmc4_data_buffer:00000000 $d
    {standard input}:238    .bss.e_eeprom_xmc4_data_buffer:00000000 e_eeprom_xmc4_data_buffer
    {standard input}:241    .data.e_eeprom_xmc4_sector_info:00000000 $d
    {standard input}:244    .data.e_eeprom_xmc4_sector_info:00000000 e_eeprom_xmc4_sector_info
    {standard input}:254    .bss.RETAIN:00000000 RETAIN
    {standard input}:251    .bss.RETAIN:00000000 $d
    {standard input}:257    .text.E_EEPROM_XMC4_Init:00000000 $t
    {standard input}:264    .text.E_EEPROM_XMC4_Init:00000000 E_EEPROM_XMC4_Init
    {standard input}:1048   .text.E_EEPROM_XMC4_lInitReadSectorInfo:00000000 E_EEPROM_XMC4_lInitReadSectorInfo
    {standard input}:1190   .text.E_EEPROM_XMC4_lInitEraseStateMachine:00000000 E_EEPROM_XMC4_lInitEraseStateMachine
    {standard input}:1360   .text.E_EEPROM_XMC4_lCopyFlashToRam:00000000 E_EEPROM_XMC4_lCopyFlashToRam
    {standard input}:413    .text.E_EEPROM_XMC4_Init:000000c0 $d
    {standard input}:422    .text.E_EEPROM_XMC4_WriteByte:00000000 $t
    {standard input}:429    .text.E_EEPROM_XMC4_WriteByte:00000000 E_EEPROM_XMC4_WriteByte
    {standard input}:490    .text.E_EEPROM_XMC4_WriteByte:0000003c $d
    {standard input}:495    .text.E_EEPROM_XMC4_WriteArray:00000000 $t
    {standard input}:502    .text.E_EEPROM_XMC4_WriteArray:00000000 E_EEPROM_XMC4_WriteArray
    {standard input}:586    .text.E_EEPROM_XMC4_WriteArray:00000060 $d
    {standard input}:591    .text.E_EEPROM_XMC4_ReadByte:00000000 $t
    {standard input}:598    .text.E_EEPROM_XMC4_ReadByte:00000000 E_EEPROM_XMC4_ReadByte
    {standard input}:647    .text.E_EEPROM_XMC4_ReadByte:00000028 $d
    {standard input}:652    .text.E_EEPROM_XMC4_ReadArray:00000000 $t
    {standard input}:659    .text.E_EEPROM_XMC4_ReadArray:00000000 E_EEPROM_XMC4_ReadArray
    {standard input}:733    .text.E_EEPROM_XMC4_ReadArray:0000004c $d
    {standard input}:738    .text.E_EEPROM_XMC4_UpdateFlashContents:00000000 $t
    {standard input}:745    .text.E_EEPROM_XMC4_UpdateFlashContents:00000000 E_EEPROM_XMC4_UpdateFlashContents
    {standard input}:939    .text.E_EEPROM_XMC4_lWriteToFlash:00000000 E_EEPROM_XMC4_lWriteToFlash
    {standard input}:864    .text.E_EEPROM_XMC4_UpdateFlashContents:00000094 $d
    {standard input}:872    .text.E_EEPROM_XMC4_IsFlashEmpty:00000000 $t
    {standard input}:879    .text.E_EEPROM_XMC4_IsFlashEmpty:00000000 E_EEPROM_XMC4_IsFlashEmpty
    {standard input}:928    .text.E_EEPROM_XMC4_IsFlashEmpty:00000024 $d
    {standard input}:933    .text.E_EEPROM_XMC4_lWriteToFlash:00000000 $t
    {standard input}:1306   .text.E_EEPROM_XMC4_lCalculateCRC:00000000 E_EEPROM_XMC4_lCalculateCRC
    {standard input}:1034   .text.E_EEPROM_XMC4_lWriteToFlash:0000006c $d
    {standard input}:1042   .text.E_EEPROM_XMC4_lInitReadSectorInfo:00000000 $t
    {standard input}:1178   .text.E_EEPROM_XMC4_lInitReadSectorInfo:000000a8 $d
    {standard input}:1184   .text.E_EEPROM_XMC4_lInitEraseStateMachine:00000000 $t
    {standard input}:1295   .text.E_EEPROM_XMC4_lInitEraseStateMachine:0000007c $d
    {standard input}:1300   .text.E_EEPROM_XMC4_lCalculateCRC:00000000 $t
    {standard input}:1349   .text.E_EEPROM_XMC4_lCalculateCRC:0000002c $d
    {standard input}:1354   .text.E_EEPROM_XMC4_lCopyFlashToRam:00000000 $t
    {standard input}:1432   .text.E_EEPROM_XMC4_lCopyFlashToRam:00000048 $d

UNDEFINED SYMBOLS
XMC_FCE_Enable
XMC_FCE_Init
memcmp
XMC_FLASH_ClearStatus
XMC_FLASH_ProgramPage
XMC_FLASH_GetStatus
XMC_FLASH_EraseSector
XMC_FCE_CalculateCRC32
